{"version":3,"sources":["pages/Admin.tsx","UserPool.tsx","components/Account.tsx","components/Main/Options/OptionLink.tsx","components/Main/Options/OptionsUserBox.tsx","components/Main/Options/home.svg","components/Main/Options/user.svg","components/Main/Options/settings.svg","components/Main/Options/login.svg","components/Main/Options/register.svg","components/Main/Options/OptionsBox.tsx","components/Main/AppTitle/AppTitle.tsx","components/Main/LeftColumn.tsx","components/Main/Users/FindUserForm.tsx","components/Main/Users/FindUser.tsx","components/Main/Users/components/FollowButton.tsx","components/Main/Users/components/UnfollowButton.tsx","components/Main/Users/components/SuggestedUserFollowButton.tsx","components/Main/Users/UserSuggestion.tsx","components/Main/Users/UserSuggestions.tsx","components/Main/RightColumn.tsx","pages/PageNotFound.tsx","components/Timeline/PostBoxForm.tsx","components/Timeline/PostBit.tsx","components/Main/BitList/reply.svg","components/Main/BitList/rebit.svg","components/Main/BitList/rebited.svg","components/Main/BitList/like.svg","components/Main/BitList/liked.svg","components/Main/BitList/dislike.svg","components/Main/BitList/disliked.svg","components/Main/BitList/BitButtonBar.tsx","components/Main/BitList/OutsideAlerter.js","components/Main/BitList/BitTag.tsx","components/Main/BitList/delete.svg","components/Main/BitList/Bit.tsx","components/Main/BitList/BitList.tsx","components/Timeline/TimelineBitList.tsx","pages/Timeline.tsx","components/UserPage/components/UserBanner.tsx","components/UserPage/components/UserPhoto.tsx","components/UserPage/components/FollowButton.tsx","components/UserPage/components/UnfollowButton.tsx","components/UserPage/components/EditProfileButton.tsx","components/UserPage/components/UserFollowButton.tsx","components/UserPage/components/UserInfo.tsx","components/UserPage/UserHeader.tsx","components/UserPage/UserBitList.tsx","components/UserPage/UserNotFound.tsx","pages/UserPage.tsx","components/BitPage/BitNotFound.tsx","pages/BitPage.tsx","components/Settings/ChangeEmailConfirmation.tsx","components/Settings/ChangeEmail.tsx","components/Settings/ChangePasswordConfirmation.tsx","components/Settings/ChangePassword.tsx","components/Settings/DeleteAccountConfirmation.tsx","components/Settings/DeleteAccount.tsx","components/Settings/LogoutButton.tsx","pages/Settings.tsx","pages/Login.tsx","pages/Register.tsx","PrivateRoute.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["Admin","document","title","CognitoUserPool","UserPoolId","ClientId","AccountContext","createContext","undefined","Account","isLoggedIn","setIsLoggedIn","myHandle","setMyHandle","children","API_URL","url","useState","currHandle","setCurrHandle","isAdmin","setIsAdmin","isFollowing","setIsFollowing","refreshList","setRefreshList","useEffect","getSession","then","session","user","username","catch","err","a","Promise","resolve","reject","Pool","getCurrentUser","getUserAttributes","attributes","results","attribute","Name","Value","token","getIdToken","getJwtToken","headers","Authorization","createFollowEdge","destinationHandle","fetch","method","response","text","result","console","log","error","deleteFollowEdge","authenticate","Username","Password","CognitoUser","authDetails","AuthenticationDetails","authenticateUser","onSuccess","data","onFailure","newPasswordRequired","isEmailUsed","email","json","Provider","value","logout","signOut","refreshBitList","OptionLink","logo","link","className","to","src","alt","UserBox","useContext","OptionsBox","Option","this","homeOption","HomeLogo","userOption","UserLogo","settingsOption","SettingsLogo","loginOption","LoginLogo","registerOption","RegisterLogo","AppTitle","LeftColumn","id","FindUserForm","handle","updateHandle","buttonStatus","updateButton","history","useHistory","handleSubmitClick","e","preventDefault","push","type","name","placeholder","onChange","target","length","onClick","disabled","style","opacity","FindUser","FollowButton","props","setIsFollowingSuggested","follow","UnfollowButton","unfollow","SuggestedUserFollowButton","isFollowingSuggested","UserSuggestion","process","display_name","UserSuggestions","suggestedUsers","updateSuggestions","isLoading","setIsLoading","fetchSuggestions","items","map","key","RightColumn","PageNotFound","PostBoxForm","post","updatePost","remainingChars","updateChars","charCounterColour","changeCounterColour","errorOccurred","setErrorOccurred","enableButton","disableButton","requestOptions","body","JSON","stringify","content","parse","code","finally","color","PostBit","BitButtonBar","rebitShift","setRebitShift","likeShift","setLikeShift","dislikeShift","setDislikeShift","isReposted","setIsReposted","isLiked","setIsLiked","isDisliked","setIsDisliked","rebit","post_id","like","unlike","dislike","undislike","ReplyButton","replies","RebitedButton","RebitButton","reposts","LikedButton","LikeButton","likes","DislikedButton","DislikeButton","dislikes","OutsideAlerter","ref","setIsPopoverOpen","wrapperRef","useRef","isPopoverOpen","handleClickOutside","event","current","contains","addEventListener","removeEventListener","BitTag","tag","validChars","includes","i","taggedAccount","slice","postContent","timestampFormat","post_time","bitTime","Date","milliseconds","now","getTime","temp","Math","floor","days","day","String","getDate","getMonth","getFullYear","hours","minutes","seconds","Bit","bitInfo","splitContent","split","initialContent","myPost","isDeleted","setIsDeleted","handleDeletePost","display","fontSize","main_bit","rebitter","marginTop","DeleteButton","index","BitList","bits","bit","TimelineBitList","setBits","requestCounter","setRequestCounter","fetchBits","requestId","Timeline","UserBanner","UserPhoto","StyledPopup","Styled","Popup","EditProfileButton","open","setOpen","closeModal","setInputs","displayName","setDisplayName","bio","setBio","displayNameEmpty","setDisplayNameEmpty","displayNameTooLong","setDisplayNameTooLong","bioTooLong","setBioTooLong","onSubmit","trim","go","width","modal","onClose","UserFollowButton","isHater","UserInfo","updatePageState","months","date","x","month","year","formatDate","created_on","bits_count","following_count","follower_count","UserHeader","UserBitList","UserNotFound","UserPage","setUser","listState","setListState","useLocation","pathname","fetchUser","listen","location","stateId","BitNotFound","BitPage","setPost","fetchPost","fetchInfo","ChangeEmailConfirmation","newEmail","marginBottom","ChangeEmail","setNewEmail","password","setPassword","emailExists","setEmailExists","isPasswordCorrect","setIsPasswordCorrect","hasSucceeded","setHasSucceeded","CognitoUserAttribute","updateAttributes","ChangePasswordConfirmation","ChangePassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","isNewPasswordValid","setIsNewPasswordValid","passwordsMismatch","setPasswordsMismatch","correctOldPassword","setCorrectOldPassword","checkIsPasswordValid","s","passwordArray","requirements","forEach","char","every","changePassword","DeleteAccountConfirmation","active","backgroundColor","borderColor","deleteConfirmation","setDeleteConfirmation","isConfirmationCorrect","setIsConfirmationCorrect","accessToken","jwtToken","resultJSON","LogoutButton","Settings","DeleteAccount","Login","setUsername","emailNotVerified","setEmailNotVerified","invalidLoginDetails","setInvalidLoginDetails","payload","Register","setEmail","confirmPassword","setConfirmPassword","isUsernameEmpty","setIsUsernameEmpty","isUsernameTooLong","setIsUsernameTooLong","isEmailEmpty","setIsEmailEmpty","usernameExists","setUsernameExists","isUsernameValid","setIsUsernameValid","isEmailValid","setIsEmailValid","isPasswordValid","setIsPasswordValid","areFieldsValid","UserPool","signUp","checkIsHandleValid","handleArray","PrivateRoute","Component","path","render","App","basename","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1c1c95d9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Admin: React.FC<{}> = () => {\r\n  document.title = \"Admin / Bitter\";\r\n\r\n  return <div>Admin page</div>;\r\n};\r\n\r\nexport default Admin;\r\n","import {\r\n  CognitoUserPool,\r\n  // CognitoUserAttribute,\r\n} from \"amazon-cognito-identity-js\";\r\n\r\nconst poolData = {\r\n  UserPoolId: \"eu-west-2_QLAkrTR47\",\r\n  ClientId: \"4m544sn8a7kf2023cq5qs4polc\",\r\n};\r\n\r\nexport default new CognitoUserPool(poolData);\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport {\r\n  CognitoUser,\r\n  AuthenticationDetails,\r\n  CognitoUserSession,\r\n  CognitoUserAttribute,\r\n} from \"amazon-cognito-identity-js\";\r\nimport Pool from \"../UserPool\";\r\n\r\n// type ContextProps = {\r\n//   API_URL: string;\r\n//   authenticate: (Username: string, Password: string) => Promise<any>;\r\n//   isEmailUsed: (email: string) => Promise<boolean>\r\n//   getSession: () => Promise<any>;\r\n//   logout: () => void;\r\n//   refreshList: boolean;\r\n//   setRefreshList: React.Dispatch<React.SetStateAction<boolean>>;\r\n//   refreshBitList: () => void\r\n//   isLoggedIn: boolean;\r\n//   setIsLoggedIn: React.Dispatch<React.SetStateAction<boolean>>;\r\n//   isFollowing: boolean;\r\n//   setIsFollowing: React.Dispatch<React.SetStateAction<boolean>>;\r\n//   currHandle: string;\r\n//   setCurrHandle: React.Dispatch<React.SetStateAction<string>>;\r\n//   isAdmin: boolean;\r\n//   setIsAdmin: React.Dispatch<React.SetStateAction<boolean>>;\r\n//   myHandle: string;\r\n//   setMyHandle: React.Dispatch<React.SetStateAction<string>>;\r\n//   createFollowEdge: (sourceId: string, destinationId: string) => Promise<void>;\r\n//   deleteFollowEdge: (sourceId: string, destinationId: string) => Promise<void>;\r\n// };\r\n\r\ninterface Props {\r\n  isLoggedIn: boolean;\r\n  setIsLoggedIn: React.Dispatch<React.SetStateAction<boolean>>;\r\n  myHandle: string;\r\n  setMyHandle: React.Dispatch<React.SetStateAction<string>>;\r\n  children: any;\r\n}\r\n\r\nconst AccountContext = createContext<any>(undefined);\r\n\r\nconst Account: React.FC<Props> = ({\r\n  isLoggedIn,\r\n  setIsLoggedIn,\r\n  myHandle,\r\n  setMyHandle,\r\n  children,\r\n}) => {\r\n  const url = \"https://7z39hjjfg1.execute-api.eu-west-2.amazonaws.com\";\r\n  const stage = \"/dev\";\r\n  const API_URL: string = url + stage;\r\n\r\n  // Info about current user being viewed, i.e. owner of /u/handle\r\n  const [currHandle, setCurrHandle] = useState<string>(\"\");\r\n  const [isAdmin, setIsAdmin] = useState<boolean>(false);\r\n  const [isFollowing, setIsFollowing] = useState<boolean>(false);\r\n\r\n  // Hook to refresh timeline after posting\r\n  const [refreshList, setRefreshList] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    getSession()\r\n      .then((session: any) => {\r\n        if (session[\"custom:role\"] === \"admin\") setIsAdmin(true);\r\n        setIsLoggedIn(true);\r\n        setMyHandle(session.user.username);\r\n      })\r\n      .catch((err) => {\r\n        setMyHandle(\"\");\r\n        setIsAdmin(false);\r\n\r\n        return;\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const getSession = async (): Promise<any> =>\r\n    await new Promise((resolve, reject) => {\r\n      const user: CognitoUser | null = Pool.getCurrentUser();\r\n      if (user) {\r\n        user.getSession(\r\n          async (err: Error, session: CognitoUserSession | null) => {\r\n            if (err) {\r\n              reject();\r\n            } else if (session) {\r\n              const attributes: any = await new Promise((resolve, reject) => {\r\n                user.getUserAttributes(\r\n                  (\r\n                    err: Error | undefined,\r\n                    attributes: CognitoUserAttribute[] | undefined\r\n                  ) => {\r\n                    if (err) {\r\n                      reject(err);\r\n                    } else if (attributes) {\r\n                      const results: any = {};\r\n\r\n                      for (let attribute of attributes) {\r\n                        const { Name, Value } = attribute;\r\n                        results[Name] = Value;\r\n                      }\r\n\r\n                      resolve(results);\r\n                    }\r\n                  }\r\n                );\r\n              });\r\n\r\n              const token = session.getIdToken().getJwtToken();\r\n\r\n              resolve({\r\n                user,\r\n                headers: {\r\n                  Authorization: token,\r\n                  \"x-api-key\": attributes[\"custom:apikey\"],\r\n                },\r\n                ...session,\r\n                ...attributes,\r\n              });\r\n            }\r\n          }\r\n        );\r\n      } else {\r\n        reject(\"Not logged in\");\r\n      }\r\n    });\r\n\r\n  const createFollowEdge = async (destinationHandle: string) => {\r\n    getSession().then(async ({ headers }) => {\r\n      fetch(`${API_URL}/users/follow?handle=${destinationHandle}`, {\r\n        headers,\r\n        method: \"POST\",\r\n      })\r\n        .then((response) => response.text())\r\n        .then((result) => console.log(result))\r\n        .catch((error) => console.error(\"Follow error:\", error));\r\n    });\r\n  };\r\n\r\n  const deleteFollowEdge = async (destinationHandle: string) => {\r\n    getSession().then(async ({ headers }) => {\r\n      fetch(`${API_URL}/users/follow?handle=${destinationHandle}`, {\r\n        headers,\r\n        method: \"DELETE\",\r\n      })\r\n        .then((response) => response.text())\r\n        .then((result) => console.log(result))\r\n        .catch((error) => console.error(\"Unfollow error:\", error));\r\n    });\r\n  };\r\n\r\n  const authenticate = async (Username: string, Password: string) =>\r\n    await new Promise((resolve, reject) => {\r\n      const user = new CognitoUser({ Username, Pool });\r\n\r\n      const authDetails = new AuthenticationDetails({ Username, Password });\r\n\r\n      user.authenticateUser(authDetails, {\r\n        onSuccess: (data) => {\r\n          console.log(\"onSuccess:\", data);\r\n          resolve(data);\r\n        },\r\n\r\n        onFailure: (err) => {\r\n          console.error(\"onFailure:\", err);\r\n          reject(err);\r\n        },\r\n\r\n        newPasswordRequired: (data) => {\r\n          console.log(\"newPasswordRequired:\", data);\r\n          resolve(data);\r\n        },\r\n      });\r\n    });\r\n\r\n  const logout = () => {\r\n    const user = Pool.getCurrentUser();\r\n    if (user) {\r\n      user.signOut();\r\n      setMyHandle(\"\");\r\n      setIsLoggedIn(false);\r\n      setIsAdmin(false);\r\n    }\r\n  };\r\n\r\n  const isEmailUsed = async (email: string): Promise<boolean> => {\r\n    const data = await fetch(`${API_URL}/users/exists?email=${email}`);\r\n    const result = await data.json();\r\n    console.log(result);\r\n\r\n    return result;\r\n  };\r\n\r\n  const refreshBitList = () => {\r\n    setRefreshList(!refreshList);\r\n  };\r\n\r\n  return (\r\n    <AccountContext.Provider\r\n      value={{\r\n        API_URL,\r\n        authenticate,\r\n        isEmailUsed,\r\n        getSession,\r\n        logout,\r\n        refreshList,\r\n        setRefreshList,\r\n        refreshBitList,\r\n        isLoggedIn,\r\n        setIsLoggedIn,\r\n        isFollowing,\r\n        setIsFollowing,\r\n        currHandle,\r\n        setCurrHandle,\r\n        isAdmin,\r\n        setIsAdmin,\r\n        myHandle,\r\n        setMyHandle,\r\n        createFollowEdge,\r\n        deleteFollowEdge,\r\n      }}\r\n    >\r\n      {children}\r\n    </AccountContext.Provider>\r\n  );\r\n};\r\n\r\nexport { Account, AccountContext };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Option {\r\n  title: string;\r\n  link: string;\r\n  logo: string;\r\n}\r\n\r\nconst OptionLink: React.FC<Option> = ({ title, logo, link }) => {\r\n  return (\r\n    <div className=\"option\">\r\n      <Link to={link}>\r\n        <div className=\"option-logo-box\">\r\n          <img src={logo} alt=\"logo\" className=\"option-logo\" />\r\n        </div>\r\n        <div className=\"option-title\">{title}</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionLink;\r\n","import React, { useContext } from \"react\";\r\nimport { AccountContext } from \"../../Account\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserBox: React.FC<{}> = () => {\r\n  const { myHandle } = useContext(AccountContext);\r\n  return (\r\n    <div className=\"options-userbox\">\r\n      Logged in as: <Link to={`/u/${myHandle}`}>@{myHandle}</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserBox;\r\n","export default __webpack_public_path__ + \"static/media/home.671555e9.svg\";","export default __webpack_public_path__ + \"static/media/user.279444fa.svg\";","export default __webpack_public_path__ + \"static/media/settings.949b2aef.svg\";","export default __webpack_public_path__ + \"static/media/login.58b554af.svg\";","export default __webpack_public_path__ + \"static/media/register.2c6615d2.svg\";","import React, { useContext } from \"react\";\r\nimport \"./OptionsBox.css\";\r\nimport OptionLink from \"./OptionLink\";\r\nimport UserBox from \"./OptionsUserBox\";\r\n\r\nimport HomeLogo from \"./home.svg\";\r\nimport UserLogo from \"./user.svg\";\r\nimport SettingsLogo from \"./settings.svg\";\r\nimport LoginLogo from \"./login.svg\";\r\nimport RegisterLogo from \"./register.svg\";\r\n\r\nimport { AccountContext } from \"../../Account\";\r\n\r\nconst OptionsBox: React.FC<{}> = () => {\r\n  const { isLoggedIn }: { isLoggedIn: boolean } = useContext(AccountContext);\r\n\r\n  class Option {\r\n    title: string;\r\n    link: string;\r\n    logo: string; // hmmm\r\n\r\n    public constructor(title: string, link: string, logo: string) {\r\n      this.title = title;\r\n      this.link = link;\r\n      this.logo = logo;\r\n    }\r\n  }\r\n\r\n  const homeOption = new Option(\"Home\", \"/home\", HomeLogo);\r\n  const userOption = new Option(\"My Page\", \"/me\", UserLogo);\r\n  const settingsOption = new Option(\"Settings\", \"/settings\", SettingsLogo);\r\n  const loginOption = new Option(\"Login\", \"/login\", LoginLogo);\r\n  const registerOption = new Option(\"Register\", \"/register\", RegisterLogo);\r\n\r\n  return (\r\n    <div className=\"options-box\">\r\n      <OptionLink {...homeOption} />\r\n      {isLoggedIn ? (\r\n        <>\r\n          {/* My page/settings if logged in */}\r\n          <OptionLink {...userOption} />\r\n          <OptionLink {...settingsOption} />\r\n          <hr />\r\n          <UserBox />\r\n        </>\r\n      ) : (\r\n        <>\r\n          {/* Login/Register if not logged in */}\r\n          <OptionLink {...loginOption} />\r\n          <OptionLink {...registerOption} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionsBox;\r\n","import React from \"react\";\r\nimport \"./AppTitle.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AppTitle: React.FC<{}> = () => {\r\n  return (\r\n    <div className=\"app-title-box\">\r\n      <Link to=\"/home\">\r\n        <div className=\"app-title\">Bitter</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppTitle;\r\n","import React from \"react\";\r\n\r\nimport OptionsBox from \"./Options/OptionsBox\";\r\nimport AppTitle from \"./AppTitle/AppTitle\";\r\n\r\nconst LeftColumn: React.FC<{}> = () => {\r\n  return (\r\n    <div id=\"left-col\" className=\"main-col\">\r\n      <AppTitle />\r\n      <OptionsBox />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftColumn;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst FindUserForm: React.FC<{}> = () => {\r\n  const [handle, updateHandle] = useState<string>(\"\");\r\n\r\n  const [buttonStatus, updateButton] = useState<\r\n    [isButtonEnabled: boolean, buttonOpacity: string]\r\n  >([false, \"50%\"]);\r\n\r\n  const handleChange = (e: any) => {\r\n    const { value } = e.target;\r\n    updateHandle(value);\r\n\r\n    // Can't press button if input field is empty\r\n    if (value.length === 0) {\r\n      updateButton([false, \"50%\"]);\r\n    } else {\r\n      updateButton([true, \"100%\"]);\r\n    }\r\n  };\r\n\r\n  const history = useHistory();\r\n  const handleSubmitClick = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    // Go to user page\r\n    history.push(`/u/${handle}`);\r\n\r\n    // Reset input field\r\n    updateHandle(\"\");\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <span className=\"textbox\">\r\n        @\r\n        <input\r\n          type=\"text\"\r\n          name=\"url\"\r\n          id=\"find-user-input-field\"\r\n          value={handle}\r\n          placeholder=\"handle\"\r\n          onChange={handleChange}\r\n        />\r\n      </span>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"button-primary\"\r\n        onClick={handleSubmitClick}\r\n        disabled={!buttonStatus[0]}\r\n        style={{ opacity: buttonStatus[1] }}\r\n      >\r\n        Search\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FindUserForm;\r\n","import React from \"react\";\r\nimport \"./findusers.css\";\r\nimport FindUserForm from \"./FindUserForm\";\r\n\r\nconst FindUser: React.FC<{}> = () => {\r\n  return (\r\n    <div className=\"find-user\">\r\n      <div className=\"find-user-title\">Go to user's page:</div>\r\n      <FindUserForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindUser;\r\n","import React, { useContext } from \"react\";\r\nimport { AccountContext } from \"../../../Account\";\r\n\r\ntype Props = {\r\n  setIsFollowingSuggested: React.Dispatch<React.SetStateAction<boolean>>;\r\n  handle: string;\r\n};\r\n\r\nconst FollowButton: React.FC<Props> = (props) => {\r\n  const { setIsFollowingSuggested, handle } = props;\r\n\r\n  const {\r\n    currHandle,\r\n    setIsFollowing,\r\n    createFollowEdge,\r\n    isLoggedIn,\r\n  }: {\r\n    currHandle: string;\r\n    setIsFollowing: React.Dispatch<React.SetStateAction<boolean>>;\r\n    createFollowEdge: (destinationHandle: string) => Promise<void>;\r\n    isLoggedIn: boolean;\r\n  } = useContext(AccountContext);\r\n\r\n  const follow = async () => {\r\n    if (isLoggedIn) {\r\n      setIsFollowingSuggested(true);\r\n\r\n      // Update userPage if same user\r\n      if (handle === currHandle) {\r\n        setIsFollowing(true);\r\n      }\r\n\r\n      // update db\r\n      createFollowEdge(handle);\r\n    } else {\r\n      console.log(\"Not logged in!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button className=\"button\" onClick={follow}>\r\n      Follow\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FollowButton;\r\n","import React, { useContext } from \"react\";\r\nimport { AccountContext } from \"../../../Account\";\r\n\r\ntype Props = {\r\n  setIsFollowingSuggested: React.Dispatch<React.SetStateAction<boolean>>;\r\n  handle: string;\r\n};\r\n\r\nconst UnfollowButton: React.FC<Props> = (props) => {\r\n  const { setIsFollowingSuggested, handle } = props;\r\n\r\n  const {\r\n    myHandle,\r\n    currHandle,\r\n    setIsFollowing,\r\n    deleteFollowEdge,\r\n  }: {\r\n    myHandle: string;\r\n    currHandle: string;\r\n    setIsFollowing: React.Dispatch<React.SetStateAction<boolean>>;\r\n    deleteFollowEdge: (destinationHandle: string) => Promise<void>;\r\n  } = useContext(AccountContext);\r\n\r\n  const unfollow = async () => {\r\n    if (myHandle === handle) {\r\n      console.log(\"Can't unfollow yourself!\");\r\n      return;\r\n    }\r\n\r\n    setIsFollowingSuggested(false);\r\n\r\n    // Update userPage if same user\r\n    if (handle === currHandle) {\r\n      setIsFollowing(false);\r\n    }\r\n\r\n    // update db\r\n    deleteFollowEdge(handle);\r\n  };\r\n\r\n  return (\r\n    <button className=\"button-primary\" onClick={unfollow}>\r\n      Following\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default UnfollowButton;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport FollowButton from \"./FollowButton\";\r\nimport UnfollowButton from \"./UnfollowButton\";\r\nimport { AccountContext } from \"../../../Account\";\r\n\r\ninterface Props {\r\n  className: string;\r\n  handle: string;\r\n  isFollowing?: boolean;\r\n}\r\n\r\nconst SuggestedUserFollowButton: React.FC<Props> = (props) => {\r\n  const [isFollowingSuggested, setIsFollowingSuggested] = useState<boolean>(\r\n    false\r\n  );\r\n\r\n  const { handle, className } = props;\r\n\r\n  const {\r\n    currHandle,\r\n    myHandle,\r\n    isFollowing,\r\n  }: {\r\n    currHandle: string;\r\n    myHandle: string;\r\n    isFollowing: boolean;\r\n  } = useContext(AccountContext);\r\n\r\n  // Check if following on mount\r\n  useEffect(() => {\r\n    if (props.isFollowing) {\r\n      setIsFollowingSuggested(props.isFollowing);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.isFollowing]);\r\n\r\n  // Link to main user if same\r\n  useEffect(() => {\r\n    if (handle === currHandle) {\r\n      setIsFollowingSuggested(isFollowing);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isFollowing]);\r\n\r\n  return (\r\n    <div className={className}>\r\n      {isFollowingSuggested ? (\r\n        <UnfollowButton\r\n          handle={handle}\r\n          setIsFollowingSuggested={setIsFollowingSuggested}\r\n        />\r\n      ) : (\r\n        <FollowButton\r\n          handle={handle}\r\n          setIsFollowingSuggested={setIsFollowingSuggested}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuggestedUserFollowButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SuggestedUserFollowButton from \"./components/SuggestedUserFollowButton\";\r\n\r\ninterface User {\r\n  handle: string;\r\n  display_name?: string;\r\n  isFollowing?: boolean;\r\n}\r\n\r\nconst UserSuggestion: React.FC<User> = (user) => {\r\n  return (\r\n    <>\r\n      <hr className=\"solid\" />\r\n      <div className=\"user-suggestion\">\r\n        <Link to={\"/u/\" + user.handle}>\r\n          <div className=\"user-suggestion-pfp\">\r\n            <img\r\n              src={`${process.env.PUBLIC_URL}/placeholder48.png`}\r\n              alt=\"profile pic\"\r\n            />\r\n          </div>\r\n          <div className=\"user-suggestion-info\">\r\n            <div className=\"user-suggestion-displayname\">\r\n              {user.display_name}\r\n            </div>\r\n            <div className=\"user-suggestion-handle\">@{user.handle}</div>\r\n          </div>\r\n        </Link>\r\n        <SuggestedUserFollowButton\r\n          className=\"user-suggestion-follow\"\r\n          handle={user.handle}\r\n          isFollowing={user.isFollowing}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserSuggestion;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./usersuggestions.css\";\r\nimport UserSuggestion from \"./UserSuggestion\";\r\nimport { AccountContext } from \"../../Account\";\r\n\r\nimport User from \"../../../Types/User\";\r\n\r\nconst UserSuggestions: React.FC<{}> = () => {\r\n  const [suggestedUsers, updateSuggestions] = useState<Array<User>>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const {\r\n    API_URL,\r\n    myHandle,\r\n  }: { API_URL: string; myHandle: string } = useContext(AccountContext);\r\n\r\n  // Fetch 3 random users from the database\r\n  const fetchSuggestions = async () => {\r\n    setIsLoading(true);\r\n\r\n    const data = await fetch(`${API_URL}/users/suggested?myHandle=${myHandle}`);\r\n    const items: Array<User> = await data.json();\r\n    updateSuggestions(items);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSuggestions();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [myHandle]);\r\n\r\n  return (\r\n    <div className=\"user-suggestions\">\r\n      <div className=\"user-suggestions-title\">Suggested users</div>\r\n      {isLoading ? (\r\n        <div className=\"user-suggestions-loader\">\r\n          <div className=\"loader\" />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {suggestedUsers.map((user) => (\r\n            <UserSuggestion {...user} key={user.handle} />\r\n          ))}\r\n          <div className=\"user-suggestions-reroller\">\r\n            <button onClick={fetchSuggestions}> Reroll </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSuggestions;\r\n","import React from \"react\";\r\n\r\nimport FindUser from \"./Users/FindUser\";\r\nimport UserSuggestions from \"./Users/UserSuggestions\";\r\n\r\nconst RightColumn: React.FC<{}> = () => {\r\n  return (\r\n    <div id=\"right-col\" className=\"main-col\">\r\n      <FindUser />\r\n      <UserSuggestions />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RightColumn;\r\n","import React from \"react\";\r\n\r\nconst PageNotFound: React.FC<{}> = () => {\r\n  return (\r\n    <>\r\n      <div className=\"nopage-code\">404</div>\r\n      <div className=\"nopage-msg\">Page not found</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport { AccountContext } from \"../Account\";\r\n\r\nconst PostBoxForm: React.FC<{}> = () => {\r\n  const {\r\n    API_URL,\r\n    getSession,\r\n    refreshBitList,\r\n  }: {\r\n    API_URL: string;\r\n    getSession: () => Promise<any>;\r\n    refreshBitList: () => void;\r\n  } = useContext(AccountContext);\r\n\r\n  const [post, updatePost] = useState<string>(\"\");\r\n  const [remainingChars, updateChars] = useState<number>(140);\r\n  const [charCounterColour, changeCounterColour] = useState<string>(\"black\");\r\n  const [buttonStatus, updateButton] = useState<[boolean, string]>([\r\n    false,\r\n    \"50%\",\r\n  ]);\r\n\r\n  const [errorOccurred, setErrorOccurred] = useState<boolean>(false);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const enableButton = () => {\r\n    updateButton([true, \"100%\"]);\r\n  };\r\n  const disableButton = () => {\r\n    updateButton([false, \"50%\"]);\r\n  };\r\n\r\n  const handleChange = (e: any) => {\r\n    const { value } = e.target;\r\n    updatePost(value);\r\n  };\r\n\r\n  const updateCharCount = () => {\r\n    updateChars(140 - post.length);\r\n    if (post.length > 140) {\r\n      disableButton();\r\n      changeCounterColour(\"red\");\r\n    } else if (post.length > 110) {\r\n      enableButton();\r\n      changeCounterColour(\"orange\");\r\n    } else if (post.length === 0) {\r\n      disableButton();\r\n      changeCounterColour(\"black\");\r\n    } else {\r\n      enableButton();\r\n      changeCounterColour(\"black\");\r\n    }\r\n  };\r\n\r\n  // Update char count when post changes\r\n  useEffect(() => {\r\n    updateCharCount();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [post]);\r\n\r\n  const handleSubmitClick = async (e: any) => {\r\n    e.preventDefault();\r\n    getSession().then(async ({ headers }) => {\r\n      // Check valid length\r\n      if (remainingChars < 0 || remainingChars >= 140) {\r\n        console.error(\"Invalid post length.\");\r\n        return;\r\n      }\r\n\r\n      // Set loading\r\n      setIsLoading(true);\r\n      setErrorOccurred(false);\r\n\r\n      // Set Content-Type (might be correct by default)\r\n      headers[\"Content-Type\"] = \"application/json\";\r\n\r\n      // Request options\r\n      var requestOptions = {\r\n        headers,\r\n        method: \"POST\",\r\n        body: JSON.stringify({ content: post }),\r\n      };\r\n\r\n      // Post to API\r\n      await fetch(`${API_URL}/bits`, requestOptions)\r\n        .then((response) => response.text())\r\n        .then((result) => {\r\n          const resultJSON = JSON.parse(result);\r\n\r\n          // success/failure handling\r\n          if (resultJSON.code === \"postSuccess\") {\r\n            // Empty input field\r\n            updatePost(\"\");\r\n          } else {\r\n            // Error message\r\n            setErrorOccurred(true);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"Error:\", err);\r\n          setErrorOccurred(true);\r\n        })\r\n        .finally(() => {\r\n          // Set not loading\r\n          setIsLoading(false);\r\n          refreshBitList();\r\n        });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"postbox-input\">\r\n      {isLoading ? (\r\n        <div id=\"postbox-loader-wrapper\">\r\n          <div className=\"loader\" />\r\n        </div>\r\n      ) : (\r\n        <form>\r\n          <TextareaAutosize\r\n            className=\"bit-content\"\r\n            id=\"postbox-input-field\"\r\n            placeholder=\"Post a bit!\"\r\n            value={post}\r\n            onChange={handleChange}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"button-primary\"\r\n            onClick={handleSubmitClick}\r\n            disabled={!buttonStatus[0]}\r\n            style={{ opacity: buttonStatus[1] }}\r\n          >\r\n            Post\r\n          </button>\r\n          <div id=\"postbox-charcount\" style={{ color: charCounterColour }}>\r\n            Remaining characters: {remainingChars}\r\n          </div>\r\n\r\n          {/* Generic error message */}\r\n          {errorOccurred ? (\r\n            <div id=\"postbox-error\">An error occurred.</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostBoxForm;\r\n","import React, { useContext } from \"react\";\r\nimport { AccountContext } from \"../Account\";\r\nimport PostBoxForm from \"./PostBoxForm\";\r\nimport \"./Postbox.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PostBit: React.FC<{}> = () => {\r\n  const { isLoggedIn }: { isLoggedIn: boolean } = useContext(AccountContext);\r\n\r\n  return (\r\n    <div className=\"postbox\">\r\n      {isLoggedIn ? (\r\n        <>\r\n          <div className=\"postbox-pfp\">\r\n            <img\r\n              src={`${process.env.PUBLIC_URL}/placeholder48.png`}\r\n              alt=\"pfp\"\r\n            />\r\n          </div>\r\n          <PostBoxForm />\r\n        </>\r\n      ) : (\r\n        <div id=\"postbox-login\">\r\n          <Link to=\"/login\">Login</Link> or <Link to=\"/register\">register</Link>{\" \"}\r\n          to post bits\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostBit;\r\n","export default __webpack_public_path__ + \"static/media/reply.34834fc8.svg\";","export default __webpack_public_path__ + \"static/media/rebit.e12d3005.svg\";","export default __webpack_public_path__ + \"static/media/rebited.756a8af7.svg\";","export default __webpack_public_path__ + \"static/media/like.231952c6.svg\";","export default __webpack_public_path__ + \"static/media/liked.bf753584.svg\";","export default __webpack_public_path__ + \"static/media/dislike.6101c61e.svg\";","export default __webpack_public_path__ + \"static/media/disliked.e954b579.svg\";","import React, { useContext, useState, useEffect } from \"react\";\r\nimport ReplyButton from \"./reply.svg\";\r\nimport RebitButton from \"./rebit.svg\";\r\nimport RebitedButton from \"./rebited.svg\";\r\nimport LikeButton from \"./like.svg\";\r\nimport LikedButton from \"./liked.svg\";\r\nimport DislikeButton from \"./dislike.svg\";\r\nimport DislikedButton from \"./disliked.svg\";\r\nimport { AccountContext } from \"../../Account\";\r\n\r\nimport BitInfo from \"../../../Types/BitInfo\";\r\n\r\nconst BitButtonBar: React.FC<BitInfo> = (props) => {\r\n  // Affect like/dislike counter\r\n  const [rebitShift, setRebitShift] = useState<number>(0);\r\n  const [likeShift, setLikeShift] = useState<number>(0);\r\n  const [dislikeShift, setDislikeShift] = useState<number>(0);\r\n\r\n  const {\r\n    API_URL,\r\n    getSession,\r\n    isLoggedIn,\r\n  }: {\r\n    API_URL: string;\r\n    getSession: () => Promise<any>;\r\n    isLoggedIn: boolean;\r\n  } = useContext(AccountContext);\r\n\r\n  const [isReposted, setIsReposted] = useState<boolean>(\r\n    typeof props.isReposted === \"undefined\" ? false : props.isReposted\r\n  );\r\n  const [isLiked, setIsLiked] = useState<boolean>(false);\r\n  const [isDisliked, setIsDisliked] = useState<boolean>(\r\n    typeof props.isDisliked === \"undefined\" ? false : props.isDisliked\r\n  );\r\n\r\n  useEffect(() => {\r\n    setIsReposted(\r\n      typeof props.isReposted === \"undefined\" ? false : props.isReposted\r\n    );\r\n    setIsLiked(typeof props.isLiked === \"undefined\" ? false : props.isLiked);\r\n    setIsDisliked(\r\n      typeof props.isDisliked === \"undefined\" ? false : props.isDisliked\r\n    );\r\n  }, [props.isReposted, props.isLiked, props.isDisliked]);\r\n\r\n  const reply = () => {\r\n    console.log(`reply to tweet ${props.post_id}`);\r\n    console.log(JSON.stringify(props));\r\n  };\r\n\r\n  const rebit = async () => {\r\n    if (!isLoggedIn) return;\r\n    setIsReposted(true);\r\n    setRebitShift(rebitShift + 1);\r\n    getSession().then(async ({ headers }) => {\r\n      fetch(`${API_URL}/bits/rebit?post_id=${props.post_id}`, {\r\n        headers,\r\n        method: \"POST\",\r\n      })\r\n        .then((response) => response.text())\r\n        .then((result) => console.log(result))\r\n        .catch((error) => console.error(error));\r\n    });\r\n  };\r\n\r\n  const unrebit = () => {\r\n    if (!isLoggedIn) return;\r\n    setIsReposted(false);\r\n    setRebitShift(rebitShift - 1);\r\n    getSession().then(async ({ headers }) => {\r\n      fetch(`${API_URL}/bits/rebit?post_id=${props.post_id}`, {\r\n        headers,\r\n        method: \"DELETE\",\r\n      })\r\n        .then((response) => response.text())\r\n        .then((result) => console.log(result))\r\n        .catch((error) => console.error(error));\r\n    });\r\n  };\r\n\r\n  const like = async () => {\r\n    if (!isLoggedIn) return;\r\n    setIsLiked(true);\r\n    setLikeShift(likeShift + 1);\r\n    getSession().then(async ({ headers }) => {\r\n      fetch(`${API_URL}/bits/like?post_id=${props.post_id}`, {\r\n        headers,\r\n        method: \"POST\",\r\n      })\r\n        .then((response) => response.text())\r\n        .then((result) => console.log(result))\r\n        .catch((error) => console.error(error));\r\n    });\r\n  };\r\n\r\n  const unlike = async () => {\r\n    if (!isLoggedIn) return;\r\n    setIsLiked(false);\r\n    setLikeShift(likeShift - 1);\r\n    getSession().then(async ({ headers }) => {\r\n      fetch(`${API_URL}/bits/like?post_id=${props.post_id}`, {\r\n        headers,\r\n        method: \"DELETE\",\r\n      })\r\n        .then((response) => response.text())\r\n        .then((result) => console.log(result))\r\n        .catch((error) => console.error(error));\r\n    });\r\n  };\r\n\r\n  const dislike = async () => {\r\n    if (!isLoggedIn) return;\r\n    setIsDisliked(true);\r\n    setDislikeShift(dislikeShift + 1);\r\n    getSession().then(async ({ headers }) => {\r\n      fetch(`${API_URL}/bits/dislike?post_id=${props.post_id}`, {\r\n        headers,\r\n        method: \"POST\",\r\n      })\r\n        .then((response) => response.text())\r\n        .then((result) => console.log(result))\r\n        .catch((error) => console.error(error));\r\n    });\r\n  };\r\n\r\n  const undislike = async () => {\r\n    if (!isLoggedIn) return;\r\n    setIsDisliked(false);\r\n    setDislikeShift(dislikeShift - 1);\r\n    getSession().then(async ({ headers }) => {\r\n      fetch(`${API_URL}/bits/dislike?post_id=${props.post_id}`, {\r\n        headers,\r\n        method: \"DELETE\",\r\n      })\r\n        .then((response) => response.text())\r\n        .then((result) => console.log(result))\r\n        .catch((error) => console.error(error));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"bit-buttons\">\r\n      <div className=\"bit-stat\">\r\n        <img src={ReplyButton} alt=\"reply button\" onClick={reply} />\r\n        <div className=\"bit-stat-count\">{props.replies}</div>\r\n      </div>\r\n\r\n      <div className=\"bit-stat\">\r\n        {isReposted ? (\r\n          <img src={RebitedButton} alt=\"rebit button\" onClick={unrebit} />\r\n        ) : (\r\n          <img src={RebitButton} alt=\"rebit button\" onClick={rebit} />\r\n        )}\r\n        <div className=\"bit-stat-count\">{props.reposts + rebitShift}</div>\r\n      </div>\r\n\r\n      <div className=\"bit-stat\">\r\n        {isLiked ? (\r\n          <img src={LikedButton} alt=\"liked button\" onClick={unlike} />\r\n        ) : (\r\n          <img src={LikeButton} alt=\"like button\" onClick={like} />\r\n        )}\r\n        <div className=\"bit-stat-count\">{props.likes + likeShift}</div>\r\n      </div>\r\n\r\n      <div className=\"bit-stat\">\r\n        {isDisliked ? (\r\n          <img src={DislikedButton} alt=\"disliked button\" onClick={undislike} />\r\n        ) : (\r\n          <img src={DislikeButton} alt=\"dislike button\" onClick={dislike} />\r\n        )}\r\n        <div className=\"bit-stat-count\">{props.dislikes + dislikeShift}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BitButtonBar;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\nfunction useOutsideAlerter(ref, isPopoverOpen, setIsPopoverOpen) {\r\n  useEffect(() => {\r\n    /**\r\n     * Alert if clicked on outside of element\r\n     */\r\n    function handleClickOutside(event) {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        setIsPopoverOpen(false);\r\n      }\r\n    }\r\n\r\n    // Bind the event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ref]);\r\n}\r\n\r\n/**\r\n * Component that alerts if you click outside of it\r\n */\r\nexport default function OutsideAlerter(props) {\r\n  const wrapperRef = useRef(null);\r\n  useOutsideAlerter(wrapperRef, props.isPopoverOpen, props.setIsPopoverOpen);\r\n\r\n  return <div ref={wrapperRef}>{props.children}</div>;\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport interface BitTagProps {\r\n  tag: string;\r\n}\r\n\r\nconst BitTag: React.FC<BitTagProps> = ({ tag }) => {\r\n  const validChars: string =\r\n    \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n\r\n  // No tag if first character isn't a letter or digit (invalid handle)\r\n  if (!validChars.includes(tag[0])) {\r\n    return <>@{tag}</>;\r\n  }\r\n\r\n  // Up to where are chars letters? (Tag up to that point)\r\n  let i = 1;\r\n  while (i < tag.length) {\r\n    if (!validChars.includes(tag[i])) {\r\n      break;\r\n    } else {\r\n      i++;\r\n    }\r\n  }\r\n\r\n  // Split into tag and not-tag\r\n  const taggedAccount = tag.slice(0, i);\r\n  const postContent = tag.slice(i);\r\n\r\n  return (\r\n    <>\r\n      <Link to={`/u/${taggedAccount}`} style={{ color: \"#3498db\" }}>\r\n        @{taggedAccount}\r\n      </Link>\r\n      {postContent}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BitTag;\r\n","export default __webpack_public_path__ + \"static/media/delete.932bd998.svg\";","import React, { useContext, useState } from \"react\";\r\nimport BitButtonBar from \"./BitButtonBar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OutsideAlerter from \"./OutsideAlerter\";\r\n\r\nimport BitInfo from \"../../../Types/BitInfo\";\r\nimport BitTag from \"./BitTag\";\r\nimport { AccountContext } from \"../../Account\";\r\nimport DeleteButton from \"./delete.svg\";\r\nimport RebitedButton from \"./rebited.svg\";\r\n\r\n// interface BitInfo {\r\n//   content: string;\r\n//   dislikes: number;\r\n//   display_name: string;\r\n//   handle: string;\r\n//   index: number;\r\n//   likes: number;\r\n//   post_id: number;\r\n//   post_time: string;\r\n//   replies: number;\r\n//   reply_to: number;\r\n//   reposts: number;\r\n//   status: number;\r\n//   user_id: string;\r\n// }\r\n\r\nfunction timestampFormat(post_time: string): string {\r\n  const bitTime: Date = new Date(post_time);\r\n  const milliseconds: number = Date.now() - bitTime.getTime(); // Difference in milliseconds\r\n\r\n  const months: Array<string> = [\r\n    \"Jan \",\r\n    \"Feb \",\r\n    \"Mar \",\r\n    \"Apr \",\r\n    \"May \",\r\n    \"Jun \",\r\n    \"Jul \",\r\n    \"Aug \",\r\n    \"Sep \",\r\n    \"Oct \",\r\n    \"Nov \",\r\n    \"Dec \",\r\n  ];\r\n\r\n  var temp: number = Math.floor(milliseconds / 1000);\r\n\r\n  var days: number = Math.floor((temp %= 31536000) / 86400);\r\n  if (days) {\r\n    // Full date if over a month ago, show year if not current year\r\n    if (days > 30) {\r\n      const day: string = String(bitTime.getDate());\r\n      const month: string = months[bitTime.getMonth()];\r\n      const year: string =\r\n        bitTime.getFullYear() === new Date().getFullYear()\r\n          ? \"\"\r\n          : \", bitTime.getFullYear()\";\r\n\r\n      return month + day + year;\r\n    }\r\n\r\n    return days + \"d\";\r\n  }\r\n  var hours: number = Math.floor((temp %= 86400) / 3600);\r\n  if (hours) {\r\n    return hours + \"h\";\r\n  }\r\n  var minutes: number = Math.floor((temp %= 3600) / 60);\r\n  if (minutes) {\r\n    return minutes + \"m\";\r\n  }\r\n  var seconds: number = temp % 60;\r\n  if (seconds) {\r\n    return seconds + \"s\";\r\n  }\r\n  return \"less than a second\"; //'just now' //or other string you like;\r\n}\r\n\r\nconst Bit: React.FC<BitInfo> = (bitInfo) => {\r\n  const {\r\n    API_URL,\r\n    getSession,\r\n    isAdmin,\r\n  }: {\r\n    API_URL: string;\r\n    getSession: () => Promise<any>;\r\n    isAdmin: boolean;\r\n  } = useContext(AccountContext);\r\n\r\n  console.log(bitInfo);\r\n\r\n  // Split for tags\r\n  const splitContent = bitInfo.content.split(\"@\");\r\n  const initialContent = splitContent[0];\r\n\r\n  // myHandle to show/hide delete button\r\n  const { myHandle }: { myHandle: string } = useContext(AccountContext);\r\n  const myPost = myHandle === bitInfo.handle;\r\n\r\n  // Hook to hide tweet after deleting\r\n  const [isDeleted, setIsDeleted] = useState<boolean>(false);\r\n\r\n  // Delete button\r\n  const handleDeletePost = async (e: any) => {\r\n    e.preventDefault();\r\n    getSession().then(async ({ headers }) => {\r\n      // Request options\r\n      var requestOptions = {\r\n        headers,\r\n        method: \"DELETE\",\r\n      };\r\n\r\n      // Call API\r\n      await fetch(`${API_URL}/bits?post_id=${bitInfo.post_id}`, requestOptions)\r\n        .then((response) => response.text())\r\n        .then((result) => {\r\n          const resultJSON = JSON.parse(result);\r\n\r\n          // success/failure handling\r\n          if (resultJSON.code === \"deleteSuccess\") {\r\n            // Hide post\r\n            setIsDeleted(true);\r\n          } else {\r\n            // Error message\r\n            console.log(result);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"Error:\", err);\r\n          // setErrorOccurred(true);\r\n        });\r\n    });\r\n  };\r\n\r\n  // Delete popover\r\n  const [isPopoverOpen, setIsPopoverOpen] = useState<boolean>(false);\r\n\r\n  // Numbers for interactions\r\n  return (\r\n    <div\r\n      className=\"bit\"\r\n      style={{\r\n        display: isDeleted ? \"none\" : \"\",\r\n        fontSize: bitInfo.main_bit ? \"20px\" : \"\",\r\n      }}\r\n    >\r\n      {/* Show who rebitted if rebit */}\r\n      <div\r\n        className=\"bit-rebitter\"\r\n        style={{\r\n          display: typeof bitInfo.rebitter === \"undefined\" ? \"none\" : \"\",\r\n        }}\r\n      >\r\n        <img src={RebitedButton} alt=\"rebit button\" />\r\n        Rebitted by{\" \"}\r\n        <Link to={`/u/${bitInfo.rebitter}`}>@{bitInfo.rebitter}</Link>\r\n      </div>\r\n\r\n      {/* Poster profile picture */}\r\n      <Link to={`/u/${bitInfo.handle}`}>\r\n        <div className=\"bit-pfp\">\r\n          <img\r\n            src={`${process.env.PUBLIC_URL}/placeholder48.png`}\r\n            alt=\"profile pic\"\r\n          />\r\n        </div>\r\n      </Link>\r\n\r\n      <div\r\n        className=\"bit-content\"\r\n        style={{\r\n          marginTop: typeof bitInfo.rebitter === \"undefined\" ? \"\" : \"4px\",\r\n        }}\r\n      >\r\n        {/* Poster info */}\r\n        <div className=\"bit-info\">\r\n          <Link to={`/u/${bitInfo.handle}`}>\r\n            <span className=\"bit-info-displayname\">{bitInfo.display_name}</span>\r\n            <span className=\"bit-info-handle\">@{bitInfo.handle}</span>\r\n          </Link>\r\n          ・\r\n          <Link to={`/b/${bitInfo.post_id}`}>\r\n            <span className=\"bit-info-time\">\r\n              {timestampFormat(bitInfo.post_time)}\r\n            </span>\r\n          </Link>\r\n        </div>\r\n\r\n        <input\r\n          type=\"image\"\r\n          className=\"bit-delete\"\r\n          src={DeleteButton}\r\n          alt=\"dislike button\"\r\n          onClick={() => setIsPopoverOpen(true)}\r\n          style={{ display: myPost || isAdmin ? \"block\" : \"none\" }}\r\n        />\r\n\r\n        <OutsideAlerter\r\n          isPopoverOpen={isPopoverOpen}\r\n          setIsPopoverOpen={setIsPopoverOpen}\r\n        >\r\n          <div\r\n            className=\"bit-delete-popover\"\r\n            style={{ display: isPopoverOpen ? \"block\" : \"none\" }}\r\n            // handleClickOutside={() => setIsPopoverOpen(false)}\r\n          >\r\n            <button\r\n              className=\"button-primary delete-post\"\r\n              onClick={handleDeletePost}\r\n            >\r\n              Delete post\r\n            </button>\r\n            <div className=\"delete-post-arrow\" />\r\n          </div>\r\n        </OutsideAlerter>\r\n\r\n        <div className=\"bit-text\">\r\n          {initialContent}\r\n          {splitContent.slice(1).map((tag, index) => (\r\n            <BitTag tag={tag} key={index} />\r\n          ))}\r\n        </div>\r\n        <BitButtonBar {...bitInfo} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bit;\r\n","import React from \"react\";\r\nimport Bit from \"./Bit\";\r\nimport \"./Bits.css\";\r\n\r\nimport BitInfo from \"../../../Types/BitInfo\";\r\n// interface BitInfo {\r\n//   content: string;\r\n//   dislikes: number;\r\n//   display_name: string;\r\n//   handle: string;\r\n//   index: number;\r\n//   likes: number;\r\n//   post_id: number;\r\n//   post_time: string;\r\n//   replies: number;\r\n//   reply_to: number;\r\n//   reposts: number;\r\n//   status: number;\r\n//   user_id: string;\r\n// }\r\n\r\ninterface Props {\r\n  bits: Array<BitInfo>;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst BitList: React.FC<Props> = ({ bits, isLoading }) => {\r\n  // retrieve bits from props\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <div className=\"bitlist-loader\">\r\n          <div className=\"loader\" />\r\n        </div>\r\n      ) : bits.length > 0 ? (\r\n        bits.map((bit, index) => (\r\n          <Bit {...bit} key={bit.post_id + bit.rebitter} index={index} />\r\n        ))\r\n      ) : (\r\n        <div className=\"no-bits\">No bits found</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BitList;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AccountContext } from \"../Account\";\r\nimport BitList from \"../Main/BitList/BitList\";\r\nimport BitInfo from \"../../Types/BitInfo\";\r\n\r\n// interface BitInfo {\r\n//   content: string;\r\n//   dislikes: number;\r\n//   display_name: string;\r\n//   handle: string;\r\n//   index: number;\r\n//   likes: number;\r\n//   post_id: number;\r\n//   post_time: string;\r\n//   replies: number;\r\n//   reply_to: number;\r\n//   reposts: number;\r\n//   status: number;\r\n//   user_id: string;\r\n// }\r\n\r\nconst TimelineBitList: React.FC<{}> = () => {\r\n  // fetch list of bits\r\n  const [bits, setBits] = useState<Array<BitInfo>>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [requestCounter, setRequestCounter] = useState<number>(0);\r\n\r\n  const {\r\n    API_URL,\r\n    myHandle,\r\n    refreshList,\r\n  }: {\r\n    API_URL: string;\r\n    myHandle: string;\r\n    refreshList: boolean;\r\n  } = useContext(AccountContext);\r\n\r\n  useEffect(() => {\r\n    fetchBits();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [myHandle, refreshList]);\r\n\r\n  const fetchBits = async () => {\r\n    setRequestCounter(requestCounter + 1);\r\n    const requestId = requestCounter;\r\n\r\n    setIsLoading(true);\r\n    // setBits([]);\r\n    console.log(\"Fetching bits...\");\r\n\r\n    const data = await fetch(`${API_URL}/bits/timeline?handle=${myHandle}`);\r\n    const items: Array<BitInfo> = await data.json();\r\n\r\n    // Only update if final request ie ignore if another request was sent out after\r\n    if (requestId === requestCounter) {\r\n      setBits(items);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // pass into BitList\r\n  return <BitList bits={bits} isLoading={isLoading} />;\r\n};\r\n\r\nexport default TimelineBitList;\r\n","import React from \"react\";\r\nimport PostBit from \"../components/Timeline/PostBit\";\r\nimport TimelineBitList from \"../components/Timeline/TimelineBitList\";\r\nimport \"../components/Timeline/Timeline.css\";\r\n\r\nconst Timeline: React.FC<{}> = () => {\r\n  document.title = \"Home / Bitter\";\r\n\r\n  return (\r\n    <div className=\"timeline\">\r\n      <PostBit />\r\n      <TimelineBitList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timeline;\r\n","import React from \"react\";\r\n\r\nconst UserBanner: React.FC<{ handle: string }> = ({ handle }) => {\r\n  return (\r\n    <div className=\"user-banner\">\r\n      <img\r\n        src={`${process.env.PUBLIC_URL}/placeholderbanner.png`}\r\n        alt=\"profile banner\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserBanner;\r\n","import React from \"react\";\r\n\r\nconst UserPhoto: React.FC<{ handle: string }> = ({ handle }) => {\r\n  return (\r\n    <div className=\"user-photo\">\r\n      <img\r\n        src={`${process.env.PUBLIC_URL}/placeholderpfp.png`}\r\n        alt=\"profile pic\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPhoto;\r\n","import React, { useContext } from \"react\";\r\nimport { AccountContext } from \"../../Account\";\r\n\r\nconst FollowButton: React.FC<{ handle: string }> = ({ handle }) => {\r\n  const {\r\n    setIsFollowing,\r\n    createFollowEdge,\r\n    isLoggedIn,\r\n  }: {\r\n    setIsFollowing: React.Dispatch<React.SetStateAction<boolean>>;\r\n    createFollowEdge: (destinationHandle: string) => Promise<void>;\r\n    isLoggedIn: boolean;\r\n  } = useContext(AccountContext);\r\n\r\n  const follow = async () => {\r\n    if (isLoggedIn) {\r\n      setIsFollowing(true);\r\n\r\n      // update db\r\n      createFollowEdge(handle);\r\n    } else {\r\n      console.log(\"Not logged in\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button className=\"button\" onClick={follow}>\r\n      Follow\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FollowButton;\r\n","import React, { useContext } from \"react\";\r\nimport { AccountContext } from \"../../Account\";\r\n\r\nconst UnfollowButton: React.FC<{ handle: string }> = ({ handle }) => {\r\n  const {\r\n    myHandle,\r\n    setIsFollowing,\r\n    deleteFollowEdge,\r\n  }: {\r\n    myHandle: string;\r\n    setIsFollowing: React.Dispatch<React.SetStateAction<boolean>>;\r\n    deleteFollowEdge: (destinationHandle: string) => Promise<void>;\r\n  } = useContext(AccountContext);\r\n\r\n  const unfollow = async () => {\r\n    if (myHandle === handle) {\r\n      console.log(\"Can't unfollow yourself!\");\r\n      return;\r\n    }\r\n\r\n    setIsFollowing(false);\r\n\r\n    // update db\r\n    deleteFollowEdge(handle);\r\n  };\r\n\r\n  return (\r\n    <button className=\"button-primary\" onClick={unfollow}>\r\n      Following\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default UnfollowButton;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport Popup from \"reactjs-popup\";\r\nimport Styled from \"styled-components\";\r\nimport { AccountContext } from \"../../Account\";\r\n\r\nconst StyledPopup = Styled(Popup)`\r\n  &-content {\r\n    width: 300px;\r\n    padding: 40px;\r\n    text-align: center;\r\n    transform: translateY(-160px)\r\n  }\r\n`;\r\n\r\n// EDIT PROFILE\r\n\r\nconst EditProfileButton: React.FC<{ bio?: string; display_name?: string }> = (\r\n  props\r\n) => {\r\n  // Whether modal is open or not\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const closeModal = () => {\r\n    setInputs();\r\n    setOpen(false);\r\n  };\r\n  const history = useHistory();\r\n\r\n  // Input field states\r\n  const [displayName, setDisplayName] = useState<string>(\"\");\r\n  const [bio, setBio] = useState<string>(\"\");\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  // Error messages\r\n  const [displayNameEmpty, setDisplayNameEmpty] = useState<boolean>(false);\r\n  const [displayNameTooLong, setDisplayNameTooLong] = useState<boolean>(false);\r\n  const [bioTooLong, setBioTooLong] = useState<boolean>(false);\r\n  const [errorOccurred, setErrorOccurred] = useState<boolean>(false);\r\n\r\n  const {\r\n    getSession,\r\n    API_URL,\r\n  }: { getSession: () => Promise<any>; API_URL: string } = useContext(\r\n    AccountContext\r\n  );\r\n\r\n  const setInputs = () => {\r\n    if (props.display_name) {\r\n      setDisplayName(props.display_name);\r\n    }\r\n    if (props.bio) {\r\n      setBio(props.bio);\r\n    }\r\n  };\r\n\r\n  // Update input fields on page load\r\n  useEffect(() => {\r\n    setInputs();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props]);\r\n\r\n  // Inputting changes\r\n  const handleBioChange = (e: any) => {\r\n    const { value } = e.target;\r\n    if (value.length > 160) {\r\n      setBioTooLong(true);\r\n    } else {\r\n      setBioTooLong(false);\r\n    }\r\n    setBio(value);\r\n  };\r\n  const handleDisplayNameChange = (e: any) => {\r\n    const { value } = e.target;\r\n    if (value.length === 0) {\r\n      setDisplayNameEmpty(true);\r\n      setDisplayNameTooLong(false);\r\n    } else if (value.length > 25) {\r\n      setDisplayNameEmpty(false);\r\n      setDisplayNameTooLong(true);\r\n    } else {\r\n      setDisplayNameEmpty(false);\r\n      setDisplayNameTooLong(false);\r\n    }\r\n    setDisplayName(value);\r\n  };\r\n\r\n  // Submit changes\r\n  const onSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    // Remove whitespace from start and end\r\n    setBio(bio.trim());\r\n    setDisplayName(displayName.trim());\r\n\r\n    // Check lengths\r\n    if (displayName.trim().length <= 0) {\r\n      setDisplayNameEmpty(true);\r\n      setDisplayNameTooLong(false);\r\n      return;\r\n    } else if (displayName.trim().length > 25) {\r\n      setDisplayNameEmpty(false);\r\n      setDisplayNameTooLong(true);\r\n      return;\r\n    }\r\n    if (bio.trim().length > 160) {\r\n      setBioTooLong(true);\r\n      return;\r\n    }\r\n\r\n    getSession().then(async ({ headers }) => {\r\n      // Set loading\r\n      setIsLoading(true);\r\n\r\n      // Set Content-Type (might be correct by default)\r\n      headers[\"Content-Type\"] = \"application/json\";\r\n\r\n      // Request options\r\n      var requestOptions = {\r\n        headers,\r\n        method: \"PATCH\",\r\n        body: JSON.stringify({ display_name: displayName, bio: bio }),\r\n      };\r\n\r\n      // Post to api\r\n      await fetch(`${API_URL}/users`, requestOptions)\r\n        .then((response) => response.text())\r\n        .then((result) => {\r\n          const resultJSON = JSON.parse(result);\r\n\r\n          // Success/failure handling\r\n          if (resultJSON.code === \"updateSuccess\") {\r\n            // Refresh page\r\n            history.go(0);\r\n          } else {\r\n            // Error message\r\n            setErrorOccurred(true);\r\n\r\n            // Set not loading\r\n            setIsLoading(false);\r\n          }\r\n        });\r\n\r\n      // Refresh page if successful\r\n      // Else show generic error message\r\n      closeModal();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"button\"\r\n        onClick={() => setOpen(true)}\r\n        style={{ width: \"140px\" }}\r\n      >\r\n        Edit Profile\r\n      </button>\r\n\r\n      <StyledPopup open={open} modal onClose={closeModal}>\r\n        {isLoading ? (\r\n          <div className=\"loader\"></div>\r\n        ) : (\r\n          <>\r\n            <div className=\"edit-profile-title\">Edit Profile</div>\r\n            <form onSubmit={onSubmit}>\r\n              <div className=\"edit-profile-label\">Change display name</div>\r\n              <TextareaAutosize\r\n                className=\"edit-profile-input\"\r\n                placeholder=\"Display name\"\r\n                value={displayName}\r\n                onChange={handleDisplayNameChange}\r\n              />\r\n              {/* Display name empty */}\r\n              {displayNameEmpty ? (\r\n                <div className=\"form-error-message\">\r\n                  Display name cannot be empty\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {/* Display name too long */}\r\n              {displayNameTooLong ? (\r\n                <div className=\"form-error-message\">\r\n                  Display name is too long\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <div className=\"edit-profile-label\">Change bio</div>\r\n              <TextareaAutosize\r\n                className=\"edit-profile-input\"\r\n                placeholder=\"Bio\"\r\n                value={bio}\r\n                onChange={handleBioChange}\r\n              />\r\n              {/* Bio too long */}\r\n              {bioTooLong ? (\r\n                <div className=\"form-error-message\">Bio too long</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {/* Post error occurred */}\r\n              {errorOccurred ? (\r\n                <div className=\"form-error-message\">Bio too long</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"button-primary edit-profile-button\"\r\n              >\r\n                Save changes\r\n              </button>\r\n              <br />\r\n              <button onClick={closeModal} style={{ marginTop: \"10px\" }}>\r\n                Cancel\r\n              </button>\r\n            </form>\r\n          </>\r\n        )}\r\n      </StyledPopup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfileButton;\r\n","import React, { useContext } from \"react\";\r\nimport FollowButton from \"./FollowButton\";\r\nimport UnfollowButton from \"./UnfollowButton\";\r\nimport EditProfileButton from \"./EditProfileButton\";\r\nimport { AccountContext } from \"../../Account\";\r\n\r\nconst UserFollowButton: React.FC<{\r\n  handle: string;\r\n  bio?: string;\r\n  display_name?: string;\r\n  isHater: () => boolean;\r\n}> = ({ handle, bio, display_name, isHater }) => {\r\n  const {\r\n    myHandle,\r\n    isFollowing,\r\n  }: {\r\n    myHandle: string;\r\n    isFollowing: boolean;\r\n    setIsFollowing: React.Dispatch<React.SetStateAction<boolean>>;\r\n  } = useContext(AccountContext);\r\n\r\n  return (\r\n    <div className=\"user-follow-button\">\r\n      {isHater() ? (\r\n        <div\r\n          className=\"user-branding user-branding-hater\"\r\n          title=\"This user has more dislikes than likes\"\r\n        >\r\n          HATER\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {myHandle === handle ? (\r\n        <EditProfileButton bio={bio} display_name={display_name} />\r\n      ) : isFollowing ? (\r\n        <UnfollowButton handle={handle} />\r\n      ) : (\r\n        <FollowButton handle={handle} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserFollowButton;\r\n","import React from \"react\";\r\n\r\nimport User from \"../../../Types/User\";\r\n// interface User {\r\n//   user_id: string;\r\n//   handle?: string;\r\n//   display_name?: string;\r\n//   created_on?: string;\r\n//   bio?: string;\r\n//   follower_count?: number;\r\n//   following_count?: number;\r\n// }\r\n\r\ninterface Props {\r\n  updatePageState: (stateId: number) => void;\r\n  user: User;\r\n}\r\n\r\nconst UserInfo: React.FC<Props> = ({ updatePageState, user }) => {\r\n  const printProps = () => {\r\n    console.log(\"yo\", user);\r\n  };\r\n\r\n  const months: Array<string> = [\r\n    \"Jan \",\r\n    \"Feb \",\r\n    \"Mar \",\r\n    \"Apr \",\r\n    \"May \",\r\n    \"Jun \",\r\n    \"Jul \",\r\n    \"Aug \",\r\n    \"Sep \",\r\n    \"Oct \",\r\n    \"Nov \",\r\n    \"Dec \",\r\n  ];\r\n\r\n  const formatDate = (date: string | undefined) => {\r\n    if (!date) return \"\";\r\n    const x = new Date(date);\r\n    const month = x.getMonth();\r\n    const year = x.getFullYear();\r\n    return \"Joined: \" + months[month] + \" \" + year;\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-info\">\r\n      <div className=\"user-displayname\" onClick={printProps}>\r\n        {user.display_name}\r\n      </div>\r\n      <div id=\"user-joindate\">{formatDate(user.created_on)}</div>\r\n      <div className=\"user-handle\">{user.handle}</div>\r\n      <div className=\"user-bio\">{user.bio}</div>\r\n      <div className=\"user-tabs\">\r\n        <div className=\"user-tab-bits user-current-tab\">\r\n          <b>{user.bits_count}</b> Bits\r\n        </div>\r\n        <div className=\"user-tab-replies \">\r\n          <b>{user.replies}</b> Bits and replies\r\n        </div>\r\n        <div className=\"user-following\">\r\n          <b>{user.following_count}</b> Following\r\n        </div>\r\n        <div className=\"user-followers\">\r\n          <b>{user.follower_count}</b> Followers\r\n        </div>\r\n        <div className=\"user-likes\">\r\n          <b>{user.likes}</b> Likes\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React from \"react\";\r\nimport \"./UserHeader.css\";\r\n\r\nimport UserBanner from \"./components/UserBanner\";\r\nimport UserPhoto from \"./components/UserPhoto\";\r\nimport UserFollowButton from \"./components/UserFollowButton\";\r\nimport UserInfo from \"./components/UserInfo\";\r\n\r\nimport User from \"../../Types/User\";\r\n// interface User {\r\n//   handle: string;\r\n//   handle?: string;\r\n//   display_name?: string;\r\n//   created_on?: string;\r\n//   bio?: string;\r\n//   follower_count?: number;\r\n//   following_count?: number;\r\n// }\r\n\r\ninterface Props {\r\n  updatePageState: (stateId: number) => void;\r\n  user: User;\r\n}\r\n\r\nconst UserHeader: React.FC<Props> = ({ updatePageState, user }) => {\r\n  const isHater = (): boolean => {\r\n    if (!user.dislikes || !user.likes) return false;\r\n    if (user.dislikes > user.likes) return true;\r\n    else return false;\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-header\">\r\n      <UserBanner handle={user.handle} />\r\n      <div className=\"user-pfp-follow\">\r\n        <UserPhoto handle={user.handle} />\r\n        <UserFollowButton\r\n          handle={user.handle}\r\n          bio={user.bio}\r\n          display_name={user.display_name}\r\n          isHater={isHater}\r\n        />\r\n      </div>\r\n      <UserInfo updatePageState={updatePageState} user={user} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserHeader;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AccountContext } from \"../Account\";\r\nimport BitList from \"../Main/BitList/BitList\";\r\nimport \"./UserBitList.css\";\r\n\r\nimport BitInfo from \"../../Types/BitInfo\";\r\n// interface BitInfo {\r\n//   content: string;\r\n//   dislikes: number;\r\n//   display_name: string;\r\n//   handle: string;\r\n//   index: number;\r\n//   likes: number;\r\n//   post_id: number;\r\n//   post_time: string;\r\n//   replies: number;\r\n//   reply_to: number;\r\n//   reposts: number;\r\n//   status: number;\r\n//   user_id: number;\r\n// }\r\n\r\ninterface Props {\r\n  replies: boolean;\r\n}\r\n\r\nconst UserBitList: React.FC<Props> = ({ replies }) => {\r\n  // fetch list of bits\r\n  const [bits, setBits] = useState<Array<BitInfo>>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const {\r\n    API_URL,\r\n    currHandle,\r\n    myHandle,\r\n  }: { API_URL: string; currHandle: string; myHandle: string } = useContext(\r\n    AccountContext\r\n  );\r\n\r\n  // Fetch posts every time the user changes\r\n  useEffect(() => {\r\n    fetchBits();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currHandle]);\r\n\r\n  const fetchBits = async () => {\r\n    setIsLoading(true);\r\n    const data = await fetch(\r\n      `${API_URL}/users/posts?handle=${currHandle}&myHandle=${myHandle}`\r\n    );\r\n    const items: Array<BitInfo> = await data.json();\r\n    setBits(items);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  // pass into BitList\r\n  return <BitList bits={bits} isLoading={isLoading} />;\r\n};\r\n\r\nexport default UserBitList;\r\n","import React from \"react\";\r\nimport \"./UserNotFound.css\";\r\n\r\ninterface Props {\r\n  handle: string;\r\n}\r\n\r\nconst UserNotFound: React.FC<Props> = ({ handle }) => {\r\n  // For if an invalid handle is loaded\r\n\r\n  return (\r\n    <div className=\"user-not-found\">\r\n      User <span className=\"user-not-found-handle\">@{handle}</span> could not be\r\n      found.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserNotFound;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport UserHeader from \"../components/UserPage/UserHeader\";\r\nimport UserBitList from \"../components/UserPage/UserBitList\";\r\nimport UserNotFound from \"../components/UserPage/UserNotFound\";\r\nimport \"../components/UserPage/UserPage.css\";\r\nimport { AccountContext } from \"../components/Account\";\r\n\r\nimport User from \"../Types/User\";\r\n// interface User {\r\n//   user_id: string;\r\n//   handle?: string;\r\n//   display_name?: string;\r\n//   created_on?: string;\r\n//   bio?: string;\r\n//   follower_count?: number;\r\n//   following_count?: number;\r\n// }\r\n\r\nconst UserPage: React.FC<{}> = () => {\r\n  const [user, setUser] = useState<User>({ handle: \"\" });\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [listState, setListState] = useState<any>(\r\n    <UserBitList replies={false} />\r\n  );\r\n\r\n  document.title = (user.handle ? \"@\" + user.handle : \"user\") + \" / Bitter\";\r\n\r\n  const {\r\n    API_URL,\r\n    currHandle,\r\n    setCurrHandle,\r\n    myHandle,\r\n    setIsFollowing,\r\n  }: {\r\n    API_URL: string;\r\n    currHandle: string;\r\n    setCurrHandle: React.Dispatch<React.SetStateAction<string>>;\r\n    myHandle: string;\r\n    setIsFollowing: React.Dispatch<React.SetStateAction<boolean>>;\r\n  } = useContext(AccountContext);\r\n\r\n  const handle: string = useLocation().pathname.slice(3);\r\n\r\n  // Database call for user by handle\r\n  const fetchUser = async (handle: string) => {\r\n    setIsLoading(true);\r\n    // Returns {user_id: ''} if user not found\r\n    const fetchUser = await fetch(\r\n      `${API_URL}/users?handle=${handle}&myHandle=${myHandle}`,\r\n      { method: \"GET\" }\r\n    );\r\n    const data: User = await fetchUser.json();\r\n    setUser(data);\r\n    setCurrHandle(data.handle);\r\n    if (data.isFollowing) {\r\n      setIsFollowing(data.isFollowing);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  // Load info on mount\r\n  useEffect(() => {\r\n    fetchUser(handle);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [myHandle]);\r\n\r\n  // Update when moving between user pages\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    return history.listen((location) => {\r\n      fetchUser(location.pathname.slice(3));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  // }, [history]);\r\n\r\n  // Change view between bits / bits+replies / following / followers / likes\r\n  function updatePageState(stateId: number): void {\r\n    if (stateId === 0) {\r\n      // Posts\r\n      setListState(<UserBitList replies={false} />);\r\n    } else if (stateId === 1) {\r\n      // Posts and replies\r\n      setListState(<UserBitList replies={true} />);\r\n    } else if (stateId === 2) {\r\n      // following list\r\n      //\r\n    } else if (stateId === 3) {\r\n      // followers list\r\n      //\r\n    } else if (stateId === 4) {\r\n      // like list\r\n      //\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <div className=\"user-loader\">\r\n          <div className=\"loader\" />\r\n        </div>\r\n      ) : (\r\n        <div className=\"user-page\">\r\n          {currHandle !== \"\" ? (\r\n            <>\r\n              <UserHeader updatePageState={updatePageState} user={user} />\r\n              {listState}\r\n            </>\r\n          ) : (\r\n            <UserNotFound handle={handle} />\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React from \"react\";\r\nimport \"./BitNotFound.css\";\r\n\r\nconst BitNotFound: React.FC<{}> = () => {\r\n  // For if post not found\r\n\r\n  return <div className=\"user-not-found\">Post could not be found.</div>;\r\n};\r\n\r\nexport default BitNotFound;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport BitNotFound from \"../components/BitPage/BitNotFound\";\r\nimport \"../components/UserPage/UserPage.css\";\r\nimport { AccountContext } from \"../components/Account\";\r\nimport Bit from \"../components/Main/BitList/Bit\";\r\n\r\nimport BitInfo from \"../Types/BitInfo\";\r\n\r\nconst BitPage: React.FC<{}> = () => {\r\n  const [post, setPost] = useState<BitInfo>({\r\n    post_id: \"\",\r\n    handle: \"\",\r\n    post_time: \"\",\r\n    content: \"\",\r\n    dislikes: 0,\r\n    likes: 0,\r\n    replies: 0,\r\n    reposts: 0,\r\n  });\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  document.title = (post.handle ? \"@\" + post.handle : \"post\") + \" / Bitter\";\r\n\r\n  const {\r\n    API_URL,\r\n    myHandle,\r\n  }: {\r\n    API_URL: string;\r\n    myHandle: string;\r\n  } = useContext(AccountContext);\r\n\r\n  const post_id: string = useLocation().pathname.slice(3);\r\n\r\n  // Database call for post by post_id\r\n  const fetchPost = async (post_id: string) => {\r\n    setIsLoading(true);\r\n    // Returns {post_id: '', handle: ''} if post not found\r\n    const fetchInfo = await fetch(\r\n      `${API_URL}/bits?post_id=${post_id}&handle=${myHandle}`\r\n    );\r\n    const data: BitInfo = await fetchInfo.json();\r\n    console.log(data);\r\n\r\n    setPost(data);\r\n    // if (data.haveLiked) {\r\n    //   setIsFollowing(data.isFollowing);\r\n    // }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  // Load post on mount\r\n  useEffect(() => {\r\n    fetchPost(post_id);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [myHandle]);\r\n\r\n  // Update when moving between post pages\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    return history.listen((location) => {\r\n      fetchPost(location.pathname.slice(3));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  // }, [history]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <div className=\"user-loader\">\r\n          <div className=\"loader\" />\r\n        </div>\r\n      ) : (\r\n        <div className=\"bit-page\">\r\n          {post.post_id !== \"\" ? <Bit {...post} main_bit /> : <BitNotFound />}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BitPage;\r\n","import React, { useState } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport Styled from \"styled-components\";\r\n\r\nexport interface ChangeEmailConfirmationProps {\r\n  onSubmit: (e: any) => Promise<void>;\r\n  newEmail: string;\r\n}\r\n\r\nconst StyledPopup = Styled(Popup)`\r\n  &-content {\r\n    width: 300px;\r\n    padding: 40px;\r\n    text-align: center;\r\n    transform: translateY(-160px)\r\n  }\r\n`;\r\n\r\nconst ChangeEmailConfirmation: React.FC<ChangeEmailConfirmationProps> = ({\r\n  onSubmit,\r\n  newEmail,\r\n}) => {\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const closeModal = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => {\r\n          if (newEmail.length > 0) {\r\n            setOpen(true);\r\n          }\r\n        }}\r\n      >\r\n        Submit\r\n      </button>\r\n\r\n      <StyledPopup open={open} modal onClose={closeModal}>\r\n        <div style={{ marginBottom: \"30px\" }}>\r\n          Are you sure you want to change your email to <b>{newEmail}</b>?\r\n        </div>\r\n        <button\r\n          onClick={async (e) => {\r\n            await onSubmit(e);\r\n            closeModal();\r\n          }}\r\n          type=\"submit\"\r\n          className=\"button-primary\"\r\n        >\r\n          Change email\r\n        </button>\r\n        <br />\r\n        <button onClick={closeModal} style={{ marginTop: \"10px\" }}>\r\n          Cancel\r\n        </button>\r\n      </StyledPopup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangeEmailConfirmation;\r\n","import { CognitoUserAttribute } from \"amazon-cognito-identity-js\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { AccountContext } from \"../Account\";\r\nimport ChangeEmailConfirmation from \"./ChangeEmailConfirmation\";\r\n\r\nexport interface ChangeEmailProps {}\r\n\r\nconst ChangeEmail: React.FC<ChangeEmailProps> = () => {\r\n  const [newEmail, setNewEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  const [emailExists, setEmailExists] = useState<boolean>(false);\r\n  const [isPasswordCorrect, setIsPasswordCorrect] = useState<boolean>(true);\r\n  const [hasSucceeded, setHasSucceeded] = useState<boolean>(false);\r\n\r\n  const {\r\n    authenticate,\r\n    getSession,\r\n    isEmailUsed,\r\n  }: {\r\n    authenticate: (Username: string, Password: string) => Promise<undefined>;\r\n    getSession: () => Promise<any>;\r\n    isEmailUsed: (email: string) => Promise<boolean>;\r\n  } = useContext(AccountContext);\r\n\r\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    // Check if email is already used\r\n    if (await isEmailUsed(newEmail)) {\r\n      setEmailExists(true);\r\n      return;\r\n    }\r\n\r\n    // check valid email (done by type = \"email\" ?)\r\n    getSession()\r\n      .then(({ user }) => {\r\n        // Check password\r\n        authenticate(user.username, password)\r\n          .then(() => {\r\n            const attributes = [\r\n              new CognitoUserAttribute({ Name: \"email\", Value: newEmail }),\r\n            ];\r\n\r\n            user.updateAttributes(\r\n              attributes,\r\n              (err: string, results: string) => {\r\n                if (err) {\r\n                  console.error(err);\r\n                } else {\r\n                  setHasSucceeded(true);\r\n                }\r\n                console.log(results);\r\n              }\r\n            );\r\n          })\r\n          .catch((err) => {\r\n            switch (err.code) {\r\n              case \"NotAuthorizedException\":\r\n                // Incorrect password\r\n                setIsPasswordCorrect(false);\r\n                break;\r\n            }\r\n          });\r\n      })\r\n      .catch((err) => console.error(err));\r\n\r\n    // check password\r\n    // highlight input if incorrect + error message\r\n    // send verification to new email\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-field\">\r\n      <div className=\"settings-header\">Change email</div>\r\n      <form onSubmit={(e) => e.preventDefault()}>\r\n        <div className=\"settings-input-field\">\r\n          <div className=\"settings-input-label\">New email:</div>\r\n          <div className=\"settings-input-wrapper\">\r\n            <input\r\n              value={newEmail}\r\n              onChange={(event) => {\r\n                setEmailExists(false);\r\n                setNewEmail(event.target.value);\r\n              }}\r\n              type=\"email\"\r\n              className={emailExists ? \"invalid\" : \"\"}\r\n            />\r\n\r\n            {/* Email already exists */}\r\n            {emailExists ? (\r\n              <div className=\"form-error-message\">\r\n                An account with this email already exists\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"settings-input-field\">\r\n          <div className=\"settings-input-label\">Password:</div>\r\n          <div className=\"settings-input-wrapper\">\r\n            <input\r\n              value={password}\r\n              onChange={(event) => {\r\n                setIsPasswordCorrect(true);\r\n                setPassword(event.target.value);\r\n              }}\r\n              type=\"password\"\r\n              className={isPasswordCorrect ? \"\" : \"invalid\"}\r\n            />\r\n\r\n            {/* Incorrect password */}\r\n            {isPasswordCorrect ? (\r\n              \"\"\r\n            ) : (\r\n              <div className=\"form-error-message\">Incorrect password</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <ChangeEmailConfirmation onSubmit={onSubmit} newEmail={newEmail} />\r\n      </form>\r\n\r\n      {/* Success message */}\r\n      {hasSucceeded ? (\r\n        <div className=\"form-success-message\">\r\n          Success! Please check your email to see a meaningless verification\r\n          code\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeEmail;\r\n","import React, { useState } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport Styled from \"styled-components\";\r\n\r\nexport interface ChangeEmailConfirmationProps {\r\n  onSubmit: (e: any) => Promise<void>;\r\n}\r\n\r\nconst StyledPopup = Styled(Popup)`\r\n  &-content {\r\n    width: 300px;\r\n    padding: 40px;\r\n    text-align: center;\r\n    font-size: 20px;\r\n    transform: translateY(-160px)\r\n  }\r\n  &-content button {\r\n    font-size: 12px;\r\n    line-height: 28px;\r\n    height: 28px;\r\n  }\r\n`;\r\n\r\nconst ChangePasswordConfirmation: React.FC<ChangeEmailConfirmationProps> = ({\r\n  onSubmit,\r\n}) => {\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const closeModal = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <button onClick={() => setOpen(true)}>Submit</button>\r\n\r\n      <StyledPopup open={open} modal onClose={closeModal}>\r\n        <div style={{ marginBottom: \"30px\" }}>\r\n          Are you sure you want to change your password?\r\n        </div>\r\n        <button\r\n          onClick={async (e) => {\r\n            await onSubmit(e);\r\n            closeModal();\r\n          }}\r\n          type=\"submit\"\r\n          className=\"button-primary\"\r\n        >\r\n          Change password\r\n        </button>\r\n        <br />\r\n        <button onClick={closeModal} style={{ marginTop: \"10px\" }}>\r\n          Cancel\r\n        </button>\r\n      </StyledPopup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordConfirmation;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AccountContext } from \"../Account\";\r\nimport ChangePasswordConfirmation from \"./ChangePasswordConfirmation\";\r\n\r\nexport interface ChangePasswordProps {}\r\n\r\nconst ChangePassword: React.FC<ChangePasswordProps> = () => {\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [newPassword, setNewPassword] = useState<string>(\"\");\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState<string>(\"\");\r\n\r\n  const [isNewPasswordValid, setIsNewPasswordValid] = useState<boolean>(true);\r\n  const [passwordsMismatch, setPasswordsMismatch] = useState<boolean>(false);\r\n  const [correctOldPassword, setCorrectOldPassword] = useState<boolean>(true);\r\n\r\n  const [hasSucceeded, setHasSucceeded] = useState<boolean>(false);\r\n\r\n  const { getSession, authenticate } = useContext(AccountContext);\r\n\r\n  const checkIsPasswordValid = (s: string) => {\r\n    if (s.length < 8) return false;\r\n    const passwordArray: Array<string> = s.split(\"\");\r\n\r\n    let requirements: Array<boolean> = [false, false, false, false];\r\n    const lowercase: string = \"abcdefghijklmnopqrstuvwxyz\";\r\n    const uppercase: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    const numbers: string = \"0123456789\";\r\n    const specials: string = \"=+-^$*.[]{}()?\\\"!@#%&/\\\\,><':;|_~`\";\r\n    const checkSelf = (x: boolean): boolean => x;\r\n\r\n    passwordArray.forEach((char) => {\r\n      if (lowercase.includes(char)) {\r\n        requirements[0] = true;\r\n      } else if (uppercase.includes(char)) {\r\n        requirements[1] = true;\r\n      } else if (numbers.includes(char)) {\r\n        requirements[2] = true;\r\n      } else if (specials.includes(char)) {\r\n        requirements[3] = true;\r\n      }\r\n    });\r\n\r\n    return requirements.every(checkSelf);\r\n  };\r\n\r\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    // Check new password is valid\r\n    if (!checkIsPasswordValid(newPassword)) {\r\n      console.log(\"invalid password\");\r\n      setIsNewPasswordValid(false);\r\n      setHasSucceeded(false);\r\n      return;\r\n    }\r\n\r\n    // Check password match\r\n    if (newPassword !== confirmNewPassword) {\r\n      setPasswordsMismatch(true);\r\n      setHasSucceeded(false);\r\n      return;\r\n    }\r\n\r\n    // Authenticate and change\r\n    getSession()\r\n      .then(({ user }: { user: any }) => {\r\n        // Check login details\r\n        authenticate(user.username, password)\r\n          .then(() => {\r\n            //Change password\r\n            user.changePassword(\r\n              password,\r\n              newPassword,\r\n              (err: any, result: any) => {\r\n                if (err) console.error(err);\r\n                if (result === \"SUCCESS\") {\r\n                  setHasSucceeded(true);\r\n                }\r\n              }\r\n            );\r\n          })\r\n          .catch((err: any) => {\r\n            const code = err.code;\r\n            switch (code) {\r\n              case \"NotAuthorizedException\":\r\n                setCorrectOldPassword(false);\r\n                break;\r\n              default:\r\n                console.error(err);\r\n            }\r\n            setHasSucceeded(false);\r\n          });\r\n      })\r\n      .catch((err: any) => {\r\n        console.error(err);\r\n      });\r\n    // check password\r\n    // highlight input if incorrect + error message\r\n    // send verification to new email\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-field\">\r\n      <div className=\"settings-header\">Current password:</div>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"settings-input-field\">\r\n          <div className=\"settings-input-label\">Password:</div>\r\n          <div className=\"settings-input-wrapper\">\r\n            <input\r\n              value={password}\r\n              onChange={(event) => {\r\n                setPassword(event.target.value);\r\n                setCorrectOldPassword(true);\r\n              }}\r\n              type=\"password\"\r\n              className={!correctOldPassword ? \"invalid\" : \"\"}\r\n            />\r\n\r\n            {/* Incorrect (old) password */}\r\n            {!correctOldPassword ? (\r\n              <div className=\"form-error-message\">Incorrect password</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"settings-input-field\">\r\n          <div className=\"settings-input-label\">New password:</div>\r\n          <div className=\"settings-input-wrapper\">\r\n            <input\r\n              value={newPassword}\r\n              onChange={(event) => {\r\n                setNewPassword(event.target.value);\r\n                setPasswordsMismatch(false);\r\n                setIsNewPasswordValid(true);\r\n              }}\r\n              type=\"password\"\r\n              className={\r\n                !isNewPasswordValid || passwordsMismatch ? \"invalid\" : \"\"\r\n              }\r\n            />\r\n\r\n            {/* Invalid password */}\r\n            {!isNewPasswordValid ? (\r\n              <div className=\"form-error-message\">Invalid password</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"settings-input-field\">\r\n          <div className=\"settings-input-label\">Confirm password:</div>\r\n          <div className=\"settings-input-wrapper\">\r\n            <input\r\n              value={confirmNewPassword}\r\n              onChange={(event) => {\r\n                setConfirmNewPassword(event.target.value);\r\n                setPasswordsMismatch(false);\r\n              }}\r\n              type=\"password\"\r\n              className={passwordsMismatch ? \"invalid\" : \"\"}\r\n            />\r\n\r\n            {/* Passwords don't match */}\r\n            {passwordsMismatch ? (\r\n              <div className=\"form-error-message\">\r\n                ! Passwords do not match !\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <ChangePasswordConfirmation onSubmit={onSubmit} />\r\n\r\n        {/* Success message */}\r\n        <div\r\n          style={{\r\n            fontSize: \"16px\",\r\n            display: hasSucceeded ? \"\" : \"none\",\r\n          }}\r\n          className=\"form-success-message\"\r\n        >\r\n          Password has been successfully changed\r\n        </div>\r\n      </form>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { useState } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport Styled from \"styled-components\";\r\n\r\nexport interface DeleteAccountConfirmationProps {\r\n  onSubmit: (e: any) => Promise<void>;\r\n  active: boolean;\r\n}\r\n\r\nconst StyledPopup = Styled(Popup)`\r\n  &-content {\r\n    width: 300px;\r\n    padding: 40px;\r\n    text-align: center;\r\n    transform: translateY(-160px);\r\n    font-size: 20px;\r\n  }\r\n  &-content button {\r\n    font-size: 12px;\r\n    line-height: 28px;\r\n    height: 28px;\r\n  }\r\n`;\r\n\r\nconst DeleteAccountConfirmation: React.FC<DeleteAccountConfirmationProps> = ({\r\n  onSubmit,\r\n  active,\r\n}) => {\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const closeModal = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => {\r\n          if (active) {\r\n            setOpen(true);\r\n          }\r\n        }}\r\n        className=\"button-primary\"\r\n        style={{\r\n          backgroundColor: \"#d3455b\",\r\n          borderColor: \"#d3455b\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n      >\r\n        Delete account\r\n      </button>\r\n\r\n      <StyledPopup open={open} modal onClose={closeModal}>\r\n        <div style={{ marginBottom: \"30px\" }}>\r\n          Are you sure you want to delete your account?\r\n        </div>\r\n        <button\r\n          onClick={async (e) => {\r\n            await onSubmit(e);\r\n            closeModal();\r\n          }}\r\n          type=\"submit\"\r\n          className=\"button-primary\"\r\n          style={{\r\n            backgroundColor: \"#d3455b\",\r\n            borderColor: \"#d3455b\",\r\n          }}\r\n        >\r\n          Delete account\r\n        </button>\r\n        <br />\r\n        <button\r\n          className=\"button-primary\"\r\n          onClick={closeModal}\r\n          style={{ marginTop: \"10px\" }}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </StyledPopup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteAccountConfirmation;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AccountContext } from \"../Account\";\r\nimport DeleteAccountConfirmation from \"./DeleteAccountConfirmation\";\r\n\r\nexport interface ChangeEmailProps {}\r\n\r\nconst ChangeEmail: React.FC<ChangeEmailProps> = () => {\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [deleteConfirmation, setDeleteConfirmation] = useState<string>(\"\");\r\n\r\n  const [isPasswordCorrect, setIsPasswordCorrect] = useState<boolean>(true);\r\n  const [isConfirmationCorrect, setIsConfirmationCorrect] = useState<boolean>(\r\n    true\r\n  );\r\n\r\n  const [errorOccurred, setErrorOccurred] = useState<boolean>(false);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const {\r\n    authenticate,\r\n    getSession,\r\n    logout,\r\n    API_URL,\r\n  }: {\r\n    authenticate: (Username: string, Password: string) => Promise<undefined>;\r\n    getSession: () => Promise<any>;\r\n    logout: () => void;\r\n    API_URL: string;\r\n  } = useContext(AccountContext);\r\n\r\n  const history = useHistory();\r\n  const onSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    // Check deleteConfirmation is correct\r\n    if (deleteConfirmation !== \"delete-me\") {\r\n      setIsConfirmationCorrect(false);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Check password\r\n    getSession()\r\n      .then(async ({ user, headers, accessToken }) => {\r\n        // Check login details\r\n        authenticate(user.username, password)\r\n          .then(async () => {\r\n            // Setup request\r\n            headers[\"Content-Type\"] = \"application/json\";\r\n            var requestOptions = {\r\n              headers,\r\n              method: \"DELETE\",\r\n            };\r\n\r\n            // Call API (delete from pool and database)\r\n            await fetch(\r\n              `${API_URL}/users?accessToken=${accessToken.jwtToken}`,\r\n              requestOptions\r\n            )\r\n              .then((response) => response.text())\r\n              .then((result) => {\r\n                const resultJSON = JSON.parse(result);\r\n\r\n                // success/failure handling\r\n                if (resultJSON.code === \"deleteSuccess\") {\r\n                  // Redirect to /home\r\n                  logout();\r\n                  history.push(`/home`);\r\n                } else {\r\n                  // Error message\r\n                  setErrorOccurred(true);\r\n                  setIsLoading(false);\r\n                  console.error(resultJSON);\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                console.log(\"Error:\", err);\r\n                setErrorOccurred(true);\r\n                setIsLoading(false);\r\n              });\r\n          })\r\n          .catch((err: any) => {\r\n            const code = err.code;\r\n            switch (code) {\r\n              case \"NotAuthorizedException\":\r\n                setIsPasswordCorrect(false);\r\n                break;\r\n              default:\r\n                console.error(err);\r\n                setIsLoading(false);\r\n            }\r\n          });\r\n      })\r\n      .catch((err: any) => {\r\n        console.error(err);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-field\">\r\n      {isLoading ? (\r\n        <div className=\"loader\" />\r\n      ) : (\r\n        <>\r\n          <div className=\"settings-header\">Delete account</div>\r\n          <form onSubmit={(e) => e.preventDefault()}>\r\n            <div className=\"settings-input-field\">\r\n              <div className=\"settings-input-label\">Password:</div>\r\n              <div className=\"settings-input-wrapper\">\r\n                <input\r\n                  value={password}\r\n                  onChange={(event) => {\r\n                    setIsPasswordCorrect(true);\r\n                    setPassword(event.target.value);\r\n                    setErrorOccurred(false);\r\n                  }}\r\n                  type=\"password\"\r\n                  className={!isPasswordCorrect ? \"invalid\" : \"\"}\r\n                />\r\n\r\n                {/* Incorrect password */}\r\n                {!isPasswordCorrect ? (\r\n                  <div className=\"form-error-message\">Incorrect password</div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"delete-account-label\">\r\n              Type <code>delete-me</code> below to confirm your decision\r\n            </div>\r\n\r\n            <div className=\"settings-input-field\">\r\n              <div className=\"settings-input-label\">Confirmation:</div>\r\n              <div className=\"settings-input-wrapper\">\r\n                <input\r\n                  value={deleteConfirmation}\r\n                  onChange={(event) => {\r\n                    setIsConfirmationCorrect(true);\r\n                    setDeleteConfirmation(event.target.value);\r\n                    setErrorOccurred(false);\r\n                  }}\r\n                  type=\"text\"\r\n                  className={!isConfirmationCorrect ? \"invalid\" : \"\"}\r\n                />\r\n\r\n                {/* Incorrect confirmation text */}\r\n                {!isConfirmationCorrect ? (\r\n                  <div className=\"form-error-message\">\r\n                    Incorrect confirmation message\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <DeleteAccountConfirmation\r\n              onSubmit={onSubmit}\r\n              active={password.length > 0}\r\n            />\r\n\r\n            {/* Error message */}\r\n            {errorOccurred ? (\r\n              <div className=\"form-error-message\">An error occurred.</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </form>\r\n        </>\r\n      )}\r\n\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeEmail;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Popup from \"reactjs-popup\";\r\nimport Styled from \"styled-components\";\r\nimport { AccountContext } from \"../Account\";\r\n\r\nexport interface LogoutButtonProps {}\r\n\r\nconst StyledPopup = Styled(Popup)`\r\n&-content {\r\n  width: 250px;\r\n  padding: 40px;\r\n  text-align: center;\r\n  font-size: 18px;\r\n  transform: translateY(-160px)\r\n}\r\n&-content button {\r\n  font-size: 12px;\r\n  line-height: 28px;\r\n  height: 28px;\r\n}\r\n`;\r\n\r\nconst LogoutButton: React.FC<LogoutButtonProps> = () => {\r\n  // Confirmation popup\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const closeModal = () => setOpen(false);\r\n\r\n  const { logout } = useContext(AccountContext);\r\n  const history = useHistory();\r\n  const onClick = (e: any) => {\r\n    e.preventDefault();\r\n\r\n    // Log out\r\n    logout();\r\n\r\n    // Redirect to home page\r\n    history.push(`/home`);\r\n  };\r\n\r\n  return (\r\n    <div id=\"logout-button\">\r\n      <button className=\"button-primary\" onClick={() => setOpen(true)}>\r\n        Logout\r\n      </button>\r\n\r\n      {/* Confirmation popup */}\r\n      <StyledPopup open={open} modal onClose={closeModal}>\r\n        <div style={{ marginBottom: \"30px\" }}>\r\n          Are you sure you want to logout?\r\n        </div>\r\n        <button onClick={onClick} type=\"submit\" className=\"button-primary\">\r\n          Logout\r\n        </button>\r\n        <br />\r\n        <button onClick={closeModal} style={{ marginTop: \"10px\" }}>\r\n          Cancel\r\n        </button>\r\n      </StyledPopup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;\r\n","import React from \"react\";\r\nimport \"../components/Settings/Settings.css\";\r\nimport ChangeEmail from \"../components/Settings/ChangeEmail\";\r\nimport ChangePassword from \"../components/Settings/ChangePassword\";\r\nimport DeleteAccount from \"../components/Settings/DeleteAccount\";\r\nimport LogoutButton from \"../components/Settings/LogoutButton\";\r\n\r\n// Confirmation popup styles\r\nimport \"reactjs-popup/dist/index.css\";\r\n\r\nconst Settings: React.FC<{}> = () => {\r\n  document.title = \"Settings / Bitter\";\r\n\r\n  return (\r\n    <div className=\"settings\">\r\n      <div className=\"settings-title\">Settings</div>\r\n      <ChangeEmail />\r\n      <ChangePassword />\r\n      <DeleteAccount />\r\n      <LogoutButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AccountContext } from \"../components/Account\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport { CognitoUserSession } from \"amazon-cognito-identity-js\";\r\n\r\ninterface LoginProps {\r\n  setMyHandle: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst Login: React.FC<LoginProps> = ({ setMyHandle }) => {\r\n  document.title = \"Login / Bitter\";\r\n\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  const [emailNotVerified, setEmailNotVerified] = useState<boolean>(false);\r\n  const [invalidLoginDetails, setInvalidLoginDetails] = useState<boolean>(\r\n    false\r\n  );\r\n\r\n  const [errorOccurred, setErrorOccurred] = useState<boolean>(false);\r\n\r\n  const {\r\n    authenticate,\r\n    setIsLoggedIn,\r\n    setIsAdmin,\r\n  }: {\r\n    authenticate: (Username: string, Password: string) => Promise<any>;\r\n    setIsLoggedIn: React.Dispatch<React.SetStateAction<boolean>>;\r\n    setIsAdmin: React.Dispatch<React.SetStateAction<boolean>>;\r\n  } = useContext(AccountContext);\r\n\r\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    authenticate(username, password)\r\n      .then((data: CognitoUserSession) => {\r\n        console.log(\"Logged in!\");\r\n        setMyHandle(data.getIdToken().payload[\"cognito:username\"]);\r\n        if (data.getIdToken().payload[\"custom:role\"] === \"admin\")\r\n          setIsAdmin(true);\r\n        setIsLoggedIn(true);\r\n      })\r\n      .catch((err: any) => {\r\n        const code: string = err.code;\r\n        switch (code) {\r\n          case \"UserNotConfirmedException\":\r\n            console.error(\"Email not verified\");\r\n            setEmailNotVerified(true);\r\n            break;\r\n          case \"NotAuthorizedException\":\r\n            console.error(\"Incorrect username or password\");\r\n            setInvalidLoginDetails(true);\r\n            break;\r\n          default:\r\n            console.error(\"Failed to login!\", err);\r\n            setErrorOccurred(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login-title\">Login</div>\r\n\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"login-input-field\">\r\n          <div className=\"login-input-label\">Email / Handle:</div>\r\n          <input\r\n            value={username}\r\n            onChange={(event) => {\r\n              setEmailNotVerified(false);\r\n              setInvalidLoginDetails(false);\r\n              setUsername(event.target.value);\r\n              setErrorOccurred(false);\r\n            }}\r\n            type=\"text\"\r\n            className={emailNotVerified || invalidLoginDetails ? \"invalid\" : \"\"}\r\n          />\r\n\r\n          {/* Account not verified */}\r\n          {emailNotVerified ? (\r\n            <div className=\"form-error-message\">\r\n              You need to verify your email before logging in\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"login-input-field\">\r\n          <div className=\"login-input-label\">Password:</div>\r\n          <input\r\n            value={password}\r\n            onChange={(event) => {\r\n              setInvalidLoginDetails(false);\r\n              setPassword(event.target.value);\r\n              setErrorOccurred(false);\r\n            }}\r\n            type=\"password\"\r\n            className={invalidLoginDetails ? \"invalid\" : \"\"}\r\n          />\r\n\r\n          {/* Invalid login details */}\r\n          {invalidLoginDetails ? (\r\n            <div className=\"form-error-message\">\r\n              Incorrect username or password\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <button type=\"submit\">Submit</button>\r\n        <div id=\"login-register-link\">\r\n          <Link to=\"/register\">Create an account</Link>\r\n        </div>\r\n\r\n        {/* Error message */}\r\n        {errorOccurred ? (\r\n          <div className=\"form-error-message\">An error occurred.</div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { CognitoUserAttribute } from \"amazon-cognito-identity-js\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AccountContext } from \"../components/Account\";\r\nimport UserPool from \"../UserPool\";\r\nimport \"./Register.css\";\r\n\r\nconst Register: React.FC<{}> = () => {\r\n  document.title = \"Register / Bitter\";\r\n\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState<string>(\"\");\r\n\r\n  const [isUsernameEmpty, setIsUsernameEmpty] = useState<boolean>(false);\r\n  const [isUsernameTooLong, setIsUsernameTooLong] = useState<boolean>(false);\r\n  const [isEmailEmpty, setIsEmailEmpty] = useState<boolean>(false);\r\n\r\n  const [usernameExists, setUsernameExists] = useState<boolean>(false);\r\n  const [emailExists, setEmailExists] = useState<boolean>(false);\r\n  const [passwordsMismatch, setPasswordsMismatch] = useState<boolean>(false);\r\n\r\n  const [isUsernameValid, setIsUsernameValid] = useState<boolean>(true);\r\n  const [isEmailValid, setIsEmailValid] = useState<boolean>(true);\r\n  const [isPasswordValid, setIsPasswordValid] = useState<boolean>(true);\r\n\r\n  const [hasSucceeded, setHasSucceeded] = useState<boolean>(false);\r\n  const [errorOccurred, setErrorOccurred] = useState<boolean>(false);\r\n\r\n  const {\r\n    isEmailUsed,\r\n  }: {\r\n    isEmailUsed: (email: string) => Promise<boolean>;\r\n  } = useContext(AccountContext);\r\n\r\n  const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    // Check fields not empty and passwords match\r\n    if (areFieldsValid()) {\r\n      console.log(\"Empty fields!\");\r\n      return;\r\n    }\r\n\r\n    // Check if email exists\r\n    if (await isEmailUsed(email)) {\r\n      setEmailExists(true);\r\n      return;\r\n    }\r\n\r\n    // Register\r\n    UserPool.signUp(\r\n      username,\r\n      password,\r\n      [new CognitoUserAttribute({ Name: \"email\", Value: email })],\r\n      [],\r\n      (err: any, data) => {\r\n        if (err) {\r\n          const code = err.code;\r\n          console.log(err);\r\n\r\n          switch (code) {\r\n            case \"UsernameExistsException\":\r\n              setUsernameExists(true);\r\n              break;\r\n            case \"InvalidPasswordException\":\r\n              setIsPasswordValid(false);\r\n              break;\r\n            default:\r\n              // MAKE GENERAL ERROR MESSAGE FOR IF THIS OCCURS !!!!!\r\n              console.log(\"an error occured\");\r\n              setErrorOccurred(true);\r\n          }\r\n        }\r\n        if (data) {\r\n          setHasSucceeded(true);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const areFieldsValid = () => {\r\n    let result: boolean = false;\r\n\r\n    if (username.length < 1) {\r\n      console.log(\"no handle!\");\r\n      setIsUsernameEmpty(true);\r\n      result = true;\r\n    } else if (username.length > 25) {\r\n      console.log(\"handle too long!\");\r\n      setIsUsernameTooLong(true);\r\n      result = true;\r\n    } else if (!checkIsHandleValid(username)) {\r\n      console.log(\"invalid handle\");\r\n      setIsUsernameValid(false);\r\n      result = true;\r\n    }\r\n\r\n    if (email.length < 1) {\r\n      console.log(\"no email!\");\r\n      setIsEmailEmpty(true);\r\n      result = true;\r\n    }\r\n\r\n    if (!checkIsPasswordValid(password)) {\r\n      console.log(\"invalid password\");\r\n      setIsPasswordValid(false);\r\n      result = true;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setPasswordsMismatch(true);\r\n      result = true;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const checkIsHandleValid = (s: string) => {\r\n    if (s.length < 1) return false;\r\n    const handleArray: Array<string> = s.split(\"\");\r\n    const validChars: string =\r\n      \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n\r\n    for (let i = 0; i < handleArray.length; i++) {\r\n      if (validChars.includes(handleArray[i])) {\r\n        continue;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const checkIsPasswordValid = (s: string) => {\r\n    if (s.length < 8) return false;\r\n    const passwordArray: Array<string> = s.split(\"\");\r\n\r\n    let requirements: Array<boolean> = [false, false, false, false];\r\n    const lowercase: string = \"abcdefghijklmnopqrstuvwxyz\";\r\n    const uppercase: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    const numbers: string = \"0123456789\";\r\n    const specials: string = \"=+-^$*.[]{}()?\\\"!@#%&/\\\\,><':;|_~`\";\r\n    const checkSelf = (x: boolean): boolean => x;\r\n\r\n    passwordArray.forEach((char) => {\r\n      if (lowercase.includes(char)) {\r\n        requirements[0] = true;\r\n      } else if (uppercase.includes(char)) {\r\n        requirements[1] = true;\r\n      } else if (numbers.includes(char)) {\r\n        requirements[2] = true;\r\n      } else if (specials.includes(char)) {\r\n        requirements[3] = true;\r\n      }\r\n    });\r\n\r\n    return requirements.every(checkSelf);\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"register-title\">Register</div>\r\n\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"register-input-field\">\r\n          <div className=\"register-input-label \">Handle:</div>\r\n          <input\r\n            value={username}\r\n            onChange={(event) => {\r\n              setIsUsernameEmpty(false);\r\n              setIsUsernameTooLong(false);\r\n              setIsUsernameValid(true);\r\n              setUsernameExists(false);\r\n              setUsername(event.target.value);\r\n              setErrorOccurred(false);\r\n            }}\r\n            type=\"text\"\r\n            className={\r\n              isUsernameEmpty ||\r\n              !isUsernameValid ||\r\n              usernameExists ||\r\n              isUsernameTooLong\r\n                ? \"invalid\"\r\n                : \"\"\r\n            }\r\n          />\r\n\r\n          {/* Username field empty */}\r\n          {isUsernameEmpty ? (\r\n            <div className=\"form-error-message\">Handle field is empty</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {/* Username too long */}\r\n          {isUsernameTooLong ? (\r\n            <div className=\"form-error-message\">Handle is too long</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {/* Invalid username */}\r\n          {!isUsernameValid ? (\r\n            <div className=\"form-error-message\">\r\n              Invalid handle (no special characters allowed)\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {/* Username already exists */}\r\n          {usernameExists ? (\r\n            <div className=\"form-error-message\">\r\n              An account with this handle already exists\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"register-input-field\">\r\n          <div className=\"register-input-label\">Email:</div>\r\n          <input\r\n            value={email}\r\n            onChange={(event) => {\r\n              setIsEmailEmpty(false);\r\n              setEmailExists(false);\r\n              setIsEmailValid(true);\r\n              setEmail(event.target.value);\r\n              setErrorOccurred(false);\r\n            }}\r\n            type=\"email\"\r\n            className={isEmailEmpty || emailExists ? \"invalid\" : \"\"}\r\n          />\r\n\r\n          {/* Email field empty */}\r\n          {isEmailEmpty ? (\r\n            <div className=\"form-error-message\">Email field is empty</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {/* Email already exists */}\r\n          {emailExists ? (\r\n            <div className=\"form-error-message\">\r\n              An account with this email already exists\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {/* Invalid email */}\r\n          {!isEmailValid ? (\r\n            <div className=\"form-error-message\">Invalid email</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"register-input-field\">\r\n          <div className=\"register-input-label\">Password:</div>\r\n          <input\r\n            value={password}\r\n            onChange={(event) => {\r\n              setPasswordsMismatch(false);\r\n              setIsPasswordValid(true);\r\n              setPassword(event.target.value);\r\n              setErrorOccurred(false);\r\n            }}\r\n            type=\"password\"\r\n            className={!isPasswordValid || passwordsMismatch ? \"invalid\" : \"\"}\r\n          />\r\n\r\n          {/* Invalid password */}\r\n          {!isPasswordValid ? (\r\n            <div className=\"form-error-message\">\r\n              Password must be at least 8 characters long, and contain at least\r\n              one uppercase, lowercase, number and special character.\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <div className=\"register-input-field\">\r\n            <div className=\"register-input-label\">Confirm Password:</div>\r\n            <input\r\n              value={confirmPassword}\r\n              onChange={(event) => {\r\n                setPasswordsMismatch(false);\r\n                setConfirmPassword(event.target.value);\r\n                setErrorOccurred(false);\r\n              }}\r\n              type=\"password\"\r\n              className={!isPasswordValid || passwordsMismatch ? \"invalid\" : \"\"}\r\n            />\r\n          </div>\r\n\r\n          {/* Passwords don't match */}\r\n          {passwordsMismatch && isPasswordValid ? (\r\n            <div className=\"form-error-message\">! Passwords do not match !</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <button type=\"submit\">Submit</button>\r\n\r\n        {/* Success message */}\r\n        {hasSucceeded ? (\r\n          <div\r\n            style={{\r\n              fontSize: \"16px\",\r\n            }}\r\n            className=\"form-success-message\"\r\n          >\r\n            Success! Please verify your email before{\" \"}\r\n            <Link\r\n              style={{\r\n                color: \"#33c3f0\",\r\n              }}\r\n              to=\"/login\"\r\n            >\r\n              logging in\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {/* Error message */}\r\n        {errorOccurred ? (\r\n          <div className=\"form-error-message\">An error occurred.</div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <div id=\"register-login-link\">\r\n          Already have an account? <Link to=\"/login\">Login here</Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useContext } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { AccountContext } from \"./components/Account\";\r\n\r\ninterface Props {\r\n  Component: any;\r\n  path: string;\r\n}\r\n\r\nconst PrivateRoute: React.FC<Props> = ({ Component, path }) => {\r\n  // isLoggedIn in props please!\r\n  const { isLoggedIn }: { isLoggedIn: boolean } = useContext(AccountContext);\r\n\r\n  return (\r\n    <Route\r\n      render={() =>\r\n        isLoggedIn === true ? (\r\n          <Component />\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/login\" }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useState } from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Admin from \"./pages/Admin\";\nimport { Account } from \"./components/Account\";\nimport \"./App.css\";\n\n// Persistent\nimport LeftColumn from \"./components/Main/LeftColumn\";\nimport RightColumn from \"./components/Main/RightColumn\";\n\n// Pages\nimport PageNotFound from \"./pages/PageNotFound\";\nimport Timeline from \"./pages/Timeline\";\nimport UserPage from \"./pages/UserPage\";\nimport BitPage from \"./pages/BitPage\";\nimport Settings from \"./pages/Settings\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst App: React.FC<{}> = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\n  const [myHandle, setMyHandle] = useState<string>(\"\");\n\n  return (\n    <Account\n      isLoggedIn={isLoggedIn}\n      setIsLoggedIn={setIsLoggedIn}\n      myHandle={myHandle}\n      setMyHandle={setMyHandle}\n    >\n      <Router basename=\"/\">\n        <div className=\"App\">\n          <LeftColumn />\n\n          <div id=\"mid-col\" className=\"main-col\">\n            <Switch>\n              {/* Login page (redirect if logged in) */}\n              <Route\n                path=\"/login\"\n                render={() =>\n                  isLoggedIn === true ? (\n                    <Redirect to={{ pathname: \"/home\" }} />\n                  ) : (\n                    <Login setMyHandle={setMyHandle} />\n                  )\n                }\n              />\n\n              {/* Registration page (redirect if logged in) */}\n              <Route\n                path=\"/register\"\n                render={() =>\n                  isLoggedIn === true ? (\n                    <Redirect to={{ pathname: \"/home\" }} />\n                  ) : (\n                    <Register />\n                  )\n                }\n              />\n\n              {/* Home page and redirects */}\n              <Route path=\"/home\" exact render={() => <Timeline />} />\n              <Route\n                path=\"/\"\n                exact\n                render={() => <Redirect to={{ pathname: \"/home\" }} />}\n              />\n\n              {/* Admin page */}\n              <PrivateRoute path=\"/admin\" Component={Admin} />\n\n              {/* Settings page */}\n              <PrivateRoute path=\"/settings\" Component={Settings} />\n\n              {/* Current user page */}\n              <Route\n                path=\"/me\"\n                render={() =>\n                  isLoggedIn === true ? (\n                    <Redirect to={{ pathname: `/u/${myHandle}` }} />\n                  ) : (\n                    <Redirect to={{ pathname: \"/login\" }} />\n                  )\n                }\n              />\n\n              {/* General user page */}\n              <Route path=\"/u/:handle\" render={() => <UserPage />} />\n\n              {/* General bit page */}\n              <Route path=\"/b/:post_id\" render={() => <BitPage />} />\n\n              {/* 404 page */}\n              <Route component={PageNotFound} />\n            </Switch>\n          </div>\n\n          <RightColumn />\n        </div>\n      </Router>\n    </Account>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}