{"version":3,"sources":["pages/Admin.tsx","UserPool.tsx","components/Account.tsx","components/Main/Options/OptionLink.tsx","components/Main/Options/OptionsUserBox.tsx","components/Main/Options/home.svg","components/Main/Options/user.svg","components/Main/Options/settings.svg","components/Main/Options/login.svg","components/Main/Options/register.svg","components/Main/Options/OptionsBox.tsx","components/Main/AppTitle/AppTitle.tsx","components/Main/LeftColumn.tsx","components/Main/Users/FindUserForm.tsx","components/Main/Users/FindUser.tsx","components/Main/Users/components/FollowButton.tsx","components/Main/Users/components/UnfollowButton.tsx","components/Main/Users/components/SuggestedUserFollowButton.tsx","components/Main/Users/UserSuggestion.tsx","components/Main/Users/UserSuggestions.tsx","components/Main/RightColumn.tsx","components/Timeline/PostBoxForm.tsx","components/Timeline/PostBit.tsx","components/Main/BitList/reply.svg","components/Main/BitList/rebit.svg","components/Main/BitList/like.svg","components/Main/BitList/dislike.svg","components/Main/BitList/BitButtonBar.tsx","components/Main/BitList/Bit.tsx","components/Main/BitList/BitList.tsx","components/Timeline/TimelineBitList.tsx","pages/Timeline.tsx","components/UserPage/components/UserBanner.tsx","components/UserPage/components/UserPhoto.tsx","components/UserPage/components/FollowButton.tsx","components/UserPage/components/UnfollowButton.tsx","components/UserPage/components/SelfUnfollowButton.tsx","components/UserPage/components/UserFollowButton.tsx","components/UserPage/components/UserInfo.tsx","components/UserPage/UserHeader.tsx","components/UserPage/UserBitList.tsx","components/UserPage/UserNotFound.tsx","pages/UserPage.tsx","components/Settings/ChangeEmail.tsx","components/Settings/ChangePassword.tsx","components/Settings/LogoutButton.tsx","components/Settings/DeleteAccountButton.tsx","pages/Settings.tsx","pages/Login.tsx","pages/Register.tsx","PrivateRoute.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["Admin","document","title","CognitoUserPool","UserPoolId","ClientId","AccountContext","createContext","undefined","Account","isLoggedIn","setIsLoggedIn","myHandle","setMyHandle","children","API_URL","useState","myId","setMyId","currId","setCurrId","isFollowing","setIsFollowing","checkIfFollowing","sourceId","destinationId","a","fetch","data","json","result","useEffect","getSession","then","session","sub","user","username","catch","err","console","log","Promise","resolve","reject","Pool","getCurrentUser","getUserAttributes","attributes","results","attribute","Name","Value","token","getIdToken","getJwtToken","headers","Authorization","createFollowEdge","method","response","text","error","deleteFollowEdge","authenticate","Username","Password","CognitoUser","authDetails","AuthenticationDetails","authenticateUser","onSuccess","onFailure","newPasswordRequired","isEmailUsed","email","Provider","value","logout","signOut","OptionLink","logo","link","className","to","src","alt","UserBox","useContext","OptionsBox","Option","this","homeOption","HomeLogo","userOption","UserLogo","settingsOption","SettingsLogo","loginOption","LoginLogo","registerOption","RegisterLogo","AppTitle","LeftColumn","id","FindUserForm","handle","updateHandle","buttonStatus","updateButton","history","useHistory","handleSubmitClick","e","preventDefault","push","type","name","placeholder","onChange","target","length","onClick","disabled","style","opacity","FindUser","FollowButton","props","setIsFollowingSuggested","user_id","follow","UnfollowButton","unfollow","SuggestedUserFollowButton","isFollowingSuggested","resp","UserSuggestion","display_name","UserSuggestions","suggestedUsers","updateSuggestions","isLoading","setIsLoading","fetchSuggestions","items","map","key","RightColumn","PostBoxForm","post","updatePost","remainingChars","updateChars","charCounterColour","changeCounterColour","enableButton","formData","FormData","append","requestOptions","body","color","PostBit","BitButtonBar","like","formdata","printResp","ReplyButton","post_id","JSON","stringify","RebitButton","LikeButton","DislikeButton","Bit","bitInfo","timeString","bitTime","milliseconds","Date","now","getTime","temp","Math","floor","days","day","String","getDate","getMonth","getFullYear","hours","minutes","seconds","timestampFormat","post_time","content","BitList","bits","bit","index","TimelineBitList","setBits","fetchBits","url","Timeline","UserBanner","UserPhoto","SelfUnfollowButton","UserFollowButton","check","UserInfo","updatePageState","months","date","x","month","year","formatDate","created_on","bio","following_count","follower_count","UserHeader","UserBitList","replies","UserNotFound","UserPage","setUser","listState","setListState","useLocation","pathname","slice","fetchUser","listen","location","stateId","ChangeEmail","newEmail","setNewEmail","password","setPassword","emailExists","setEmailExists","isPasswordCorrect","setIsPasswordCorrect","hasSucceeded","setHasSucceeded","onSubmit","CognitoUserAttribute","updateAttributes","code","event","ChangePassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","LogoutButton","DeleteAccountButton","Settings","Login","setUsername","emailNotVerified","setEmailNotVerified","invalidLoginDetails","setInvalidLoginDetails","payload","Register","setEmail","confirmPassword","setConfirmPassword","isUsernameEmpty","setIsUsernameEmpty","isUsernameTooLong","setIsUsernameTooLong","isEmailEmpty","setIsEmailEmpty","usernameExists","setUsernameExists","passwordsMismatch","setPasswordsMismatch","isUsernameValid","setIsUsernameValid","isEmailValid","setIsEmailValid","isPasswordValid","setIsPasswordValid","areFieldsValid","UserPool","signUp","checkIsHandleValid","checkIsPasswordValid","s","handleArray","split","i","includes","passwordArray","requirements","forEach","char","every","PrivateRoute","Component","path","render","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7928bc85.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Admin: React.FC<{}> = () => {\r\n  document.title = \"Admin / Bitter\";\r\n\r\n  return <div>Admin page</div>;\r\n};\r\n\r\nexport default Admin;\r\n","import {\r\n  CognitoUserPool,\r\n  // CognitoUserAttribute,\r\n} from \"amazon-cognito-identity-js\";\r\n\r\nconst poolData = {\r\n  UserPoolId: \"eu-west-2_QLAkrTR47\",\r\n  ClientId: \"4m544sn8a7kf2023cq5qs4polc\",\r\n};\r\n\r\nexport default new CognitoUserPool(poolData);\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport {\r\n  CognitoUser,\r\n  AuthenticationDetails,\r\n  CognitoUserSession,\r\n  CognitoUserAttribute,\r\n} from \"amazon-cognito-identity-js\";\r\nimport Pool from \"../UserPool\";\r\n\r\n// type ContextProps = {\r\n//   authenticate: (Username: string, Password: string) => Promise<undefined>;\r\n//   getSession: () => Promise<any>;\r\n//   logout: () => void;\r\n//   isLoggedIn: boolean;\r\n//   setIsLoggedIn: React.Dispatch<React.SetStateAction<boolean>>;\r\n//   checkIfFollowing: (\r\n//     sourceId: string,\r\n//     destinationId: string\r\n//   ) => Promise<boolean>;\r\n//   currId: string;\r\n//   setCurrId: React.Dispatch<React.SetStateAction<string>>;\r\n//   API_URL: string;\r\n//   isFollowing: boolean;\r\n//   setIsFollowing: React.Dispatch<React.SetStateAction<boolean>>;\r\n//   myId: string;\r\n//   createFollowEdge: (sourceId: string, destinationId: string) => Promise<void>;\r\n//   deleteFollowEdge: (sourceId: string, destinationId: string) => Promise<void>;\r\n//   isEmailUsed: (email: string) => Promise<boolean>\r\n// };\r\n\r\ninterface Props {\r\n  isLoggedIn: boolean;\r\n  setIsLoggedIn: React.Dispatch<React.SetStateAction<boolean>>;\r\n  myHandle: string;\r\n  setMyHandle: React.Dispatch<React.SetStateAction<string>>;\r\n  children: any;\r\n}\r\n\r\nconst AccountContext = createContext<any>(undefined);\r\n\r\nconst Account: React.FC<Props> = ({\r\n  isLoggedIn,\r\n  setIsLoggedIn,\r\n  myHandle,\r\n  setMyHandle,\r\n  children,\r\n}) => {\r\n  const API_URL: string = \"http://localhost:8000/\";\r\n\r\n  const [myId, setMyId] = useState<string>(\"\");\r\n  // Change get_timeline in django\r\n  // const [myId, setMyId] = useState<number>(0);\r\n\r\n  // Info about current user being viewed, i.e. owner of /u/handle\r\n  const [currId, setCurrId] = useState<string>(\"\");\r\n  const [isFollowing, setIsFollowing] = useState<boolean>(false);\r\n\r\n  const checkIfFollowing = async (sourceId: string, destinationId: string) => {\r\n    const data = await fetch(\r\n      `${API_URL}is-following/get?source_id=${sourceId}&destination_id=${destinationId}`\r\n    );\r\n    const result = await data.json();\r\n    return result;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSession()\r\n      .then((session: any) => {\r\n        setIsLoggedIn(true);\r\n        setMyId(session.sub);\r\n        setMyHandle(session.user.username);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"yo\");\r\n        setMyId(\"\");\r\n\r\n        return;\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const getSession = async () =>\r\n    await new Promise((resolve, reject) => {\r\n      const user: CognitoUser | null = Pool.getCurrentUser();\r\n      if (user) {\r\n        user.getSession(\r\n          async (err: Error, session: CognitoUserSession | null) => {\r\n            if (err) {\r\n              reject();\r\n            } else if (session) {\r\n              const attributes: any = await new Promise((resolve, reject) => {\r\n                user.getUserAttributes(\r\n                  (\r\n                    err: Error | undefined,\r\n                    attributes: CognitoUserAttribute[] | undefined\r\n                  ) => {\r\n                    if (err) {\r\n                      reject(err);\r\n                    } else if (attributes) {\r\n                      const results: any = {};\r\n\r\n                      for (let attribute of attributes) {\r\n                        const { Name, Value } = attribute;\r\n                        results[Name] = Value;\r\n                      }\r\n\r\n                      resolve(results);\r\n                    }\r\n                  }\r\n                );\r\n              });\r\n\r\n              const token = session.getIdToken().getJwtToken();\r\n\r\n              resolve({\r\n                user,\r\n                headers: {\r\n                  Authorization: token,\r\n                  \"x-api-key\": attributes[\"custom:apikey\"],\r\n                },\r\n                ...session,\r\n                ...attributes,\r\n              });\r\n            }\r\n          }\r\n        );\r\n      } else {\r\n        reject(\"Not logged in\");\r\n      }\r\n    });\r\n\r\n  const createFollowEdge = async (sourceId: string, destinationId: string) => {\r\n    fetch(\r\n      `${API_URL}create-follow/post?source_id=${sourceId}&destination_id=${destinationId}`,\r\n      { method: \"POST\" }\r\n    )\r\n      .then((response) => response.text())\r\n      .then((result) => console.log(result))\r\n      .catch((error) => console.error(\"Follow error:\", error));\r\n  };\r\n\r\n  const deleteFollowEdge = async (sourceId: string, destinationId: string) => {\r\n    fetch(\r\n      `${API_URL}delete-follow/post?source_id=${sourceId}&destination_id=${destinationId}`,\r\n      { method: \"POST\" }\r\n    )\r\n      .then((response) => response.text())\r\n      .then((result) => console.log(result))\r\n      .catch((error) => console.error(\"Unfollow error:\", error));\r\n  };\r\n\r\n  const authenticate = async (Username: string, Password: string) =>\r\n    await new Promise((resolve, reject) => {\r\n      const user = new CognitoUser({ Username, Pool });\r\n\r\n      const authDetails = new AuthenticationDetails({ Username, Password });\r\n\r\n      user.authenticateUser(authDetails, {\r\n        onSuccess: (data) => {\r\n          console.log(\"onSuccess:\", data);\r\n          resolve(data);\r\n        },\r\n\r\n        onFailure: (err) => {\r\n          console.error(\"onFailure:\", err);\r\n          reject(err);\r\n        },\r\n\r\n        newPasswordRequired: (data) => {\r\n          console.log(\"newPasswordRequired:\", data);\r\n          resolve(data);\r\n        },\r\n      });\r\n    });\r\n\r\n  const logout = () => {\r\n    const user = Pool.getCurrentUser();\r\n    if (user) {\r\n      user.signOut();\r\n      setMyId(\"\");\r\n      setMyHandle(\"\");\r\n      setIsLoggedIn(false);\r\n    }\r\n  };\r\n\r\n  const isEmailUsed = async (email: string): Promise<boolean> => {\r\n    const data = await fetch(\r\n      `https://wvv2lnqscf.execute-api.eu-west-2.amazonaws.com/dev/user-exists?email=${email}`\r\n    );\r\n    const result = await data.json();\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <AccountContext.Provider\r\n      value={{\r\n        authenticate,\r\n        getSession,\r\n        logout,\r\n        isLoggedIn,\r\n        setIsLoggedIn,\r\n        checkIfFollowing,\r\n        currId,\r\n        setCurrId,\r\n        API_URL,\r\n        isFollowing,\r\n        setIsFollowing,\r\n        myId,\r\n        setMyId,\r\n        myHandle,\r\n        createFollowEdge,\r\n        deleteFollowEdge,\r\n        isEmailUsed,\r\n      }}\r\n    >\r\n      {children}\r\n    </AccountContext.Provider>\r\n  );\r\n};\r\n\r\nexport { Account, AccountContext };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Option {\r\n  title: string;\r\n  link: string;\r\n  logo: string;\r\n}\r\n\r\nconst OptionLink: React.FC<Option> = ({ title, logo, link }) => {\r\n  return (\r\n    <div className=\"option\">\r\n      <Link to={link}>\r\n        <div className=\"option-logo-box\">\r\n          <img src={logo} alt=\"logo\" className=\"option-logo\" />\r\n        </div>\r\n        <div className=\"option-title\">{title}</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionLink;\r\n","import React, { useContext } from \"react\";\r\nimport { AccountContext } from \"../../Account\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserBox: React.FC<{}> = () => {\r\n  const { myHandle } = useContext(AccountContext);\r\n  return (\r\n    <div className=\"options-userbox\">\r\n      Logged in as: <Link to={`/u/${myHandle}`}>@{myHandle}</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserBox;\r\n","export default __webpack_public_path__ + \"static/media/home.671555e9.svg\";","export default __webpack_public_path__ + \"static/media/user.279444fa.svg\";","export default __webpack_public_path__ + \"static/media/settings.949b2aef.svg\";","export default __webpack_public_path__ + \"static/media/login.58b554af.svg\";","export default __webpack_public_path__ + \"static/media/register.2c6615d2.svg\";","import React, { useContext } from \"react\";\r\nimport \"./OptionsBox.css\";\r\nimport OptionLink from \"./OptionLink\";\r\nimport UserBox from \"./OptionsUserBox\";\r\n\r\nimport HomeLogo from \"./home.svg\";\r\nimport UserLogo from \"./user.svg\";\r\nimport SettingsLogo from \"./settings.svg\";\r\nimport LoginLogo from \"./login.svg\";\r\nimport RegisterLogo from \"./register.svg\";\r\n\r\nimport { AccountContext } from \"../../Account\";\r\n\r\nconst OptionsBox: React.FC<{}> = () => {\r\n  const { isLoggedIn }: { isLoggedIn: boolean } = useContext(AccountContext);\r\n\r\n  class Option {\r\n    title: string;\r\n    link: string;\r\n    logo: string; // hmmm\r\n\r\n    public constructor(title: string, link: string, logo: string) {\r\n      this.title = title;\r\n      this.link = link;\r\n      this.logo = logo;\r\n    }\r\n  }\r\n\r\n  const homeOption = new Option(\"Home\", \"/home\", HomeLogo);\r\n  const userOption = new Option(\"My Page\", \"/me\", UserLogo);\r\n  const settingsOption = new Option(\"Settings\", \"/settings\", SettingsLogo);\r\n  const loginOption = new Option(\"Login\", \"/login\", LoginLogo);\r\n  const registerOption = new Option(\"Register\", \"/register\", RegisterLogo);\r\n\r\n  return (\r\n    <div className=\"options-box\">\r\n      <OptionLink {...homeOption} />\r\n      {isLoggedIn ? (\r\n        <>\r\n          {/* My page/settings if logged in */}\r\n          <OptionLink {...userOption} />\r\n          <OptionLink {...settingsOption} />\r\n          <hr />\r\n          <UserBox />\r\n        </>\r\n      ) : (\r\n        <>\r\n          {/* Login/Register if not logged in */}\r\n          <OptionLink {...loginOption} />\r\n          <OptionLink {...registerOption} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionsBox;\r\n","import React from \"react\";\r\nimport \"./AppTitle.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AppTitle: React.FC<{}> = () => {\r\n  return (\r\n    <div className=\"app-title-box\">\r\n      <Link to=\"/home\">\r\n        <div className=\"app-title\">BitteR</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppTitle;\r\n","import React from \"react\";\r\n\r\nimport OptionsBox from \"./Options/OptionsBox\";\r\nimport AppTitle from \"./AppTitle/AppTitle\";\r\n\r\nconst LeftColumn: React.FC<{}> = () => {\r\n  return (\r\n    <div id=\"left-col\" className=\"main-col\">\r\n      <AppTitle />\r\n      <OptionsBox />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftColumn;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst FindUserForm: React.FC<{}> = () => {\r\n  const [handle, updateHandle] = useState<string>(\"\");\r\n\r\n  const [buttonStatus, updateButton] = useState<\r\n    [isButtonEnabled: boolean, buttonOpacity: string]\r\n  >([false, \"50%\"]);\r\n\r\n  const handleChange = (e: any) => {\r\n    const { value } = e.target;\r\n    updateHandle(value);\r\n\r\n    // Can't press button if input field is empty\r\n    if (value.length === 0) {\r\n      updateButton([false, \"50%\"]);\r\n    } else {\r\n      updateButton([true, \"100%\"]);\r\n    }\r\n  };\r\n\r\n  const history = useHistory();\r\n  const handleSubmitClick = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    // Go to user page\r\n    history.push(`/u/${handle}`);\r\n\r\n    // Reset input field\r\n    updateHandle(\"\");\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <span className=\"textbox\">\r\n        @\r\n        <input\r\n          type=\"text\"\r\n          name=\"url\"\r\n          id=\"find-user-input-field\"\r\n          value={handle}\r\n          placeholder=\"handle\"\r\n          onChange={handleChange}\r\n        />\r\n      </span>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"button-primary\"\r\n        onClick={handleSubmitClick}\r\n        disabled={!buttonStatus[0]}\r\n        style={{ opacity: buttonStatus[1] }}\r\n      >\r\n        Search\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FindUserForm;\r\n","import React from \"react\";\r\nimport \"./findusers.css\";\r\nimport FindUserForm from \"./FindUserForm\";\r\n\r\nconst FindUser: React.FC<{}> = () => {\r\n  return (\r\n    <div className=\"find-user\">\r\n      <div className=\"find-user-title\">Go to user's page:</div>\r\n      <FindUserForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindUser;\r\n","import React, { useContext } from \"react\";\r\nimport { AccountContext } from \"../../../Account\";\r\n\r\ntype Props = {\r\n  setIsFollowingSuggested: React.Dispatch<React.SetStateAction<boolean>>;\r\n  user_id: string;\r\n};\r\n\r\nconst FollowButton: React.FC<Props> = (props) => {\r\n  const { setIsFollowingSuggested, user_id } = props;\r\n\r\n  const {\r\n    myId,\r\n    currId,\r\n    setIsFollowing,\r\n    createFollowEdge,\r\n    isLoggedIn,\r\n  }: {\r\n    myId: string;\r\n    currId: string;\r\n    setIsFollowing: React.Dispatch<React.SetStateAction<boolean>>;\r\n    createFollowEdge: (\r\n      sourceId: string,\r\n      destinationId: string\r\n    ) => Promise<void>;\r\n    isLoggedIn: boolean;\r\n  } = useContext(AccountContext);\r\n\r\n  const follow = async () => {\r\n    if (isLoggedIn) {\r\n      setIsFollowingSuggested(true);\r\n\r\n      // Update userPage if same user\r\n      if (user_id === currId) {\r\n        setIsFollowing(true);\r\n      }\r\n\r\n      // update db\r\n      createFollowEdge(myId, user_id);\r\n    } else {\r\n      console.log(\"not logged in!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button className=\"button\" onClick={follow}>\r\n      Follow\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FollowButton;\r\n","import React, { useContext } from \"react\";\r\nimport { AccountContext } from \"../../../Account\";\r\n\r\ntype Props = {\r\n  setIsFollowingSuggested: React.Dispatch<React.SetStateAction<boolean>>;\r\n  user_id: string;\r\n};\r\n\r\nconst UnfollowButton: React.FC<Props> = (props) => {\r\n  const { setIsFollowingSuggested, user_id } = props;\r\n\r\n  const {\r\n    myId,\r\n    currId,\r\n    setIsFollowing,\r\n    deleteFollowEdge,\r\n  }: {\r\n    myId: string;\r\n    currId: string;\r\n    setIsFollowing: React.Dispatch<React.SetStateAction<boolean>>;\r\n    deleteFollowEdge: (\r\n      sourceId: string,\r\n      destinationId: string\r\n    ) => Promise<void>;\r\n  } = useContext(AccountContext);\r\n\r\n  const unfollow = async () => {\r\n    if (myId !== user_id) {\r\n      setIsFollowingSuggested(false);\r\n\r\n      // Update userPage if same user\r\n      if (user_id === currId) {\r\n        setIsFollowing(false);\r\n      }\r\n\r\n      // update db\r\n      deleteFollowEdge(myId, user_id);\r\n    } else {\r\n      console.log(\"can't unfollow yourself!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button className=\"button-primary\" onClick={unfollow}>\r\n      Following\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default UnfollowButton;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport FollowButton from \"./FollowButton\";\r\nimport UnfollowButton from \"./UnfollowButton\";\r\nimport { AccountContext } from \"../../../Account\";\r\n\r\ninterface Props {\r\n  className: string;\r\n  user_id: string;\r\n}\r\n\r\nconst SuggestedUserFollowButton: React.FC<Props> = ({ className, user_id }) => {\r\n  const [isFollowingSuggested, setIsFollowingSuggested] = useState<boolean>(\r\n    false\r\n  );\r\n\r\n  const {\r\n    checkIfFollowing,\r\n    currId,\r\n    myId,\r\n    isFollowing,\r\n  }: {\r\n    checkIfFollowing: (\r\n      sourceId: string,\r\n      destinationId: string\r\n    ) => Promise<boolean>;\r\n    currId: string;\r\n    myId: string;\r\n    isFollowing: boolean;\r\n  } = useContext(AccountContext);\r\n\r\n  // Check if following on mount\r\n  useEffect(() => {\r\n    checkIfFollowing(myId, user_id).then((resp) =>\r\n      setIsFollowingSuggested(resp)\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // Link to main user if same\r\n  useEffect(() => {\r\n    if (user_id === currId) {\r\n      setIsFollowingSuggested(isFollowing);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isFollowing]);\r\n\r\n  return (\r\n    <div className={className}>\r\n      {isFollowingSuggested ? (\r\n        <UnfollowButton\r\n          user_id={user_id}\r\n          setIsFollowingSuggested={setIsFollowingSuggested}\r\n        />\r\n      ) : (\r\n        <FollowButton\r\n          user_id={user_id}\r\n          setIsFollowingSuggested={setIsFollowingSuggested}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuggestedUserFollowButton;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AccountContext } from \"../../Account\";\r\nimport SuggestedUserFollowButton from \"./components/SuggestedUserFollowButton\";\r\n\r\ninterface User {\r\n  user_id: string;\r\n  handle?: string;\r\n  display_name?: string;\r\n}\r\n\r\nconst UserSuggestion: React.FC<User> = (user) => {\r\n  return (\r\n    <>\r\n      <hr className=\"solid\"></hr>\r\n      <div className=\"user-suggestion\">\r\n        <Link to={\"/u/\" + user.handle}>\r\n          <div className=\"user-suggestion-pfp\">\r\n            <img src=\"https://via.placeholder.com/48\" alt=\"profile pic\"></img>\r\n          </div>\r\n          <div className=\"user-suggestion-info\">\r\n            <div className=\"user-suggestion-displayname\">\r\n              {user.display_name}\r\n            </div>\r\n            <div className=\"user-suggestion-handle\">@{user.handle}</div>\r\n          </div>\r\n        </Link>\r\n        <SuggestedUserFollowButton\r\n          className=\"user-suggestion-follow\"\r\n          user_id={user.user_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserSuggestion;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./usersuggestions.css\";\r\nimport UserSuggestion from \"./UserSuggestion\";\r\nimport { AccountContext } from \"../../Account\";\r\n\r\nimport User from \"../../../Types/User\";\r\n// interface User {\r\n//   user_id: string;\r\n//   handle?: string;\r\n//   display_name?: string;\r\n//   created_on?: string;\r\n//   bio?: string;\r\n//   follower_count?: number;\r\n//   following_count?: number;\r\n// }\r\n\r\nconst UserSuggestions: React.FC<{}> = () => {\r\n  const [suggestedUsers, updateSuggestions] = useState<Array<User>>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const {\r\n    API_URL,\r\n    isLoggedIn,\r\n  }: { API_URL: string; isLoggedIn: boolean } = useContext(AccountContext);\r\n\r\n  // Fetch 3 random users from the database\r\n  const fetchSuggestions = async () => {\r\n    setIsLoading(true);\r\n    const data = await fetch(`${API_URL}user-suggestions/get`);\r\n    const items: Array<User> = await data.json();\r\n    updateSuggestions(items);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSuggestions();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isLoggedIn]);\r\n\r\n  return (\r\n    <div className=\"user-suggestions\">\r\n      <div className=\"user-suggestions-title\">Suggested users</div>\r\n      {isLoading ? (\r\n        <div className=\"user-suggestions-loader\">\r\n          <div className=\"loader\" />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {suggestedUsers.map((user) => (\r\n            <UserSuggestion {...user} key={user.handle} />\r\n          ))}\r\n          <div className=\"user-suggestions-reroller\">\r\n            <button onClick={fetchSuggestions}> Reroll </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSuggestions;\r\n","import React from \"react\";\r\n\r\nimport FindUser from \"./Users/FindUser\";\r\nimport UserSuggestions from \"./Users/UserSuggestions\";\r\n\r\nconst RightColumn: React.FC<{}> = () => {\r\n  return (\r\n    <div id=\"right-col\" className=\"main-col\">\r\n      <FindUser />\r\n      <UserSuggestions />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RightColumn;\r\n","import React, { useContext, useState } from \"react\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport { AccountContext } from \"../Account\";\r\n\r\nconst PostBoxForm: React.FC<{}> = () => {\r\n  const { API_URL, myId }: { API_URL: string; myId: string } = useContext(\r\n    AccountContext\r\n  );\r\n\r\n  const [post, updatePost] = useState<string>(\"\");\r\n  const [remainingChars, updateChars] = useState<number>(140);\r\n  const [charCounterColour, changeCounterColour] = useState<string>(\"black\");\r\n  const [buttonStatus, updateButton] = useState<[boolean, string]>([\r\n    false,\r\n    \"50%\",\r\n  ]);\r\n\r\n  const enableButton = () => {\r\n    updateButton([true, \"100%\"]);\r\n  };\r\n  const disableButton = () => {\r\n    updateButton([false, \"50%\"]);\r\n  };\r\n\r\n  const handleChange = (e: any) => {\r\n    const { value } = e.target;\r\n    updatePost(value);\r\n    updateChars(140 - value.length);\r\n    if (value.length > 140) {\r\n      disableButton();\r\n      changeCounterColour(\"red\");\r\n    } else if (value.length > 110) {\r\n      enableButton();\r\n      changeCounterColour(\"orange\");\r\n    } else {\r\n      enableButton();\r\n      changeCounterColour(\"black\");\r\n    }\r\n  };\r\n\r\n  const handleSubmitClick = async (e: any) => {\r\n    e.preventDefault();\r\n    if (remainingChars < 0 || remainingChars >= 140) {\r\n      console.error(\"Invalid post length.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"user_id\", myId);\r\n    formData.append(\"content\", post);\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      body: formData,\r\n    };\r\n\r\n    fetch(`${API_URL}bit/post`, requestOptions)\r\n      .then((response) => response.text())\r\n      .then((result) => console.log(result))\r\n      .catch((error) => console.log(\"error\", error));\r\n\r\n    updatePost(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"postbox-input\">\r\n      <form>\r\n        <TextareaAutosize\r\n          className=\"bit-content\"\r\n          id=\"postbox-input-field\"\r\n          placeholder=\"Post a bit!\"\r\n          value={post}\r\n          onChange={handleChange}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"button-primary\"\r\n          onClick={handleSubmitClick}\r\n          disabled={!buttonStatus[0]}\r\n          style={{ opacity: buttonStatus[1] }}\r\n        >\r\n          Post\r\n        </button>\r\n        <div id=\"postbox-charcount\" style={{ color: charCounterColour }}>\r\n          Remaining characters: {remainingChars}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostBoxForm;\r\n","import React from \"react\";\r\nimport PostBoxForm from \"./PostBoxForm\";\r\nimport \"./Postbox.css\";\r\n\r\nconst PostBit: React.FC<{}> = () => {\r\n  return (\r\n    <div className=\"postbox\">\r\n      <div className=\"postbox-pfp\">\r\n        <img src=\"https://via.placeholder.com/48\" alt=\"profile pic\"></img>\r\n      </div>\r\n      <PostBoxForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostBit;\r\n","export default __webpack_public_path__ + \"static/media/reply.34834fc8.svg\";","export default __webpack_public_path__ + \"static/media/rebit.e12d3005.svg\";","export default __webpack_public_path__ + \"static/media/like.231952c6.svg\";","export default __webpack_public_path__ + \"static/media/dislike.4c5bf648.svg\";","import React, { useContext } from \"react\";\r\nimport ReplyButton from \"./reply.svg\";\r\nimport RebitButton from \"./rebit.svg\";\r\nimport LikeButton from \"./like.svg\";\r\nimport DislikeButton from \"./dislike.svg\";\r\nimport { AccountContext } from \"../../Account\";\r\n\r\nimport BitInfo from \"../../../Types/BitInfo\";\r\n// interface BitInfo {\r\n//   content: string;\r\n//   dislikes: number;\r\n//   display_name: string;\r\n//   handle: string;\r\n//   index: number;\r\n//   likes: number;\r\n//   post_id: number;\r\n//   post_time: string;\r\n//   replies: number;\r\n//   reply_to: number;\r\n//   reposts: number;\r\n//   status: number;\r\n//   user_id: string;\r\n// }\r\n\r\nconst BitButtonBar: React.FC<BitInfo> = (props) => {\r\n  const { API_URL } = useContext(AccountContext);\r\n\r\n  const reply = () => {\r\n    console.log(`reply to tweet ${props.post_id}`);\r\n    console.log(JSON.stringify(props));\r\n  };\r\n\r\n  const rebit = () => {\r\n    console.log(`rebit tweet ${props.post_id}`);\r\n  };\r\n\r\n  const like = async () => {\r\n    var formdata: FormData = new FormData();\r\n    formdata.append(\"username\", \"userben\");\r\n    formdata.append(\"password\", \"passwordman\");\r\n\r\n    fetch(`${API_URL}rest-auth/login/`, {\r\n      method: \"POST\",\r\n      body: formdata,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => printResp(result))\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n  const printResp = (resp: any) => {\r\n    console.log(resp);\r\n  };\r\n\r\n  const dislike = () => {\r\n    console.log(`dislike tweet ${props.post_id}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bit-buttons\">\r\n      <input\r\n        type=\"image\"\r\n        src={ReplyButton}\r\n        alt=\"reply button\"\r\n        onClick={reply}\r\n      />\r\n      <input\r\n        type=\"image\"\r\n        src={RebitButton}\r\n        alt=\"rebit button\"\r\n        onClick={rebit}\r\n      />\r\n      <input type=\"image\" src={LikeButton} alt=\"like button\" onClick={like} />\r\n      <input\r\n        type=\"image\"\r\n        src={DislikeButton}\r\n        alt=\"dislike button\"\r\n        onClick={dislike}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BitButtonBar;\r\n","import React from \"react\";\r\nimport BitButtonBar from \"./BitButtonBar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport BitInfo from \"../../../Types/BitInfo\";\r\n// interface BitInfo {\r\n//   content: string;\r\n//   dislikes: number;\r\n//   display_name: string;\r\n//   handle: string;\r\n//   index: number;\r\n//   likes: number;\r\n//   post_id: number;\r\n//   post_time: string;\r\n//   replies: number;\r\n//   reply_to: number;\r\n//   reposts: number;\r\n//   status: number;\r\n//   user_id: string;\r\n// }\r\n\r\nfunction timestampFormat(bitTime: Date): string {\r\n  const milliseconds: number = Date.now() - bitTime.getTime(); // Difference in milliseconds\r\n\r\n  const months: Array<string> = [\r\n    \"Jan \",\r\n    \"Feb \",\r\n    \"Mar \",\r\n    \"Apr \",\r\n    \"May \",\r\n    \"Jun \",\r\n    \"Jul \",\r\n    \"Aug \",\r\n    \"Sep \",\r\n    \"Oct \",\r\n    \"Nov \",\r\n    \"Dec \",\r\n  ];\r\n\r\n  var temp: number = Math.floor(milliseconds / 1000);\r\n\r\n  var days: number = Math.floor((temp %= 31536000) / 86400);\r\n  if (days) {\r\n    // Full date if over a month ago, show year if not current year\r\n    if (days > 30) {\r\n      const day: string = String(bitTime.getDate());\r\n      const month: string = months[bitTime.getMonth()];\r\n      const year: string =\r\n        bitTime.getFullYear() === new Date().getFullYear()\r\n          ? \"\"\r\n          : \", bitTime.getFullYear()\";\r\n\r\n      return month + day + year;\r\n    }\r\n\r\n    return days + \"d\";\r\n  }\r\n  var hours: number = Math.floor((temp %= 86400) / 3600);\r\n  if (hours) {\r\n    return hours + \"h\";\r\n  }\r\n  var minutes: number = Math.floor((temp %= 3600) / 60);\r\n  if (minutes) {\r\n    return minutes + \"m\";\r\n  }\r\n  var seconds: number = temp % 60;\r\n  if (seconds) {\r\n    return seconds + \"s\";\r\n  }\r\n  return \"less than a second\"; //'just now' //or other string you like;\r\n}\r\n\r\nconst Bit: React.FC<BitInfo> = (bitInfo) => {\r\n  // convert timestamp to time passed\r\n  const bitTime: Date = new Date(bitInfo.post_time);\r\n  const timeString: string = timestampFormat(bitTime);\r\n\r\n  // If user_id === props.myId then give option to delete\r\n\r\n  // Numbers for interactions\r\n  return (\r\n    <div className=\"bit\">\r\n      <Link to={`/u/${bitInfo.handle}`}>\r\n        <div className=\"bit-pfp\">\r\n          <img src={\"https://via.placeholder.com/48\"} alt=\"profile pic\"></img>\r\n        </div>\r\n      </Link>\r\n\r\n      <div className=\"bit-content\">\r\n        <div className=\"bit-info\">\r\n          <Link to={`/u/${bitInfo.handle}`}>\r\n            <span className=\"bit-info-displayname\">{bitInfo.display_name}</span>\r\n            <span className=\"bit-info-handle\">@{bitInfo.handle}</span>\r\n          </Link>\r\n          ・\r\n          <Link to={`/t/${bitInfo.post_id}`}>\r\n            <span className=\"bit-info-time\">{timeString}</span>\r\n          </Link>\r\n        </div>\r\n        <div className=\"bit-text\"> {bitInfo.content} </div>\r\n        <BitButtonBar {...bitInfo} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bit;\r\n","import React from \"react\";\r\nimport Bit from \"./Bit\";\r\nimport \"./Bits.css\";\r\n\r\nimport BitInfo from \"../../../Types/BitInfo\";\r\n// interface BitInfo {\r\n//   content: string;\r\n//   dislikes: number;\r\n//   display_name: string;\r\n//   handle: string;\r\n//   index: number;\r\n//   likes: number;\r\n//   post_id: number;\r\n//   post_time: string;\r\n//   replies: number;\r\n//   reply_to: number;\r\n//   reposts: number;\r\n//   status: number;\r\n//   user_id: string;\r\n// }\r\n\r\ninterface Props {\r\n  bits: Array<BitInfo>;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst BitList: React.FC<Props> = ({ bits, isLoading }) => {\r\n  // retrieve bits from props\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <div className=\"bitlist-loader\">\r\n          <div className=\"loader\" />\r\n        </div>\r\n      ) : bits.length > 0 ? (\r\n        bits.map((bit, index) => (\r\n          <Bit {...bit} key={bit.post_id} index={index} />\r\n        ))\r\n      ) : (\r\n        <div className=\"no-bits\">No bits found</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BitList;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AccountContext } from \"../Account\";\r\nimport BitList from \"../Main/BitList/BitList\";\r\n\r\ninterface BitInfo {\r\n  content: string;\r\n  dislikes: number;\r\n  display_name: string;\r\n  handle: string;\r\n  index: number;\r\n  likes: number;\r\n  post_id: number;\r\n  post_time: string;\r\n  replies: number;\r\n  reply_to: number;\r\n  reposts: number;\r\n  status: number;\r\n  user_id: string;\r\n}\r\n\r\nconst TimelineBitList: React.FC<{}> = () => {\r\n  // fetch list of bits\r\n  const [bits, setBits] = useState<Array<BitInfo>>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const {\r\n    API_URL,\r\n    myId,\r\n    getSession,\r\n  }: {\r\n    API_URL: string;\r\n    myId: string;\r\n    getSession: () => Promise<any>;\r\n  } = useContext(AccountContext);\r\n\r\n  useEffect(() => {\r\n    fetchBits();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [myId]);\r\n\r\n  const fetchBits = async () => {\r\n    setIsLoading(true);\r\n    setBits([]);\r\n    console.log(\"fetching bits...\", myId);\r\n    //a\r\n\r\n    // const data = await fetch(`${API_URL}bits/timeline?user_id=${myId}`);\r\n    const url = `https://7z39hjjfg1.execute-api.eu-west-2.amazonaws.com/dev/bits/timeline?user_id=${myId}`;\r\n    const data = await fetch(url);\r\n\r\n    const items: Array<BitInfo> = await data.json();\r\n    setBits(items);\r\n    setIsLoading(false);\r\n\r\n    // Logged in\r\n    // getSession().then(async ({ headers }) => {\r\n    //   console.log(\"fetching bits...\", myId);\r\n    //   console.log(headers);\r\n    //   // const data = await fetch(`${API_URL}bits/timeline?user_id=${myId}`);\r\n    //   const url = `https://7z39hjjfg1.execute-api.eu-west-2.amazonaws.com/dev/bits/timeline?user_id=${myId}`;\r\n\r\n    //   const data = await fetch(url, { headers });\r\n\r\n    //   const items: Array<BitInfo> = await data.json();\r\n    //   setBits(items);\r\n    //   setIsLoading(false);\r\n    // });\r\n  };\r\n\r\n  // pass into BitList\r\n  return <BitList bits={bits} isLoading={isLoading} />;\r\n};\r\n\r\nexport default TimelineBitList;\r\n","import React from \"react\";\r\nimport PostBit from \"../components/Timeline/PostBit\";\r\nimport TimelineBitList from \"../components/Timeline/TimelineBitList\";\r\nimport \"../components/Timeline/Timeline.css\";\r\n\r\nconst Timeline: React.FC<{}> = () => {\r\n  document.title = \"Home / Bitter\";\r\n\r\n  return (\r\n    <div className=\"timeline\">\r\n      <PostBit />\r\n      <TimelineBitList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timeline;\r\n","import React from \"react\";\r\n\r\nconst UserBanner: React.FC<{ user_id: string }> = ({ user_id }) => {\r\n  const imageHeight: number = 150;\r\n\r\n  return (\r\n    <div className=\"user-banner\">\r\n      <img\r\n        src={`https://via.placeholder.com/600x${imageHeight}?text=Banner`}\r\n        alt=\"profile banner\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserBanner;\r\n","import React from \"react\";\r\n\r\nconst UserPhoto: React.FC<{ user_id: string }> = ({ user_id }) => {\r\n  const imageHeight: number = 140;\r\n\r\n  return (\r\n    <div className=\"user-photo\">\r\n      <img\r\n        src={`https://via.placeholder.com/${imageHeight}x${imageHeight}/000000/FFFFFF/?text=Profile+picture`}\r\n        alt=\"profile pic\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPhoto;\r\n","import React, { useContext } from \"react\";\r\nimport { AccountContext } from \"../../Account\";\r\n\r\nconst FollowButton: React.FC<{ user_id: string }> = ({ user_id }) => {\r\n  const {\r\n    myId,\r\n    setIsFollowing,\r\n    createFollowEdge,\r\n    isLoggedIn,\r\n  }: {\r\n    myId: string;\r\n    setIsFollowing: React.Dispatch<React.SetStateAction<boolean>>;\r\n    createFollowEdge: (\r\n      sourceId: string,\r\n      destinationId: string\r\n    ) => Promise<void>;\r\n    isLoggedIn: boolean;\r\n  } = useContext(AccountContext);\r\n\r\n  const follow = async () => {\r\n    if (isLoggedIn) {\r\n      setIsFollowing(true);\r\n      // update db\r\n      createFollowEdge(myId, user_id);\r\n\r\n      // Authenticate user first + in request!\r\n\r\n      // Pass through apikey, lambda to compare to cognito\r\n    } else {\r\n      console.log(\"not logged in\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button className=\"button\" onClick={follow}>\r\n      Follow\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FollowButton;\r\n","import React, { useContext } from \"react\";\r\nimport { AccountContext } from \"../../Account\";\r\n\r\nconst UnfollowButton: React.FC<{ user_id: string }> = ({ user_id }) => {\r\n  const {\r\n    myId,\r\n    setIsFollowing,\r\n    deleteFollowEdge,\r\n  }: {\r\n    myId: string;\r\n    setIsFollowing: React.Dispatch<React.SetStateAction<boolean>>;\r\n    deleteFollowEdge: (\r\n      sourceId: string,\r\n      destinationId: string\r\n    ) => Promise<void>;\r\n  } = useContext(AccountContext);\r\n\r\n  const unfollow = async () => {\r\n    setIsFollowing(false);\r\n    // update db\r\n    deleteFollowEdge(myId, user_id);\r\n\r\n    // Authenticate user first + in request!\r\n\r\n    // Pass through apikey, lambda to compare to cognito\r\n  };\r\n\r\n  return (\r\n    <button className=\"button-primary\" onClick={unfollow}>\r\n      Following\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default UnfollowButton;\r\n","import React from \"react\";\r\n\r\n// EDIT PROFILE\r\n\r\nconst SelfUnfollowButton: React.FC<{}> = () => {\r\n  return (\r\n    <button\r\n      className=\"button-primary\"\r\n      onClick={() => console.log(\"You can't unfollow yourself!\")}\r\n    >\r\n      Following\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SelfUnfollowButton;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport FollowButton from \"./FollowButton\";\r\nimport UnfollowButton from \"./UnfollowButton\";\r\nimport SelfUnfollowButton from \"./SelfUnfollowButton\";\r\nimport { AccountContext } from \"../../Account\";\r\n\r\nconst UserFollowButton: React.FC<{ user_id: string }> = ({ user_id }) => {\r\n  const {\r\n    myId,\r\n    isFollowing,\r\n    checkIfFollowing,\r\n    setIsFollowing,\r\n  }: {\r\n    myId: string;\r\n    isFollowing: boolean;\r\n    checkIfFollowing: (\r\n      sourceId: string,\r\n      destinationId: string\r\n    ) => Promise<boolean>;\r\n    setIsFollowing: React.Dispatch<React.SetStateAction<boolean>>;\r\n  } = useContext(AccountContext);\r\n\r\n  // Change follow button when loading page\r\n  useEffect(() => {\r\n    if (!checkIfFollowing || !setIsFollowing) {\r\n      return;\r\n    }\r\n    async function check() {\r\n      let response = await checkIfFollowing(myId, user_id);\r\n      setIsFollowing(response);\r\n    }\r\n    check();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user_id]);\r\n\r\n  // SelfUnfollowButton: Users cannot unfollow themselves\r\n  // Shows button to unfollow if currently following\r\n  // Else shows button to follow\r\n  return (\r\n    <div className=\"user-follow-button\">\r\n      {user_id === myId ? (\r\n        <SelfUnfollowButton />\r\n      ) : isFollowing ? (\r\n        <UnfollowButton user_id={user_id} />\r\n      ) : (\r\n        <FollowButton user_id={user_id} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserFollowButton;\r\n","import React from \"react\";\r\n\r\nimport User from \"../../../Types/User\";\r\n// interface User {\r\n//   user_id: string;\r\n//   handle?: string;\r\n//   display_name?: string;\r\n//   created_on?: string;\r\n//   bio?: string;\r\n//   follower_count?: number;\r\n//   following_count?: number;\r\n// }\r\n\r\ninterface Props {\r\n  updatePageState: (stateId: number) => void;\r\n  user: User;\r\n}\r\n\r\nconst UserInfo: React.FC<Props> = ({ updatePageState, user }) => {\r\n  const printProps = () => {\r\n    console.log(\"yo\", user);\r\n  };\r\n\r\n  const months: Array<string> = [\r\n    \"Jan \",\r\n    \"Feb \",\r\n    \"Mar \",\r\n    \"Apr \",\r\n    \"May \",\r\n    \"Jun \",\r\n    \"Jul \",\r\n    \"Aug \",\r\n    \"Sep \",\r\n    \"Oct \",\r\n    \"Nov \",\r\n    \"Dec \",\r\n  ];\r\n\r\n  const formatDate = (date: string | undefined) => {\r\n    if (!date) return \"\";\r\n    const x = new Date(date);\r\n    const month = x.getMonth();\r\n    const year = x.getFullYear();\r\n    return \"Joined: \" + months[month] + \" \" + year;\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-info\">\r\n      <div className=\"user-displayname\" onClick={printProps}>\r\n        {user.display_name}\r\n      </div>\r\n      <div id=\"user-joindate\">{formatDate(user.created_on)}</div>\r\n      <div className=\"user-handle\">{user.handle}</div>\r\n      <div className=\"user-bio\">{user.bio}</div>\r\n      <div className=\"user-tabs\">\r\n        <div className=\"user-tab-bits user-current-tab\">\r\n          <b>5</b> Bits\r\n        </div>\r\n        <div className=\"user-tab-replies \">\r\n          <b>7</b> Bits and replies\r\n        </div>\r\n        <div className=\"user-following\">\r\n          <b>{user.following_count}</b> Following\r\n        </div>\r\n        <div className=\"user-followers\">\r\n          <b>{user.follower_count}</b> Followers\r\n        </div>\r\n        <div className=\"user-likes\">\r\n          <b>5</b> Likes\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React from \"react\";\r\nimport \"./UserHeader.css\";\r\n\r\nimport UserBanner from \"./components/UserBanner\";\r\nimport UserPhoto from \"./components/UserPhoto\";\r\nimport UserFollowButton from \"./components/UserFollowButton\";\r\nimport UserInfo from \"./components/UserInfo\";\r\n\r\nimport User from \"../../Types/User\";\r\n// interface User {\r\n//   user_id: string;\r\n//   handle?: string;\r\n//   display_name?: string;\r\n//   created_on?: string;\r\n//   bio?: string;\r\n//   follower_count?: number;\r\n//   following_count?: number;\r\n// }\r\n\r\ninterface Props {\r\n  updatePageState: (stateId: number) => void;\r\n  user: User;\r\n}\r\n\r\nconst UserHeader: React.FC<Props> = ({ updatePageState, user }) => {\r\n  return (\r\n    <div className=\"user-header\">\r\n      <UserBanner user_id={user.user_id} />\r\n      <div className=\"user-pfp-follow\">\r\n        <UserPhoto user_id={user.user_id} />\r\n        <UserFollowButton user_id={user.user_id} />\r\n      </div>\r\n      <UserInfo updatePageState={updatePageState} user={user} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserHeader;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AccountContext } from \"../Account\";\r\nimport BitList from \"../Main/BitList/BitList\";\r\nimport \"./UserBitList.css\";\r\n\r\nimport BitInfo from \"../../Types/BitInfo\";\r\n// interface BitInfo {\r\n//   content: string;\r\n//   dislikes: number;\r\n//   display_name: string;\r\n//   handle: string;\r\n//   index: number;\r\n//   likes: number;\r\n//   post_id: number;\r\n//   post_time: string;\r\n//   replies: number;\r\n//   reply_to: number;\r\n//   reposts: number;\r\n//   status: number;\r\n//   user_id: number;\r\n// }\r\n\r\ninterface Props {\r\n  replies: boolean;\r\n}\r\n\r\nconst UserBitList: React.FC<Props> = ({ replies }) => {\r\n  // fetch list of bits\r\n  const [bits, setBits] = useState<Array<BitInfo>>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const { API_URL, currId }: { API_URL: string; currId: string } = useContext(\r\n    AccountContext\r\n  );\r\n\r\n  // Fetch posts every time the user changes\r\n  useEffect(() => {\r\n    fetchBits();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currId]);\r\n\r\n  const fetchBits = async () => {\r\n    setIsLoading(true);\r\n    const data: Response = await fetch(`${API_URL}bits/user?user_id=${currId}`);\r\n    const items: Array<BitInfo> = await data.json();\r\n    setBits(items);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  // pass into BitList\r\n  return <BitList bits={bits} isLoading={isLoading} />;\r\n};\r\n\r\nexport default UserBitList;\r\n","import React from \"react\";\r\nimport \"./UserNotFound.css\";\r\n\r\ninterface Props {\r\n  handle: string;\r\n}\r\n\r\nconst UserNotFound: React.FC<Props> = ({ handle }) => {\r\n  // For if an invalid handle is loaded\r\n\r\n  return (\r\n    <div className=\"user-not-found\">\r\n      User <span className=\"user-not-found-handle\">@{handle}</span> could not be\r\n      found.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserNotFound;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport UserHeader from \"../components/UserPage/UserHeader\";\r\nimport UserBitList from \"../components/UserPage/UserBitList\";\r\nimport UserNotFound from \"../components/UserPage/UserNotFound\";\r\nimport \"../components/UserPage/UserPage.css\";\r\nimport { AccountContext } from \"../components/Account\";\r\n\r\nimport User from \"../Types/User\";\r\n// interface User {\r\n//   user_id: string;\r\n//   handle?: string;\r\n//   display_name?: string;\r\n//   created_on?: string;\r\n//   bio?: string;\r\n//   follower_count?: number;\r\n//   following_count?: number;\r\n// }\r\n\r\nconst UserPage: React.FC<{}> = () => {\r\n  const [user, setUser] = useState<User>({ user_id: \"\" });\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [listState, setListState] = useState<any>(\r\n    <UserBitList replies={false} />\r\n  );\r\n\r\n  document.title = (user.handle ? \"@\" + user.handle : \"user\") + \" / Bitter\";\r\n\r\n  const {\r\n    API_URL,\r\n    currId,\r\n    setCurrId,\r\n  }: {\r\n    API_URL: string;\r\n    currId: string;\r\n    setCurrId: React.Dispatch<React.SetStateAction<string>>;\r\n  } = useContext(AccountContext);\r\n\r\n  const handle: string = useLocation().pathname.slice(3);\r\n\r\n  // Database call for user by handle\r\n  const fetchUser = async (handle: string) => {\r\n    setIsLoading(true);\r\n    // Returns {user_id: ''} if user not found\r\n    const fetchUser = await fetch(`${API_URL}user/get?handle=${handle}`);\r\n    const data: User = await fetchUser.json();\r\n    setUser(data);\r\n    setCurrId(data.user_id);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  // Load info on mount\r\n  useEffect(() => {\r\n    fetchUser(handle);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // Update when moving between user pages\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    return history.listen((location) => {\r\n      fetchUser(location.pathname.slice(3));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  // }, [history]);\r\n\r\n  // Change view between bits / bits+replies / following / followers / likes\r\n  function updatePageState(stateId: number): void {\r\n    if (stateId === 0) {\r\n      // Posts\r\n      setListState(<UserBitList replies={false} />);\r\n    } else if (stateId === 1) {\r\n      // Posts and replies\r\n      setListState(<UserBitList replies={true} />);\r\n    } else if (stateId === 2) {\r\n      // following list\r\n      //\r\n    } else if (stateId === 3) {\r\n      // followers list\r\n      //\r\n    } else if (stateId === 4) {\r\n      // like list\r\n      //\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <div className=\"user-loader\">\r\n          <div className=\"loader\" />\r\n        </div>\r\n      ) : (\r\n        <div className=\"user-page\">\r\n          {currId !== \"\" ? (\r\n            <>\r\n              <UserHeader updatePageState={updatePageState} user={user} />\r\n              {listState}\r\n            </>\r\n          ) : (\r\n            <UserNotFound handle={handle} />\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import { CognitoUserAttribute } from \"amazon-cognito-identity-js\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { AccountContext } from \"../Account\";\r\n\r\nexport interface ChangeEmailProps {}\r\n\r\nconst ChangeEmail: React.FC<ChangeEmailProps> = () => {\r\n  const [newEmail, setNewEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  const [emailExists, setEmailExists] = useState<boolean>(false);\r\n  const [isPasswordCorrect, setIsPasswordCorrect] = useState<boolean>(true);\r\n  const [hasSucceeded, setHasSucceeded] = useState<boolean>(false);\r\n\r\n  const {\r\n    authenticate,\r\n    getSession,\r\n    isEmailUsed,\r\n  }: {\r\n    authenticate: (Username: string, Password: string) => Promise<undefined>;\r\n    getSession: () => Promise<any>;\r\n    isEmailUsed: (email: string) => Promise<boolean>;\r\n  } = useContext(AccountContext);\r\n\r\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    console.log(\"change email\");\r\n\r\n    // Check if email is already used\r\n    if (await isEmailUsed(newEmail)) {\r\n      setEmailExists(true);\r\n      return;\r\n    }\r\n\r\n    // check valid email (done by type = \"email\" ?)\r\n    getSession()\r\n      .then(({ user }) => {\r\n        // Check password\r\n        authenticate(user.username, password)\r\n          .then(() => {\r\n            const attributes = [\r\n              new CognitoUserAttribute({ Name: \"email\", Value: newEmail }),\r\n            ];\r\n\r\n            user.updateAttributes(\r\n              attributes,\r\n              (err: string, results: string) => {\r\n                if (err) {\r\n                  console.error(err);\r\n                } else {\r\n                  setHasSucceeded(true);\r\n                }\r\n                console.log(results);\r\n              }\r\n            );\r\n          })\r\n          .catch((err) => {\r\n            switch (err.code) {\r\n              case \"NotAuthorizedException\":\r\n                // Incorrect password\r\n                setIsPasswordCorrect(false);\r\n                break;\r\n            }\r\n          });\r\n      })\r\n      .catch((err) => console.error(err));\r\n\r\n    // check password\r\n    // highlight input if incorrect + error message\r\n    // send verification to new email\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-field\">\r\n      <div className=\"settings-header\">Change email</div>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"settings-input-field\">\r\n          <div className=\"settings-input-label\">New email:</div>\r\n          <div className=\"settings-input-wrapper\">\r\n            <input\r\n              value={newEmail}\r\n              onChange={(event) => {\r\n                setEmailExists(false);\r\n                setNewEmail(event.target.value);\r\n              }}\r\n              type=\"email\"\r\n              className={emailExists ? \"invalid\" : \"\"}\r\n            />\r\n\r\n            {/* Email already exists */}\r\n            {emailExists ? (\r\n              <div className=\"form-error-message\">\r\n                An account with this email already exists\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"settings-input-field\">\r\n          <div className=\"settings-input-label\">Password:</div>\r\n          <div className=\"settings-input-wrapper\">\r\n            <input\r\n              value={password}\r\n              onChange={(event) => {\r\n                setIsPasswordCorrect(true);\r\n                setPassword(event.target.value);\r\n              }}\r\n              type=\"password\"\r\n              className={isPasswordCorrect ? \"\" : \"invalid\"}\r\n            />\r\n\r\n            {/* Incorrect password */}\r\n            {isPasswordCorrect ? (\r\n              \"\"\r\n            ) : (\r\n              <div className=\"form-error-message\">Incorrect password</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n\r\n      {/* Success message */}\r\n      {hasSucceeded ? (\r\n        <div className=\"form-success-message\">\r\n          Success! Please check your email to verify the new address\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeEmail;\r\n","import React, { useState } from \"react\";\r\n\r\nexport interface ChangePasswordProps {}\r\n\r\nconst ChangePassword: React.FC<ChangePasswordProps> = () => {\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [newPassword, setNewPassword] = useState<string>(\"\");\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState<string>(\"\");\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    console.log(\"change password\");\r\n    // check password\r\n    // highlight input if incorrect + error message\r\n    // send verification to new email\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-field\">\r\n      <div className=\"settings-header\">Current password:</div>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"settings-input-field\">\r\n          <div className=\"settings-input-label\">Password:</div>\r\n          <div className=\"settings-input-wrapper\">\r\n            <input\r\n              value={password}\r\n              onChange={(event) => setPassword(event.target.value)}\r\n              type=\"password\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"settings-input-field\">\r\n          <div className=\"settings-input-label\">New password:</div>\r\n          <div className=\"settings-input-wrapper\">\r\n            <input\r\n              value={newPassword}\r\n              onChange={(event) => setNewPassword(event.target.value)}\r\n              type=\"password\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"settings-input-field\">\r\n          <div className=\"settings-input-label\">Confirm password:</div>\r\n          <div className=\"settings-input-wrapper\">\r\n            <input\r\n              value={confirmNewPassword}\r\n              onChange={(event) => setConfirmNewPassword(event.target.value)}\r\n              type=\"password\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { useContext } from \"react\";\r\nimport { AccountContext } from \"../Account\";\r\n\r\nexport interface LogoutButtonProps {}\r\n\r\nconst LogoutButton: React.FC<LogoutButtonProps> = () => {\r\n  const { logout } = useContext(AccountContext);\r\n  const onClick = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(\"logout\");\r\n    // Confirmation popup !!!!\r\n\r\n    logout();\r\n  };\r\n\r\n  return (\r\n    <div id=\"logout-button\">\r\n      <button className=\"button-primary\" onClick={onClick}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;\r\n","import React, { useContext } from \"react\";\r\nimport { AccountContext } from \"../Account\";\r\n\r\nexport interface DeleteAccountButtonProps {}\r\n\r\nconst DeleteAccountButton: React.FC<DeleteAccountButtonProps> = () => {\r\n  const onClick = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(\"delete account\");\r\n    // Confirmation popup (password + type \"delete-me\")\r\n  };\r\n\r\n  return (\r\n    <div id=\"delete-account-button\">\r\n      <button onClick={onClick} className=\"button-primary\">\r\n        Delete account\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteAccountButton;\r\n","import React from \"react\";\r\nimport \"../components/Settings/Settings.css\";\r\nimport ChangeEmail from \"../components/Settings/ChangeEmail\";\r\nimport ChangePassword from \"../components/Settings/ChangePassword\";\r\nimport LogoutButton from \"../components/Settings/LogoutButton\";\r\nimport DeleteAccountButton from \"../components/Settings/DeleteAccountButton\";\r\n\r\nconst Settings: React.FC<{}> = () => {\r\n  document.title = \"Settings / Bitter\";\r\n\r\n  return (\r\n    <div className=\"settings\">\r\n      <div className=\"settings-title\">Settings</div>\r\n      <ChangeEmail />\r\n      <ChangePassword />\r\n      <LogoutButton />\r\n      <DeleteAccountButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AccountContext } from \"../components/Account\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport { CognitoUserSession } from \"amazon-cognito-identity-js\";\r\n\r\ninterface LoginProps {\r\n  setMyHandle: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst Login: React.FC<LoginProps> = ({ setMyHandle }) => {\r\n  document.title = \"Login / Bitter\";\r\n\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  const [emailNotVerified, setEmailNotVerified] = useState<boolean>(false);\r\n  const [invalidLoginDetails, setInvalidLoginDetails] = useState<boolean>(\r\n    false\r\n  );\r\n\r\n  const { authenticate, setIsLoggedIn, setMyId } = useContext(AccountContext);\r\n\r\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    authenticate(username, password)\r\n      .then((data: CognitoUserSession) => {\r\n        console.log(\"Logged in!\", data);\r\n        setMyId(data.getIdToken().payload[\"sub\"]);\r\n        setMyHandle(data.getIdToken().payload[\"cognito:username\"]);\r\n        setIsLoggedIn(true);\r\n      })\r\n      .catch((err: any) => {\r\n        const code: string = err.code;\r\n        switch (code) {\r\n          case \"UserNotConfirmedException\":\r\n            console.error(\"Email not verified\");\r\n            setEmailNotVerified(true);\r\n            break;\r\n          case \"NotAuthorizedException\":\r\n            console.error(\"Incorrect username or password\");\r\n            setInvalidLoginDetails(true);\r\n            break;\r\n          default:\r\n            console.error(\"Failed to login!\", err);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login-title\">Login</div>\r\n\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"login-input-field\">\r\n          <div className=\"login-input-label\">Email / Handle:</div>\r\n          <input\r\n            value={username}\r\n            onChange={(event) => {\r\n              setEmailNotVerified(false);\r\n              setInvalidLoginDetails(false);\r\n              setUsername(event.target.value);\r\n            }}\r\n            type=\"text\"\r\n            className={emailNotVerified || invalidLoginDetails ? \"invalid\" : \"\"}\r\n          />\r\n\r\n          {/* Account not verified */}\r\n          {emailNotVerified ? (\r\n            <div className=\"form-error-message\">\r\n              You need to verify your email before logging in\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"login-input-field\">\r\n          <div className=\"login-input-label\">Password:</div>\r\n          <input\r\n            value={password}\r\n            onChange={(event) => {\r\n              setInvalidLoginDetails(false);\r\n              setPassword(event.target.value);\r\n            }}\r\n            type=\"password\"\r\n            className={invalidLoginDetails ? \"invalid\" : \"\"}\r\n          />\r\n\r\n          {/* Invalid login details */}\r\n          {invalidLoginDetails ? (\r\n            <div className=\"form-error-message\">\r\n              Incorrect username or password\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <button type=\"submit\">Submit</button>\r\n        <div id=\"login-register-link\">\r\n          <Link to=\"/register\">Create an account</Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { CognitoUserAttribute } from \"amazon-cognito-identity-js\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AccountContext } from \"../components/Account\";\r\nimport UserPool from \"../UserPool\";\r\nimport \"./Register.css\";\r\n\r\nconst Register: React.FC<{}> = () => {\r\n  document.title = \"Register / Bitter\";\r\n\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState<string>(\"\");\r\n\r\n  const [isUsernameEmpty, setIsUsernameEmpty] = useState<boolean>(false);\r\n  const [isUsernameTooLong, setIsUsernameTooLong] = useState<boolean>(false);\r\n  const [isEmailEmpty, setIsEmailEmpty] = useState<boolean>(false);\r\n\r\n  const [usernameExists, setUsernameExists] = useState<boolean>(false);\r\n  const [emailExists, setEmailExists] = useState<boolean>(false);\r\n  const [passwordsMismatch, setPasswordsMismatch] = useState<boolean>(false);\r\n\r\n  const [isUsernameValid, setIsUsernameValid] = useState<boolean>(true);\r\n  const [isEmailValid, setIsEmailValid] = useState<boolean>(true);\r\n  const [isPasswordValid, setIsPasswordValid] = useState<boolean>(true);\r\n\r\n  const {\r\n    isEmailUsed,\r\n  }: {\r\n    isEmailUsed: (email: string) => Promise<boolean>;\r\n  } = useContext(AccountContext);\r\n\r\n  const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    console.log(\"register\");\r\n\r\n    // Check fields not empty and passwords match\r\n    if (areFieldsValid()) {\r\n      console.log(\"empty fields!\");\r\n      return;\r\n    }\r\n\r\n    // Check if email exists\r\n    if (await isEmailUsed(email)) {\r\n      setEmailExists(true);\r\n      return;\r\n    }\r\n\r\n    // Register\r\n    UserPool.signUp(\r\n      username,\r\n      password,\r\n      [new CognitoUserAttribute({ Name: \"email\", Value: email })],\r\n      [],\r\n      (err: any, data) => {\r\n        if (err) {\r\n          const code = err.code;\r\n          console.log(err);\r\n\r\n          switch (code) {\r\n            case \"UsernameExistsException\":\r\n              setUsernameExists(true);\r\n              break;\r\n            case \"InvalidPasswordException\":\r\n              setIsPasswordValid(false);\r\n              break;\r\n            default:\r\n              // MAKE GENERAL ERROR MESSAGE FOR IF THIS OCCURS !!!!!\r\n              console.log(\"an error occured\");\r\n          }\r\n        }\r\n        console.log(data);\r\n      }\r\n    );\r\n  };\r\n\r\n  const areFieldsValid = () => {\r\n    let result: boolean = false;\r\n\r\n    if (username.length < 1) {\r\n      console.log(\"no handle!\");\r\n      setIsUsernameEmpty(true);\r\n      result = true;\r\n    } else if (username.length > 25) {\r\n      console.log(\"handle too long!\");\r\n      setIsUsernameTooLong(true);\r\n      result = true;\r\n    } else if (!checkIsHandleValid(username)) {\r\n      console.log(\"invalid handle\");\r\n      setIsUsernameValid(false);\r\n      result = true;\r\n    }\r\n\r\n    if (email.length < 1) {\r\n      console.log(\"no email!\");\r\n      setIsEmailEmpty(true);\r\n      result = true;\r\n    }\r\n\r\n    if (!checkIsPasswordValid(password)) {\r\n      console.log(\"invalid password\");\r\n      setIsPasswordValid(false);\r\n      result = true;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setPasswordsMismatch(true);\r\n      result = true;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const checkIsHandleValid = (s: string) => {\r\n    if (s.length < 1) return false;\r\n    const handleArray: Array<string> = s.split(\"\");\r\n    const validChars: string =\r\n      \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n\r\n    for (let i = 0; i < handleArray.length; i++) {\r\n      if (validChars.includes(handleArray[i])) {\r\n        continue;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const checkIsPasswordValid = (s: string) => {\r\n    if (s.length < 8) return false;\r\n    const passwordArray: Array<string> = s.split(\"\");\r\n\r\n    let requirements: Array<boolean> = [false, false, false, false];\r\n    const lowercase: string = \"abcdefghijklmnopqrstuvwxyz\";\r\n    const uppercase: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    const numbers: string = \"0123456789\";\r\n    const specials: string = \"=+-^$*.[]{}()?\\\"!@#%&/\\\\,><':;|_~`\";\r\n    const checkSelf = (x: boolean): boolean => x;\r\n\r\n    passwordArray.forEach((char) => {\r\n      if (lowercase.includes(char)) {\r\n        requirements[0] = true;\r\n      } else if (uppercase.includes(char)) {\r\n        requirements[1] = true;\r\n      } else if (numbers.includes(char)) {\r\n        requirements[2] = true;\r\n      } else if (specials.includes(char)) {\r\n        requirements[3] = true;\r\n      }\r\n    });\r\n\r\n    return requirements.every(checkSelf);\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"register-title\">Register</div>\r\n\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"register-input-field\">\r\n          <div className=\"register-input-label \">Handle:</div>\r\n          <input\r\n            value={username}\r\n            onChange={(event) => {\r\n              setIsUsernameEmpty(false);\r\n              setIsUsernameTooLong(false);\r\n              setIsUsernameValid(true);\r\n              setUsernameExists(false);\r\n              setUsername(event.target.value);\r\n            }}\r\n            type=\"text\"\r\n            className={\r\n              isUsernameEmpty ||\r\n              !isUsernameValid ||\r\n              usernameExists ||\r\n              isUsernameTooLong\r\n                ? \"invalid\"\r\n                : \"\"\r\n            }\r\n          />\r\n\r\n          {/* Username field empty */}\r\n          {isUsernameEmpty ? (\r\n            <div className=\"form-error-message\">Handle field is empty</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {/* Username too long */}\r\n          {isUsernameTooLong ? (\r\n            <div className=\"form-error-message\">Handle is too long</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {/* Invalid username */}\r\n          {!isUsernameValid ? (\r\n            <div className=\"form-error-message\">\r\n              Invalid handle (no special characters allowed)\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {/* Username already exists */}\r\n          {usernameExists ? (\r\n            <div className=\"form-error-message\">\r\n              An account with this handle already exists\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"register-input-field\">\r\n          <div className=\"register-input-label\">Email:</div>\r\n          <input\r\n            value={email}\r\n            onChange={(event) => {\r\n              setIsEmailEmpty(false);\r\n              setEmailExists(false);\r\n              setIsEmailValid(true);\r\n              setEmail(event.target.value);\r\n            }}\r\n            type=\"email\"\r\n            className={isEmailEmpty || emailExists ? \"invalid\" : \"\"}\r\n          />\r\n\r\n          {/* Email field empty */}\r\n          {isEmailEmpty ? (\r\n            <div className=\"form-error-message\">Email field is empty</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {/* Email already exists */}\r\n          {emailExists ? (\r\n            <div className=\"form-error-message\">\r\n              An account with this email already exists\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {/* Invalid email */}\r\n          {!isEmailValid ? (\r\n            <div className=\"form-error-message\">Invalid email</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"register-input-field\">\r\n          <div className=\"register-input-label\">Password:</div>\r\n          <input\r\n            value={password}\r\n            onChange={(event) => {\r\n              setPasswordsMismatch(false);\r\n              setIsPasswordValid(true);\r\n              setPassword(event.target.value);\r\n            }}\r\n            type=\"password\"\r\n            className={!isPasswordValid || passwordsMismatch ? \"invalid\" : \"\"}\r\n          />\r\n\r\n          {/* Invalid password */}\r\n          {!isPasswordValid ? (\r\n            <div className=\"form-error-message\">\r\n              Password must be at least 8 characters long, and contain at least\r\n              one uppercase, lowercase, number and special character.\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <div className=\"register-input-field\">\r\n            <div className=\"register-input-label\">Confirm Password:</div>\r\n            <input\r\n              value={confirmPassword}\r\n              onChange={(event) => {\r\n                setPasswordsMismatch(false);\r\n                setConfirmPassword(event.target.value);\r\n              }}\r\n              type=\"password\"\r\n              className={!isPasswordValid || passwordsMismatch ? \"invalid\" : \"\"}\r\n            />\r\n          </div>\r\n\r\n          {/* Passwords don't match */}\r\n          {passwordsMismatch && isPasswordValid ? (\r\n            <div className=\"form-error-message\">! Passwords do not match !</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <button type=\"submit\">Submit</button>\r\n        <div id=\"register-login-link\">\r\n          Already have an account? <Link to=\"/login\">Login here</Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useContext } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { AccountContext } from \"./components/Account\";\r\n\r\ninterface Props {\r\n  Component: any;\r\n  path: string;\r\n}\r\n\r\nconst PrivateRoute: React.FC<Props> = ({ Component, path }) => {\r\n  // isLoggedIn in props please!\r\n  const { isLoggedIn }: { isLoggedIn: boolean } = useContext(AccountContext);\r\n\r\n  return (\r\n    <Route\r\n      render={() =>\r\n        isLoggedIn === true ? (\r\n          <Component />\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/login\" }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useState } from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Admin from \"./pages/Admin\";\nimport { Account } from \"./components/Account\";\nimport \"./App.css\";\n\n// Persistent\nimport LeftColumn from \"./components/Main/LeftColumn\";\nimport RightColumn from \"./components/Main/RightColumn\";\n\n// Pages\nimport Timeline from \"./pages/Timeline\";\nimport UserPage from \"./pages/UserPage\";\nimport Settings from \"./pages/Settings\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst App: React.FC<{}> = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\n  const [myHandle, setMyHandle] = useState<string>(\"\");\n\n  return (\n    <Account\n      isLoggedIn={isLoggedIn}\n      setIsLoggedIn={setIsLoggedIn}\n      myHandle={myHandle}\n      setMyHandle={setMyHandle}\n    >\n      <Router basename=\"/\">\n        <div className=\"App\">\n          <LeftColumn />\n\n          <div id=\"mid-col\" className=\"main-col\">\n            <Switch>\n              {/* Login page (redirect if logged in) */}\n              <Route\n                path=\"/login\"\n                render={() =>\n                  isLoggedIn === true ? (\n                    <Redirect to={{ pathname: \"/home\" }} />\n                  ) : (\n                    <Login setMyHandle={setMyHandle} />\n                  )\n                }\n              />\n\n              {/* Registration page (redirect if logged in) */}\n              <Route\n                path=\"/register\"\n                render={() =>\n                  isLoggedIn === true ? (\n                    <Redirect to={{ pathname: \"/home\" }} />\n                  ) : (\n                    <Register />\n                  )\n                }\n              />\n\n              {/* Home page and redirects */}\n              <Route path=\"/home\" exact render={() => <Timeline />} />\n              <Route\n                path=\"/\"\n                exact\n                render={() => <Redirect to={{ pathname: \"/home\" }} />}\n              />\n\n              {/* Admin page */}\n              <PrivateRoute path=\"/admin\" Component={Admin} />\n\n              {/* Settings page */}\n              <PrivateRoute path=\"/settings\" Component={Settings} />\n\n              {/* Current user page */}\n              <Route\n                path=\"/me\"\n                render={() =>\n                  isLoggedIn === true ? (\n                    <Redirect to={{ pathname: `/u/${myHandle}` }} />\n                  ) : (\n                    <Redirect to={{ pathname: \"/login\" }} />\n                  )\n                }\n              />\n\n              {/* General user page */}\n              <Route path=\"/u/:handle\" render={() => <UserPage />} />\n            </Switch>\n          </div>\n\n          <RightColumn />\n        </div>\n      </Router>\n    </Account>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}