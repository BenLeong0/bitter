{"version":3,"sources":["components/options/OptionLink.js","components/options/home.svg","components/options/user.svg","components/options/settings.svg","components/options/OptionsBox.js","components/timeline/PostBoxForm.js","components/timeline/PostBit.js","components/timeline/reply.svg","components/timeline/rebit.svg","components/timeline/like.svg","components/timeline/dislike.svg","components/timeline/BitButtonBar.js","components/timeline/Bit.js","components/timeline/BitList.js","components/timeline/Timeline.js","components/users/FindUser.js","components/users/UserSuggestions.js","App.js","reportWebVitals.js","index.js"],"names":["OptionLink","props","classes","index","className","src","logo","alt","title","OptionsBox","Option","link","this","optionList","HomeLogo","UserLogo","SettingsLogo","map","option","PostBoxForm","useState","post","updatePost","remainingChars","updateChars","charCounterColour","changeCounterColour","handleSubmitClick","e","a","preventDefault","console","log","type","id","placeholder","value","onChange","target","length","contentEditable","onClick","style","color","PostBit","BitButtonBar","like","formdata","FormData","append","fetch","method","body","then","response","json","result","printResp","catch","error","resp","ReplyButton","RebitButton","LikeButton","DislikeButton","Bit","display_name","handle","content","BitList","bit","key","Timeline","FindUser","UserSuggestions","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67cf4ab2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst OptionLink = (props) => {\r\n  const classes = `option ${props.index === 0 ? \"first-option\" : \"\"}`;\r\n\r\n  return (\r\n    <div className={classes}>\r\n      <div className=\"option-logo-box\">\r\n        <img src={props.logo} alt=\"logo\" className=\"option-logo\" />\r\n      </div>\r\n      <div className=\"option-title\"> {props.title}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionLink;\r\n","export default __webpack_public_path__ + \"static/media/home.671555e9.svg\";","export default __webpack_public_path__ + \"static/media/user.279444fa.svg\";","export default __webpack_public_path__ + \"static/media/settings.949b2aef.svg\";","import React from \"react\";\r\nimport \"./OptionsBox.css\";\r\nimport OptionLink from \"./OptionLink\";\r\nimport HomeLogo from \"./home.svg\";\r\nimport UserLogo from \"./user.svg\";\r\nimport SettingsLogo from \"./settings.svg\";\r\n\r\nconst OptionsBox = (props) => {\r\n  class Option {\r\n    constructor(title, link, logo) {\r\n      this.title = title;\r\n      this.link = link;\r\n      this.logo = logo;\r\n    }\r\n  }\r\n\r\n  const optionList = [\r\n    new Option(\"Home\", \"home_link\", HomeLogo),\r\n    new Option(\"My Page\", \"user_page\", UserLogo),\r\n    new Option(\"Settings\", \"settings_menu\", SettingsLogo),\r\n  ];\r\n\r\n  return (\r\n    <div className=\"options-box\">\r\n      {optionList.map((option, index) => (\r\n        <OptionLink key={index} index={index} {...option} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionsBox;\r\n","import { React, useState } from \"react\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\n\r\nconst PostBoxForm = () => {\r\n  const [post, updatePost] = useState(\"\");\r\n  const [remainingChars, updateChars] = useState(140);\r\n  const [charCounterColour, changeCounterColour] = useState(\"black\");\r\n\r\n  const handleChange = (e) => {\r\n    const { value } = e.target;\r\n    updatePost(value);\r\n    updateChars(140 - value.length);\r\n    if (value.length > 140) {\r\n      changeCounterColour(\"red\");\r\n    } else if (value.length > 110) {\r\n      changeCounterColour(\"orange\");\r\n    } else {\r\n      changeCounterColour(\"black\");\r\n    }\r\n  };\r\n\r\n  const handleSubmitClick = async (e) => {\r\n    e.preventDefault();\r\n    if (remainingChars < 0) {\r\n      console.log(\"too long!\");\r\n      return;\r\n    }\r\n    console.log(`Submit: ${post}`);\r\n    console.log(remainingChars);\r\n\r\n    updatePost(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"postbox-input\">\r\n      <form>\r\n        <TextareaAutosize\r\n          type=\"text\"\r\n          className=\"bit-content\"\r\n          id=\"postbox-input-field\"\r\n          placeholder=\"Post a bit!\"\r\n          value={post}\r\n          onChange={handleChange}\r\n          contentEditable\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"button-primary\"\r\n          onClick={handleSubmitClick}\r\n        >\r\n          Post\r\n        </button>\r\n        <div id=\"postbox-charcount\" style={{ color: charCounterColour }}>\r\n          Remaining characters: {remainingChars}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostBoxForm;\r\n","import React from \"react\";\r\nimport PostBoxForm from \"./PostBoxForm\";\r\n\r\nconst PostBit = () => {\r\n  return (\r\n    <div className=\"postbox\">\r\n      <div className=\"postbox-pfp\">\r\n        <img src=\"https://via.placeholder.com/48\" alt=\"profile pic\"></img>\r\n      </div>\r\n      <PostBoxForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostBit;\r\n","export default __webpack_public_path__ + \"static/media/reply.34834fc8.svg\";","export default __webpack_public_path__ + \"static/media/rebit.e12d3005.svg\";","export default __webpack_public_path__ + \"static/media/like.231952c6.svg\";","export default __webpack_public_path__ + \"static/media/dislike.4c5bf648.svg\";","import React from \"react\";\r\nimport ReplyButton from \"./reply.svg\";\r\nimport RebitButton from \"./rebit.svg\";\r\nimport LikeButton from \"./like.svg\";\r\nimport DislikeButton from \"./dislike.svg\";\r\n\r\nconst BitButtonBar = (props) => {\r\n  const reply = () => {\r\n    console.log(`reply to tweet ${props.index}`);\r\n  };\r\n\r\n  const rebit = () => {\r\n    console.log(`rebit tweet ${props.index}`);\r\n  };\r\n\r\n  const like = async () => {\r\n    var formdata = new FormData();\r\n    formdata.append(\"username\", \"userben\");\r\n    formdata.append(\"password\", \"passwordman\");\r\n\r\n    fetch(\"http://localhost:8000/rest-auth/login/\", {\r\n      method: \"POST\",\r\n      body: formdata,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => printResp(result))\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n  const printResp = (resp) => {\r\n    console.log(resp);\r\n  };\r\n\r\n  const dislike = () => {\r\n    console.log(`dislike tweet ${props.index}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bit-buttons\">\r\n      <input\r\n        type=\"image\"\r\n        src={ReplyButton}\r\n        alt=\"reply button\"\r\n        onClick={reply}\r\n      />\r\n      <input\r\n        type=\"image\"\r\n        src={RebitButton}\r\n        alt=\"rebit button\"\r\n        onClick={rebit}\r\n      />\r\n      <input type=\"image\" src={LikeButton} alt=\"like button\" onClick={like} />\r\n      <input\r\n        type=\"image\"\r\n        src={DislikeButton}\r\n        alt=\"dislike button\"\r\n        onClick={dislike}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BitButtonBar;\r\n","import React from \"react\";\r\nimport BitButtonBar from \"./BitButtonBar\";\r\n\r\nconst Bit = (props) => {\r\n  // convert timestamp to time passed\r\n  return (\r\n    <div className=\"bit\">\r\n      <div className=\"bit-pfp\">\r\n        <img src=\"https://via.placeholder.com/48\" alt=\"profile pic\"></img>\r\n      </div>\r\n      <div className=\"bit-content\">\r\n        <div className=\"bit-info\">\r\n          <span className=\"bit-info-displayname\">{props.display_name}</span>\r\n          <span className=\"bit-info-handle\">@{props.handle}・8hr</span>\r\n        </div>\r\n        <div className=\"bit-text\"> {props.content} </div>\r\n        <BitButtonBar {...props} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bit;\r\n","import React from \"react\";\r\nimport Bit from \"./Bit\";\r\n\r\nconst BitList = (props) => {\r\n  // retrieve bits from backend\r\n  const bits = [\r\n    {\r\n      handle: \"ben\",\r\n      display_name: \"NoPressure1\",\r\n      content:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco l\",\r\n    },\r\n    { handle: \"sam\", display_name: \"GodFluxxy\", content: \"test bit\" },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {bits.map((bit, index) => (\r\n        <Bit {...bit} key={index} index={index} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BitList;\r\n","import React from \"react\";\r\nimport \"./Timeline.css\";\r\nimport PostBit from \"./PostBit\";\r\nimport BitList from \"./BitList\";\r\n\r\nconst Timeline = () => {\r\n  return (\r\n    <div className=\"timeline\">\r\n      <PostBit />\r\n      <BitList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timeline;\r\n","import React from 'react';\r\nimport './users.css'\r\n\r\nconst FindUser = () => {\r\n    return (\r\n        <div className=\"find-user\"></div>\r\n    );\r\n}\r\n\r\nexport default FindUser","import React from 'react';\r\n\r\nconst UserSuggestions = () => {\r\n    return (\r\n        <div className=\"user-suggestions\"></div>\r\n    );\r\n}\r\n\r\nexport default UserSuggestions;","import \"./App.css\";\nimport OptionsBox from \"./components/options/OptionsBox\";\nimport Timeline from \"./components/timeline/Timeline\";\nimport FindUser from \"./components/users/FindUser\";\nimport UserSuggestions from \"./components/users/UserSuggestions\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div id=\"left-col\" className=\"main-col\">\n        <OptionsBox />\n      </div>\n      <div id=\"mid-col\" className=\"main-col\">\n        <Timeline />\n      </div>\n      <div id=\"right-col\" className=\"main-col\">\n        <FindUser />\n        <UserSuggestions />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}