{"version":3,"sources":["UserPool.tsx","components/core/CoreService.ts","components/Admin/Admin.tsx","components/Account.tsx","components/SidebarLeft/Options/OptionLink.tsx","components/SidebarLeft/Options/OptionsUserBox.tsx","components/SidebarLeft/Options/Icons/home.svg","components/SidebarLeft/Options/Icons/allposts.svg","components/SidebarLeft/Options/Icons/user.svg","components/SidebarLeft/Options/Icons/settings.svg","components/SidebarLeft/Options/Icons/login.svg","components/SidebarLeft/Options/Icons/register.svg","components/SidebarLeft/Options/OptionsBox.tsx","components/SidebarLeft/AppTitle/AppTitle.tsx","components/SidebarLeft/LeftColumn.tsx","components/SidebarRight/FindUser/FindUserForm.tsx","components/SidebarRight/FindUser/FindUser.tsx","components/core/HttpService.ts","components/core/UserService.ts","components/Shared/FollowButtons/FollowButton.tsx","components/Shared/FollowButtons/UnfollowButton.tsx","components/Shared/FollowButtons/SecondaryFollowButton.tsx","components/SidebarRight/UserSuggestions/UserSuggestion.tsx","components/SidebarRight/UserSuggestions/UserSuggestions.tsx","components/SidebarRight/RightColumn.tsx","components/Shared/PageNotFound.tsx","Types/BitInfo.ts","components/core/BitService.ts","components/Timeline/PostBoxForm.tsx","components/Timeline/PostBit.tsx","components/Shared/Bit/Icons/reply.svg","components/Shared/Bit/Icons/replied.svg","components/Shared/Bit/Icons/rebit.svg","components/Shared/Bit/Icons/rebited.svg","components/Shared/Bit/Icons/like.svg","components/Shared/Bit/Icons/liked.svg","components/Shared/Bit/Icons/dislike.svg","components/Shared/Bit/Icons/disliked.svg","components/core/InteractionsService.ts","components/Shared/Bit/BitButtonBar.tsx","components/Shared/Bit/BitTag.tsx","components/Shared/Bit/OutsideAlerter.js","components/Shared/Bit/BitReplyBox.tsx","components/Shared/Bit/DeletedBit.tsx","components/Shared/Bit/Icons/delete.svg","components/Shared/Bit/Bit.tsx","components/Shared/BitList/BitList.tsx","components/Timeline/TimelineBitList.tsx","components/Timeline/Timeline.tsx","components/UserPage/UserHeader/UserBanner.tsx","components/UserPage/UserHeader/UserPhoto.tsx","components/UserPage/UserHeader/UserInfo.tsx","components/UserPage/UserHeader/EditProfileButton.tsx","components/core/ValidationService.ts","components/UserPage/UserHeader/UserHeader.tsx","components/UserPage/UserBitList.tsx","components/UserPage/UserFollowList/UserCard.tsx","components/UserPage/UserFollowList.tsx","components/UserPage/UserFollowList/UserFollowing.tsx","components/UserPage/UserFollowList/UserFollowers.tsx","components/UserPage/UserLikeList.tsx","components/UserPage/UserPage.tsx","components/BitPage/PreThreadList.tsx","components/BitPage/ReplyThread.tsx","components/BitPage/BitPage.tsx","components/Settings/ChangeEmailConfirmation.tsx","components/Settings/ChangeEmail.tsx","components/Settings/ChangePasswordConfirmation.tsx","components/Settings/ChangePassword.tsx","components/Settings/DeleteAccountConfirmation.tsx","components/Settings/DeleteAccount.tsx","components/Settings/LogoutButton.tsx","components/Settings/Settings.tsx","components/Login/Login.tsx","components/Register/Register.tsx","PrivateRoute.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["CognitoUserPool","UserPoolId","ClientId","CoreService","months","getSession","a","resp","Promise","resolve","reject","user","Pool","getCurrentUser","err","session","getUserAttributes","attributes","results","attribute","Name","Value","token","getIdToken","getJwtToken","headers","Authorization","authenticate","Password","Username","username","cognitoUser","CognitoUser","authDetails","AuthenticationDetails","authenticateUser","onSuccess","data","console","log","onFailure","error","newPasswordRequired","login","toBase64","file","reader","FileReader","readAsDataURL","onload","result","onerror","formatJoinDate","date","x","Date","month","getMonth","year","getFullYear","post_time","bitTime","milliseconds","now","getTime","temp","Math","floor","days","day","String","getDate","this","hours","minutes","seconds","getHours","getMinutes","ampm","strTime","Admin","coreService","document","title","onClick","e","preventDefault","then","catch","AccountContext","createContext","undefined","Account","isLoggedIn","setIsLoggedIn","myHandle","setMyHandle","children","useState","currHandle","setCurrHandle","isAdmin","setIsAdmin","isFollowing","setIsFollowing","refreshList","setRefreshList","useEffect","Provider","value","logout","signOut","refreshBitList","OptionLink","logo","link","className","to","src","alt","UserBox","useContext","OptionsBox","Option","homeOption","HomeLogo","allPostsOption","AllPostsLogo","userOption","UserLogo","settingsOption","SettingsLogo","loginOption","LoginLogo","registerOption","RegisterLogo","AppTitle","LeftColumn","id","FindUserForm","handle","updateHandle","buttonStatus","updateButton","history","useHistory","handleSubmitClick","push","type","name","placeholder","onChange","target","length","disabled","style","opacity","FindUser","HttpService","url","stage","API_URL","res","queryParams","requestOptions","method","reducer","accumulator","currValue","queryString","Object","entries","reduce","fetch","json","body","JSON","stringify","field","base64File","fileType","image","UserService","httpService","fetchUser","makeGetRequest","code","parse","createFollowEdge","destinationHandle","makePostRequest","deleteFollowEdge","makeDeleteRequest","getSuggestedUsers","users","getFollowList","list","getFollowing","getFollowers","deleteAccount","accessToken","jwtToken","FollowButton","setFollowing","userService","follow","UnfollowButton","unfollow","SuggestedUserFollowButton","props","isFollowingSuggested","setIsFollowingSuggested","UserSuggestion","setSrc","toString","slice","onError","display_name","UserSuggestions","suggestedUsers","updateSuggestions","isLoading","setIsLoading","fetchError","setFetchError","fetchSuggestions","map","key","RightColumn","PageNotFound","emptyPost","post_id","content","dislikes","likes","replies","reposts","BitService","postBit","replyTo","deleteBit","getTimeline","timelineType","posts","getBitPage","post","getUserBits","getUserLikes","PostBoxForm","bitService","updatePost","remainingChars","updateChars","charCounterColour","changeCounterColour","errorOccurred","setErrorOccurred","enableButton","disableButton","color","PostBit","InteractionsService","rebitPost","unrebitPost","likePost","unlikePost","dislikePost","undislikePost","BitButtonBar","toggleReplying","replying","interactionsService","rebitShift","setRebitShift","likeShift","setLikeShift","dislikeShift","setDislikeShift","isReposted","setIsReposted","isLiked","setIsLiked","isDisliked","setIsDisliked","rebit","unrebit","like","unlike","dislike","undislike","ReplyingButton","ReplyButton","RebitedButton","RebitButton","LikedButton","LikeButton","DislikedButton","DislikeButton","BitTag","tag","test","i","taggedAccount","postContent","OutsideAlerter","ref","setIsPopoverOpen","wrapperRef","useRef","isPopoverOpen","handleClickOutside","event","current","contains","addEventListener","removeEventListener","BitReplyBox","setReplying","DeletedBit","classes","Bit","bitInfo","splitContent","split","initialContent","myPost","isDeleted","setIsDeleted","rebitter","reply_to","handleDeletePost","trim","display","top","RepliedButton","reply_author","formatBitDate","timestampFormat","DeleteButton","index","BitList","bits","bit","TimelineBitList","setBits","requestCounter","setRequestCounter","fetchBits","requestId","finally","Timeline","pageTitle","UserBanner","process","UserPhoto","UserInfo","updatePageState","listId","setListId","changeTab","state","created_on","bio","bits_count","following_count","follower_count","StyledPopup","Styled","Popup","EditProfileButton","open","setOpen","closeModal","changesSubmitted","go","resetInputs","displayName","setDisplayName","setBio","textErrorOccurred","setTextErrorOccurred","pfpErrorOccurred","setPfpErrorOccurred","bannerErrorOccurred","setBannerErrorOccurred","pfpTooBig","setPfpTooBig","bannerTooBig","setBannerTooBig","pfp","setPfp","banner","setBanner","textChanged","setTextChanged","setChangesSubmitted","textButtonActive","onSubmitText","makePatchRequest","handlePfpChange","files","size","onSubmitPfp","uploadImage","handleBannerChange","onSubmitBanner","width","modal","onClose","onSubmit","cursor","accept","marginTop","ValidationService","isPasswordValid","s","isEmailUsed","email","isHater","UserHeader","validationService","UserBitList","showReplies","filter","UserCard","UserFollowList","UserFollowing","setUsers","fetchUsers","UserFollowers","setLikes","UserPage","setUser","listState","setListState","useLocation","pathname","updateUser","stateId","UserLikeList","listen","location","PreThread","pre_thread","prebit","ReplyThread","thread","reply","BitPage","setPost","setPostId","fetchPost","respPost","elmnt","getElementsByClassName","scrollIntoView","reply_threads","ChangeEmailConfirmation","newEmail","marginBottom","ChangeEmail","setNewEmail","password","setPassword","emailExists","setEmailExists","isPasswordCorrect","setIsPasswordCorrect","hasSucceeded","setHasSucceeded","CognitoUserAttribute","callback","catchError","updateAttributes","ChangePasswordConfirmation","ChangePassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","isNewPasswordValid","setIsNewPasswordValid","passwordsMismatch","setPasswordsMismatch","correctOldPassword","setCorrectOldPassword","changePassword","fontSize","DeleteAccountConfirmation","active","backgroundColor","borderColor","deleteConfirmation","setDeleteConfirmation","isConfirmationCorrect","setIsConfirmationCorrect","LogoutButton","Settings","DeleteAccount","Login","setUsername","emailNotVerified","setEmailNotVerified","invalidLoginDetails","setInvalidLoginDetails","payload","Register","setEmail","confirmPassword","setConfirmPassword","isUsernameEmpty","setIsUsernameEmpty","isUsernameTooLong","setIsUsernameTooLong","isEmailEmpty","setIsEmailEmpty","usernameExists","setUsernameExists","isUsernameValid","setIsUsernameValid","isEmailValid","setIsEmailValid","setIsPasswordValid","areFieldsValid","UserPool","signUp","checkIsHandleValid","PrivateRoute","Component","path","render","App","basename","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.76b65cfa.chunk.js","sourcesContent":["import {\r\n  CognitoUserPool,\r\n  // CognitoUserAttribute,\r\n} from \"amazon-cognito-identity-js\";\r\n\r\nconst poolData = {\r\n  UserPoolId: \"eu-west-2_QLAkrTR47\",\r\n  ClientId: \"4m544sn8a7kf2023cq5qs4polc\",\r\n};\r\n\r\nexport default new CognitoUserPool(poolData);\r\n","import { AuthenticationDetails, CognitoUser, CognitoUserAttribute, CognitoUserSession } from \"amazon-cognito-identity-js\";\r\nimport Pool from \"../../UserPool\";\r\nimport Session from \"../../Types/Session\";\r\n\r\nexport default class CoreService {\r\n\r\n    months: string[] = [\r\n        \"Jan \",\r\n        \"Feb \",\r\n        \"Mar \",\r\n        \"Apr \",\r\n        \"May \",\r\n        \"Jun \",\r\n        \"Jul \",\r\n        \"Aug \",\r\n        \"Sep \",\r\n        \"Oct \",\r\n        \"Nov \",\r\n        \"Dec \",\r\n    ];\r\n\r\n    getSession = async (): Promise<Session> => {\r\n        let resp: any = new Promise<Session>((resolve, reject) => {\r\n            const user: CognitoUser | null = Pool.getCurrentUser();\r\n            if (!user) {reject(\"not logged in\"); return};\r\n            user.getSession(async (err: Error, session: CognitoUserSession | null) => {\r\n                if (err) {\r\n                    reject();\r\n                } else if (session) {\r\n                    const attributes: any = await new Promise((resolve, reject) => {\r\n                        user.getUserAttributes((\r\n                            err: Error | undefined,\r\n                            attributes: CognitoUserAttribute[] | undefined\r\n                        ) => {\r\n                            if (err) {\r\n                                reject(err);\r\n                            } else if (attributes) {\r\n                                const results: any = {};\r\n\r\n                                for (let attribute of attributes) {\r\n                                    const { Name, Value } = attribute;\r\n                                    results[Name] = Value;\r\n                                }\r\n\r\n                                resolve(results);\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                    const token = session.getIdToken().getJwtToken();\r\n\r\n                    resolve({\r\n                        user,\r\n                        headers: {\r\n                            Authorization: token,\r\n                            \"x-api-key\": attributes[\"custom:apikey\"],\r\n                        },\r\n                        ...session,\r\n                        ...attributes,\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        return resp;\r\n    };\r\n\r\n\r\n    authenticate = async (Password: string): Promise<CognitoUser> => {\r\n        const { user } = await this.getSession()\r\n        const Username = user.username\r\n        const cognitoUser = new CognitoUser({ Username, Pool })\r\n        const authDetails = new AuthenticationDetails({ Username, Password });\r\n\r\n        return await new Promise<CognitoUser>((resolve, reject) => {\r\n            cognitoUser.authenticateUser(authDetails, {\r\n                onSuccess: (data) => {\r\n                  console.log(\"onSuccess:\", user);\r\n                  resolve(user);\r\n                },\r\n\r\n                onFailure: (err) => {\r\n                  console.error(\"onFailure:\", err);\r\n                  reject(err);\r\n                },\r\n\r\n                newPasswordRequired: (data) => {\r\n                  console.log(\"newPasswordRequired:\", data);\r\n                  resolve(user);\r\n                },\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    login = async (Username: string, Password: string) =>\r\n        await new Promise<CognitoUserSession>((resolve, reject) => {\r\n            const user = new CognitoUser({ Username, Pool });\r\n\r\n            const authDetails = new AuthenticationDetails({ Username, Password });\r\n\r\n            user.authenticateUser(authDetails, {\r\n                onSuccess: (data) => {\r\n                    console.log(\"onSuccess:\", data);\r\n                    resolve(data);\r\n                },\r\n\r\n                onFailure: (err) => {\r\n                    console.error(\"onFailure:\", err);\r\n                    reject(err);\r\n                },\r\n\r\n                newPasswordRequired: (data) => {\r\n                    console.log(\"newPasswordRequired:\", data);\r\n                    resolve(data);\r\n                },\r\n            });\r\n        });\r\n\r\n\r\n    toBase64 = (file: any) => (\r\n        new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        })\r\n    );\r\n\r\n\r\n    timestampFormat(post_time: string): string {\r\n        const bitTime: Date = new Date(post_time);\r\n        const milliseconds: number = Date.now() - bitTime.getTime(); // Difference in milliseconds\r\n\r\n        let temp: number = Math.floor(milliseconds / 1000);\r\n\r\n        let days: number = Math.floor((temp %= 31536000) / 86400);\r\n        if (days) {\r\n            // Full date if over a month ago, show year if not current year\r\n            if (days <= 30) return days + \"d\";\r\n            let day: string = String(bitTime.getDate());\r\n            let month: string = this.months[bitTime.getMonth()];\r\n            let year: string = (\r\n                bitTime.getFullYear() === new Date().getFullYear()\r\n                ? \"\"\r\n                : \", bitTime.getFullYear()\"\r\n            );\r\n            return month + day + year;\r\n        }\r\n\r\n        let hours: number = Math.floor((temp %= 86400) / 3600);\r\n        if (hours) return hours + \"h\";\r\n\r\n        let minutes: number = Math.floor((temp %= 3600) / 60);\r\n        if (minutes) return minutes + \"m\";\r\n\r\n        let seconds: number = temp % 60;\r\n        if (seconds) return seconds + \"s\";\r\n\r\n        return \"less than a second\"; //'just now' //or other string you like;\r\n        }\r\n\r\n\r\n    formatBitDate(date: Date) {\r\n        let hours: any = date.getHours();\r\n        let minutes: any = date.getMinutes();\r\n        let ampm: any = hours >= 12 ? \"pm\" : \"am\";\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n        let strTime = hours + \":\" + minutes + \" \" + ampm;\r\n        return (\r\n            date.getMonth() +\r\n            1 +\r\n            \"/\" +\r\n            date.getDate() +\r\n            \"/\" +\r\n            date.getFullYear() +\r\n            \" \" +\r\n            strTime\r\n        );\r\n    }\r\n\r\n\r\n    formatJoinDate = (date: string | undefined) => {\r\n      if (!date) return \"\";\r\n      let x = new Date(date);\r\n      let month = x.getMonth();\r\n      let year = x.getFullYear();\r\n      return \"Joined: \" + this.months[month] + \" \" + year;\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport CoreService from \"../core/CoreService\";\r\n\r\nconst Admin: React.FC<{}> = () => {\r\n  const coreService = new CoreService();\r\n\r\n  document.title = \"Admin / Bitter\";\r\n\r\n  const onClick = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    coreService\r\n      .getSession()\r\n      .then((resp) => console.log(resp))\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>Admin page</div>\r\n      <button onClick={onClick}>yo</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport { CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\";\r\nimport Pool from \"../UserPool\";\r\nimport CoreService from \"./core/CoreService\";\r\n\r\ninterface Props {\r\n  isLoggedIn: boolean;\r\n  setIsLoggedIn: React.Dispatch<React.SetStateAction<boolean>>;\r\n  myHandle: string;\r\n  setMyHandle: React.Dispatch<React.SetStateAction<string>>;\r\n  children: any;\r\n}\r\n\r\nconst AccountContext = createContext<any>(undefined);\r\n\r\nconst Account: React.FC<Props> = ({\r\n  isLoggedIn,\r\n  setIsLoggedIn,\r\n  myHandle,\r\n  setMyHandle,\r\n  children,\r\n}) => {\r\n  const coreService = new CoreService();\r\n\r\n  // Info about current user being viewed, i.e. owner of /u/handle\r\n  const [currHandle, setCurrHandle] = useState<string>(\"\");\r\n  const [isAdmin, setIsAdmin] = useState<boolean>(false);\r\n  const [isFollowing, setIsFollowing] = useState<boolean>(false);\r\n\r\n  // Hook to refresh timeline after posting\r\n  const [refreshList, setRefreshList] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    coreService\r\n      .getSession()\r\n      .then((session: any) => {\r\n        if (session[\"custom:role\"] === \"admin\") setIsAdmin(true);\r\n        setIsLoggedIn(true);\r\n        setMyHandle(session.user.username);\r\n      })\r\n      .catch((err) => {\r\n        setMyHandle(\"\");\r\n        setIsAdmin(false);\r\n        return;\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const authenticate = async (Username: string, Password: string) =>\r\n    await new Promise((resolve, reject) => {\r\n      const user = new CognitoUser({ Username, Pool });\r\n\r\n      const authDetails = new AuthenticationDetails({ Username, Password });\r\n\r\n      user.authenticateUser(authDetails, {\r\n        onSuccess: (data) => {\r\n          console.log(\"onSuccess:\", data);\r\n          resolve(data);\r\n        },\r\n\r\n        onFailure: (err) => {\r\n          console.error(\"onFailure:\", err);\r\n          reject(err);\r\n        },\r\n\r\n        newPasswordRequired: (data) => {\r\n          console.log(\"newPasswordRequired:\", data);\r\n          resolve(data);\r\n        },\r\n      });\r\n    });\r\n\r\n  const logout = () => {\r\n    const user = Pool.getCurrentUser();\r\n    if (user) {\r\n      user.signOut();\r\n      setMyHandle(\"\");\r\n      setIsLoggedIn(false);\r\n      setIsAdmin(false);\r\n    }\r\n  };\r\n\r\n  const refreshBitList = () => {\r\n    setRefreshList(!refreshList);\r\n  };\r\n\r\n  return (\r\n    <AccountContext.Provider\r\n      value={{\r\n        authenticate,\r\n        logout,\r\n        refreshList,\r\n        setRefreshList,\r\n        refreshBitList,\r\n        isLoggedIn,\r\n        setIsLoggedIn,\r\n        isFollowing,\r\n        setIsFollowing,\r\n        currHandle,\r\n        setCurrHandle,\r\n        isAdmin,\r\n        setIsAdmin,\r\n        myHandle,\r\n        setMyHandle,\r\n      }}\r\n    >\r\n      {children}\r\n    </AccountContext.Provider>\r\n  );\r\n};\r\n\r\nexport { Account, AccountContext };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Option {\r\n  title: string;\r\n  link: string;\r\n  logo: string;\r\n}\r\n\r\nconst OptionLink: React.FC<Option> = ({ title, logo, link }) => {\r\n  return (\r\n    <div className=\"option\">\r\n      <Link to={link}>\r\n        <div className=\"option-logo-box\">\r\n          <img src={logo} alt=\"logo\" className=\"option-logo\" />\r\n        </div>\r\n        <div className=\"option-title\">{title}</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionLink;\r\n","import React, { useContext } from \"react\";\r\nimport { AccountContext } from \"../../Account\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ContextProps from \"../../../Types/ContextProps\";\r\n\r\nconst UserBox: React.FC<{}> = () => {\r\n  const { myHandle }: ContextProps = useContext(AccountContext);\r\n  return (\r\n    <div className=\"options-userbox\">\r\n      Logged in as: <Link to={`/u/${myHandle}`}>@{myHandle}</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserBox;\r\n","export default __webpack_public_path__ + \"static/media/home.671555e9.svg\";","export default __webpack_public_path__ + \"static/media/allposts.13bfb664.svg\";","export default __webpack_public_path__ + \"static/media/user.279444fa.svg\";","export default __webpack_public_path__ + \"static/media/settings.949b2aef.svg\";","export default __webpack_public_path__ + \"static/media/login.58b554af.svg\";","export default __webpack_public_path__ + \"static/media/register.2c6615d2.svg\";","import React, { useContext } from \"react\";\r\nimport \"./OptionsBox.css\";\r\nimport OptionLink from \"./OptionLink\";\r\nimport UserBox from \"./OptionsUserBox\";\r\n\r\nimport HomeLogo from \"./Icons/home.svg\";\r\nimport AllPostsLogo from \"./Icons/allposts.svg\";\r\nimport UserLogo from \"./Icons/user.svg\";\r\nimport SettingsLogo from \"./Icons/settings.svg\";\r\nimport LoginLogo from \"./Icons/login.svg\";\r\nimport RegisterLogo from \"./Icons/register.svg\";\r\n\r\nimport { AccountContext } from \"../../Account\";\r\nimport ContextProps from \"../../../Types/ContextProps\";\r\n\r\nconst OptionsBox: React.FC<{}> = () => {\r\n  const { isLoggedIn }: ContextProps = useContext(AccountContext);\r\n\r\n  class Option {\r\n    title: string;\r\n    link: string;\r\n    logo: string; // hmmm\r\n\r\n    public constructor(title: string, link: string, logo: string) {\r\n      this.title = title;\r\n      this.link = link;\r\n      this.logo = logo;\r\n    }\r\n  }\r\n\r\n  const homeOption = new Option(\"Home\", \"/home\", HomeLogo);\r\n  const allPostsOption = new Option(\"All posts\", \"/all\", AllPostsLogo);\r\n  const userOption = new Option(\"My Page\", \"/me\", UserLogo);\r\n  const settingsOption = new Option(\"Settings\", \"/settings\", SettingsLogo);\r\n  const loginOption = new Option(\"Login\", \"/login\", LoginLogo);\r\n  const registerOption = new Option(\"Register\", \"/register\", RegisterLogo);\r\n\r\n  return (\r\n    <div className=\"options-box\">\r\n      <OptionLink {...homeOption} />\r\n      {isLoggedIn ? (\r\n        <>\r\n          {/* My page/settings if logged in */}\r\n          <OptionLink {...allPostsOption} />\r\n          <OptionLink {...userOption} />\r\n          <OptionLink {...settingsOption} />\r\n          <hr />\r\n          <UserBox />\r\n        </>\r\n      ) : (\r\n        <>\r\n          {/* Login/Register if not logged in */}\r\n          <OptionLink {...loginOption} />\r\n          <OptionLink {...registerOption} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionsBox;\r\n","import React from \"react\";\r\nimport \"./AppTitle.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AppTitle: React.FC<{}> = () => {\r\n  return (\r\n    <div className=\"app-title-box\">\r\n      <Link to=\"/home\">\r\n        <div className=\"app-title\">Bitter</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppTitle;\r\n","import React from \"react\";\r\n\r\nimport OptionsBox from \"./Options/OptionsBox\";\r\nimport AppTitle from \"./AppTitle/AppTitle\";\r\n\r\nconst LeftColumn: React.FC<{}> = () => {\r\n  return (\r\n    <div id=\"left-col\" className=\"main-col\">\r\n      <AppTitle />\r\n      <OptionsBox />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftColumn;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst FindUserForm: React.FC<{}> = () => {\r\n  const [handle, updateHandle] = useState<string>(\"\");\r\n\r\n  const [buttonStatus, updateButton] = useState<\r\n    [isButtonEnabled: boolean, buttonOpacity: string]\r\n  >([false, \"50%\"]);\r\n\r\n  const handleChange = (e: any) => {\r\n    const { value } = e.target;\r\n    updateHandle(value);\r\n\r\n    // Can't press button if input field is empty\r\n    if (value.length === 0) {\r\n      updateButton([false, \"50%\"]);\r\n    } else {\r\n      updateButton([true, \"100%\"]);\r\n    }\r\n  };\r\n\r\n  const history = useHistory();\r\n  const handleSubmitClick = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    // Go to user page\r\n    history.push(`/u/${handle}`);\r\n\r\n    // Reset input field\r\n    updateHandle(\"\");\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <span className=\"textbox\">\r\n        @\r\n        <input\r\n          type=\"text\"\r\n          name=\"url\"\r\n          id=\"find-user-input-field\"\r\n          value={handle}\r\n          placeholder=\"handle\"\r\n          onChange={handleChange}\r\n        />\r\n      </span>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"button-primary\"\r\n        onClick={handleSubmitClick}\r\n        disabled={!buttonStatus[0]}\r\n        style={{ opacity: buttonStatus[1] }}\r\n      >\r\n        Search\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FindUserForm;\r\n","import React from \"react\";\r\nimport \"./FindUser.css\";\r\nimport FindUserForm from \"./FindUserForm\";\r\n\r\nconst FindUser: React.FC<{}> = () => {\r\n  return (\r\n    <div className=\"find-user\">\r\n      <div className=\"find-user-title\">Go to user's page:</div>\r\n      <FindUserForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindUser;\r\n","import CoreService from \"./CoreService\";\r\n\r\n\r\ninterface QueryParams {\r\n    [key: string]: string;\r\n}\r\n\r\n\r\nexport default class HttpService {\r\n\r\n    coreService: CoreService;\r\n    url: string = \"https://7z39hjjfg1.execute-api.eu-west-2.amazonaws.com\";\r\n    stage: string = \"/dev\";\r\n    API_URL: string = this.url + this.stage;\r\n\r\n\r\n    constructor() {\r\n        this.coreService = new CoreService();\r\n    }\r\n\r\n\r\n    async makeGetRequest(res: string, queryParams?: QueryParams): Promise<any> {\r\n        let url = this.API_URL + res;\r\n        let requestOptions = {\r\n            method: \"GET\"\r\n        };\r\n\r\n        if (typeof queryParams !== \"undefined\") {\r\n            let reducer = (accumulator: string, currValue: string[]) => (\r\n                accumulator + '&' + currValue[0] + '=' + currValue[1]\r\n            );\r\n            let queryString =  Object.entries(queryParams).reduce(reducer, '');\r\n            url += '?' + queryString;\r\n        };\r\n\r\n        let data: any = await fetch(url, requestOptions);\r\n        let resp: any = await data.json();\r\n        return resp;\r\n    }\r\n\r\n\r\n    async makePostRequest(res: string, body: any): Promise<any> {\r\n        let { headers } = await this.coreService.getSession();\r\n        headers[\"Content-Type\"] = \"application/json\";\r\n\r\n        let url = this.API_URL + res;\r\n        let requestOptions = {\r\n            headers,\r\n            method: \"POST\",\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let data: any = await fetch(url, requestOptions);\r\n        let resp: any = await data.json();\r\n        return resp;\r\n    }\r\n\r\n\r\n    async makeDeleteRequest(res: string, body: any): Promise<any> {\r\n        let { headers } = await this.coreService.getSession();\r\n        headers[\"Content-Type\"] = \"application/json\";\r\n\r\n        let url = this.API_URL + res;\r\n        let requestOptions = {\r\n            headers,\r\n            method: \"DELETE\",\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let data: any = await fetch(url, requestOptions);\r\n        let resp: any = await data.json();\r\n        return resp;\r\n    }\r\n\r\n\r\n    async makePatchRequest(res: string, body: any): Promise<any> {\r\n        let { headers } = await this.coreService.getSession();\r\n        headers[\"Content-Type\"] = \"application/json\";\r\n\r\n        let url = this.API_URL + res;\r\n        let requestOptions = {\r\n            headers,\r\n            method: \"PATCH\",\r\n            body: JSON.stringify(body),\r\n        };\r\n\r\n        let data: any = await fetch(url, requestOptions);\r\n        let resp: any = await data.json();\r\n        return resp;\r\n    }\r\n\r\n\r\n    async uploadImage(res: string, file: any, field?: string): Promise<any> {\r\n        let base64File = await this.coreService.toBase64(file);\r\n        if (typeof base64File !== \"string\") return;\r\n        let fileType = file.type;\r\n\r\n        let { headers } = await this.coreService.getSession();\r\n        headers[\"Content-Type\"] = \"application/json\";\r\n\r\n        let url = this.API_URL + res;\r\n        let requestOptions = {\r\n            headers,\r\n            method: \"PUT\",\r\n            body: JSON.stringify({\r\n                image: base64File,\r\n                field,\r\n                type: fileType,\r\n            }),\r\n        };\r\n\r\n        let data: any = await fetch(url, requestOptions);\r\n        let resp: any = await data.json();\r\n        return resp;\r\n    }\r\n}\r\n","import CoreService from \"./CoreService\";\r\nimport HttpService from \"./HttpService\";\r\n\r\nimport User from \"../../Types/User\";\r\n\r\nexport default class UserService {\r\n\r\n    httpService: HttpService;\r\n    coreService: CoreService;\r\n\r\n\r\n    constructor() {\r\n        this.httpService = new HttpService();\r\n        this.coreService = new CoreService();\r\n    }\r\n\r\n\r\n    fetchUser = async (handle: string, myHandle: string=''): Promise<User> => {\r\n      let res = \"/users\";\r\n      let queryParams = { handle, myHandle };\r\n      let resp: any = await this.httpService.makeGetRequest(res, queryParams);\r\n      return new Promise ((resolve, reject) => {\r\n          if (resp.code === \"getSuccess\") {\r\n            const user: User = JSON.parse(resp.user);\r\n            resolve(user);\r\n          } else {\r\n              reject({ handle: \"\" });\r\n          }\r\n      });\r\n    }\r\n\r\n\r\n    createFollowEdge = async (destinationHandle: string) => {\r\n      let res = \"/users/follow\";\r\n      let body = { handle: destinationHandle };\r\n      let resp: any = await this.httpService.makePostRequest(res, body);\r\n\r\n      if (resp.code === \"followSuccess\") {\r\n        console.log(resp);\r\n      } else {\r\n        console.error(resp);\r\n      }\r\n    };\r\n\r\n\r\n    deleteFollowEdge = async (destinationHandle: string) => {\r\n      let res = \"/users/follow\";\r\n      let body = { handle: destinationHandle };\r\n      let resp: any = await this.httpService.makeDeleteRequest(res, body);\r\n\r\n      if (resp.code === \"unfollowSuccess\") {\r\n        console.log(resp);\r\n      } else {\r\n        console.error(resp);\r\n      }\r\n    };\r\n\r\n\r\n    getSuggestedUsers = async (myHandle: string): Promise<User[]> => {\r\n        let res = \"/users/suggested\";\r\n        let queryParams = { myHandle };\r\n        let resp: any = await this.httpService.makeGetRequest(res, queryParams);\r\n        return new Promise ((resolve, reject) => {\r\n            if (resp.code === \"getSuccess\") {\r\n              const users: Array<User> = JSON.parse(resp.users);\r\n              resolve(users);\r\n            } else {\r\n                reject([]);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    getFollowList = async (list: string, handle: string, myHandle: string=''): Promise<User[]> => {\r\n      let res = `/users/${list}`;\r\n      let queryParams = { handle, myHandle };\r\n      let resp: any = await this.httpService.makeGetRequest(res, queryParams);\r\n      return new Promise((resolve, reject) => {\r\n        if (resp.code === \"getSuccess\") {\r\n          let userlist: Array<User> = JSON.parse(resp.users);\r\n          resolve(userlist)\r\n        } else {\r\n          console.error(resp);\r\n          reject([])\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n    getFollowing = async (handle: string, myHandle: string=''): Promise<User[]> =>\r\n      this.getFollowList(\"following\", handle, myHandle);\r\n\r\n\r\n    getFollowers = async (handle: string, myHandle: string=''): Promise<User[]> =>\r\n      this.getFollowList(\"followers\", handle, myHandle);\r\n\r\n\r\n    deleteAccount = async (): Promise<void> => {\r\n        let session = await this.coreService.getSession();\r\n        let { accessToken } = session;\r\n\r\n        let res = \"/users\";\r\n        let body = { accessToken: accessToken.jwtToken };\r\n        let resp = await this.httpService.makeDeleteRequest(res, body);\r\n        return new Promise((resolve, reject) => {\r\n          if (resp.code === \"deleteSuccess\") {\r\n            console.log(resp);\r\n            resolve();\r\n          } else {\r\n            console.error(resp);\r\n            reject();\r\n          }\r\n        });\r\n    }\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport ContextProps from \"../../../Types/ContextProps\";\r\nimport { AccountContext } from \"../../Account\";\r\nimport UserService from \"../../core/UserService\";\r\n\r\ntype Props = {\r\n  setFollowing: (following: boolean) => void;\r\n  handle: string;\r\n};\r\n\r\nconst FollowButton: React.FC<Props> = ({ setFollowing, handle }) => {\r\n  const userService = new UserService();\r\n  const { currHandle, setIsFollowing, isLoggedIn }: ContextProps =\r\n    useContext(AccountContext);\r\n\r\n  const follow = async () => {\r\n    if (!isLoggedIn) return console.log(\"Not logged in!\");\r\n\r\n    setFollowing(true);\r\n    // Update userPage if same user\r\n    if (handle === currHandle) {\r\n      setIsFollowing(true);\r\n    }\r\n\r\n    // update db\r\n    userService.createFollowEdge(handle);\r\n  };\r\n\r\n  return (\r\n    <button className=\"button\" onClick={follow}>\r\n      Follow\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FollowButton;\r\n","import React, { useContext } from \"react\";\r\nimport ContextProps from \"../../../Types/ContextProps\";\r\nimport { AccountContext } from \"../../Account\";\r\nimport UserService from \"../../core/UserService\";\r\n\r\ntype Props = {\r\n  setFollowing: (following: boolean) => void;\r\n  handle: string;\r\n};\r\n\r\nconst UnfollowButton: React.FC<Props> = ({ setFollowing, handle }) => {\r\n  const userService = new UserService();\r\n  const { myHandle, currHandle, setIsFollowing, isLoggedIn }: ContextProps =\r\n    useContext(AccountContext);\r\n\r\n  const unfollow = async () => {\r\n    if (myHandle === handle) {\r\n      console.log(\"Can't unfollow yourself!\");\r\n      return;\r\n    }\r\n\r\n    if (!isLoggedIn) return console.log(\"Not logged in!\");\r\n\r\n    setFollowing(false);\r\n    // Update userPage if same user\r\n    if (handle === currHandle) {\r\n      setIsFollowing(false);\r\n    }\r\n\r\n    // update db\r\n    userService.deleteFollowEdge(handle);\r\n  };\r\n\r\n  return (\r\n    <button className=\"button-primary\" onClick={unfollow}>\r\n      Following\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default UnfollowButton;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport FollowButton from \"./FollowButton\";\r\nimport UnfollowButton from \"./UnfollowButton\";\r\nimport { AccountContext } from \"../../Account\";\r\nimport ContextProps from \"../../../Types/ContextProps\";\r\n\r\ninterface Props {\r\n  className: string;\r\n  handle: string;\r\n  isFollowing?: boolean;\r\n}\r\n\r\nconst SuggestedUserFollowButton: React.FC<Props> = (props) => {\r\n  const [isFollowingSuggested, setIsFollowingSuggested] =\r\n    useState<boolean>(false);\r\n\r\n  const { handle, className } = props;\r\n\r\n  const { currHandle, isFollowing }: ContextProps = useContext(AccountContext);\r\n\r\n  // Check if following on mount\r\n  useEffect(() => {\r\n    if (props.isFollowing) {\r\n      setIsFollowingSuggested(props.isFollowing);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.isFollowing]);\r\n\r\n  // Link to main user if same\r\n  useEffect(() => {\r\n    if (handle === currHandle) {\r\n      setIsFollowingSuggested(isFollowing);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isFollowing]);\r\n\r\n  return (\r\n    <div className={className}>\r\n      {isFollowingSuggested ? (\r\n        <UnfollowButton\r\n          handle={handle}\r\n          setFollowing={setIsFollowingSuggested}\r\n        />\r\n      ) : (\r\n        <FollowButton handle={handle} setFollowing={setIsFollowingSuggested} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuggestedUserFollowButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SuggestedUserFollowButton from \"../../Shared/FollowButtons/SecondaryFollowButton\";\r\n\r\ninterface User {\r\n  handle: string;\r\n  display_name?: string;\r\n  isFollowing?: boolean;\r\n}\r\n\r\nconst UserSuggestion: React.FC<User> = (user) => {\r\n  // Profile pic src\r\n  const [src, setSrc] = useState<string>(\"\");\r\n  const onError = () => {\r\n    setSrc(\"https://bitter-imgs.s3.eu-west-2.amazonaws.com/pfpdefault\");\r\n  };\r\n  useEffect(() => {\r\n    setSrc(\r\n      \"https://bitter-imgs.s3.eu-west-2.amazonaws.com/pfp-\" +\r\n        user.handle +\r\n        `?${Date.now().toString().slice(0, -4)}`\r\n    );\r\n  }, [user.handle]);\r\n\r\n  return (\r\n    <>\r\n      <hr className=\"solid\" />\r\n      <div className=\"user-suggestion\">\r\n        <Link to={\"/u/\" + user.handle}>\r\n          <div className=\"user-suggestion-pfp\">\r\n            <img src={src} onError={onError} alt=\"profile pic\" />\r\n          </div>\r\n          <div className=\"user-suggestion-info\">\r\n            <div className=\"user-suggestion-displayname\">\r\n              {user.display_name}\r\n            </div>\r\n            <div className=\"user-suggestion-handle\">@{user.handle}</div>\r\n          </div>\r\n        </Link>\r\n        <SuggestedUserFollowButton\r\n          className=\"user-suggestion-follow\"\r\n          handle={user.handle}\r\n          isFollowing={user.isFollowing}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserSuggestion;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./UserSuggestions.css\";\r\nimport UserSuggestion from \"./UserSuggestion\";\r\nimport { AccountContext } from \"../../Account\";\r\n\r\nimport User from \"../../../Types/User\";\r\nimport ContextProps from \"../../../Types/ContextProps\";\r\nimport UserService from \"../../core/UserService\";\r\n\r\nconst UserSuggestions: React.FC<{}> = () => {\r\n  const userService = new UserService();\r\n\r\n  const [suggestedUsers, updateSuggestions] = useState<Array<User>>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [fetchError, setFetchError] = useState<boolean>(false);\r\n  const { myHandle }: ContextProps = useContext(AccountContext);\r\n\r\n  // Fetch 5 random users from the database\r\n  const fetchSuggestions = async () => {\r\n    setIsLoading(true);\r\n\r\n    userService\r\n      .getSuggestedUsers(myHandle)\r\n      .then((users) => {\r\n        setFetchError(false);\r\n        updateSuggestions(users);\r\n      })\r\n      .catch((users) => {\r\n        setFetchError(true);\r\n        updateSuggestions(users);\r\n      });\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSuggestions();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [myHandle]);\r\n\r\n  return (\r\n    <div className=\"user-suggestions\">\r\n      <div className=\"user-suggestions-title\">Suggested users</div>\r\n      {isLoading ? (\r\n        <div className=\"user-suggestions-loader\">\r\n          <div className=\"loader\" />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {suggestedUsers.map((user) => (\r\n            <UserSuggestion {...user} key={user.handle} />\r\n          ))}\r\n          {fetchError ? (\r\n            <div className=\"user-suggestions-error\">\r\n              Oops, looks like an error occurred...\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <div className=\"user-suggestions-reroller\">\r\n            <button onClick={fetchSuggestions}> Reroll </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSuggestions;\r\n","import React from \"react\";\r\n\r\nimport FindUser from \"./FindUser/FindUser\";\r\nimport UserSuggestions from \"./UserSuggestions/UserSuggestions\";\r\n\r\nconst RightColumn: React.FC<{}> = () => {\r\n  return (\r\n    <div id=\"right-col\" className=\"main-col\">\r\n      <FindUser />\r\n      <UserSuggestions />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RightColumn;\r\n","import React from \"react\";\r\n\r\nconst PageNotFound: React.FC<{}> = () => {\r\n  return (\r\n    <>\r\n      <div className=\"nopage-code\">404</div>\r\n      <div className=\"nopage-msg\">Page not found</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","export default interface BitInfo {\r\n    post_id: string;\r\n    content: string;\r\n    display_name?: string;\r\n    handle?: string;\r\n    index?: number;\r\n    post_time: string;\r\n    reply_to?: string;\r\n    reply_author?: string;\r\n    status?: number;\r\n    user_id?: string;\r\n    replies: number;\r\n    reposts: number;\r\n    likes: number;\r\n    dislikes: number;\r\n    isLiked?: boolean;\r\n    isDisliked?: boolean;\r\n    isReposted?: boolean;\r\n    rebitter?: string;\r\n    pre_thread?: Array<BitInfo>;\r\n    reply_threads?: Array<Array<BitInfo>>\r\n  }\r\n\r\n  export const emptyPost: BitInfo = {\r\n    post_id: \"\",\r\n    handle: \"\",\r\n    post_time: \"\",\r\n    content: \"\",\r\n    dislikes: 0,\r\n    likes: 0,\r\n    replies: 0,\r\n    reposts: 0,\r\n  };\r\n","import BitInfo, { emptyPost } from \"../../Types/BitInfo\";\r\nimport HttpService from \"./HttpService\";\r\n\r\nexport default class BitService {\r\n\r\n    httpService: HttpService;\r\n\r\n\r\n    constructor() {\r\n        this.httpService = new HttpService();\r\n    }\r\n\r\n\r\n    postBit = async (content: string, replyTo: string=''): Promise<void> => {\r\n      let res = \"/bits\";\r\n      let body = { content, replyTo };\r\n      let resp: any = await this.httpService.makePostRequest(res, body);\r\n      return new Promise((resolve, reject) => {\r\n        if (resp.code === \"postSuccess\") {\r\n          console.log(resp);\r\n          resolve();\r\n        } else {\r\n          console.error(resp);\r\n          reject();\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n    deleteBit = async (post_id: string): Promise<void> => {\r\n      let res = \"/bits\";\r\n      let body = { post_id };\r\n      let resp: any = await this.httpService.makeDeleteRequest(res, body);\r\n      return new Promise((resolve, reject) => {\r\n        if (resp.code === \"deleteSuccess\") {\r\n          console.log(resp);\r\n          resolve();\r\n        } else {\r\n          console.error(resp);\r\n          reject();\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n    getTimeline = async (timelineType: string, handle: string=''): Promise<BitInfo[]> => {\r\n      console.log(\"Fetching bits...\");\r\n\r\n      let res = `/bits/${timelineType}`;\r\n      let queryParams = { handle };\r\n      let resp: any = await this.httpService.makeGetRequest(res, queryParams);\r\n      return new Promise((resolve, reject) => {\r\n        if (resp.code === \"getSuccess\") {\r\n          let bits: Array<BitInfo> = JSON.parse(resp.posts);\r\n          resolve(bits)\r\n        } else {\r\n          reject([])\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n\r\n    getBitPage = async (handle: string, post_id: string): Promise<BitInfo> => {\r\n      const res = \"/bits\";\r\n      let queryParams = { handle, post_id };\r\n      let resp: any = await this.httpService.makeGetRequest(res, queryParams);\r\n      return new Promise((resolve, reject) => {\r\n        if (resp.code === \"getSuccess\") {\r\n          const post: BitInfo = JSON.parse(resp.post);\r\n          resolve(post);\r\n        } else {\r\n          console.error(resp);\r\n          reject(emptyPost);\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n    getUserBits = async (handle: string, myHandle: string=''): Promise<BitInfo[]> => {\r\n      const res = \"/users/posts\";\r\n      let queryParams = { handle, myHandle };\r\n      let resp: any = await this.httpService.makeGetRequest(res, queryParams);\r\n      return new Promise((resolve, reject) => {\r\n        if (resp.code === \"getSuccess\") {\r\n          let bits: Array<BitInfo> = JSON.parse(resp.posts);\r\n          resolve(bits);\r\n        } else {\r\n          console.error(resp);\r\n          reject([]);\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n    getUserLikes = async (handle: string, myHandle: string=''): Promise<BitInfo[]> => {\r\n      const res = \"/users/posts/likes\";\r\n      let queryParams = { handle, myHandle };\r\n      let resp: any = await this.httpService.makeGetRequest(res, queryParams);\r\n      return new Promise((resolve, reject) => {\r\n        if (resp.code === \"getSuccess\") {\r\n          let bits: Array<BitInfo> = JSON.parse(resp.posts);\r\n          resolve(bits);\r\n        } else {\r\n          console.error(resp);\r\n          reject([]);\r\n        }\r\n      })\r\n    }\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport ContextProps from \"../../Types/ContextProps\";\r\nimport { AccountContext } from \"../Account\";\r\nimport BitService from \"../core/BitService\";\r\n\r\nconst PostBoxForm: React.FC<{}> = () => {\r\n  const bitService = new BitService();\r\n\r\n  const { refreshBitList }: ContextProps = useContext(AccountContext);\r\n\r\n  const [post, updatePost] = useState<string>(\"\");\r\n  const [remainingChars, updateChars] = useState<number>(140);\r\n  const [charCounterColour, changeCounterColour] = useState<string>(\"black\");\r\n  const [buttonStatus, updateButton] = useState<[boolean, string]>([\r\n    false,\r\n    \"50%\",\r\n  ]);\r\n\r\n  const [errorOccurred, setErrorOccurred] = useState<boolean>(false);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const enableButton = () => {\r\n    updateButton([true, \"100%\"]);\r\n  };\r\n  const disableButton = () => {\r\n    updateButton([false, \"50%\"]);\r\n  };\r\n\r\n  const handleChange = (e: any) => {\r\n    const { value } = e.target;\r\n    updatePost(value);\r\n  };\r\n\r\n  const updateCharCount = () => {\r\n    updateChars(140 - post.length);\r\n    if (post.length > 140) {\r\n      disableButton();\r\n      changeCounterColour(\"red\");\r\n    } else if (post.length > 110) {\r\n      enableButton();\r\n      changeCounterColour(\"orange\");\r\n    } else if (post.length === 0) {\r\n      disableButton();\r\n      changeCounterColour(\"black\");\r\n    } else {\r\n      enableButton();\r\n      changeCounterColour(\"black\");\r\n    }\r\n  };\r\n\r\n  // Update char count when post changes\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => updateCharCount(), [post]);\r\n\r\n  const handleSubmitClick = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    // Check valid length\r\n    if (remainingChars < 0 || remainingChars >= 140) {\r\n      console.error(\"Invalid post length.\");\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setErrorOccurred(false);\r\n\r\n    await bitService\r\n      .postBit(post)\r\n      .then(() => updatePost(\"\"))\r\n      .catch(() => setErrorOccurred(true));\r\n\r\n    // Set not loading\r\n    setIsLoading(false);\r\n    refreshBitList();\r\n  };\r\n\r\n  return (\r\n    <div className=\"postbox-input\">\r\n      {isLoading ? (\r\n        <div id=\"postbox-loader-wrapper\">\r\n          <div className=\"loader\" />\r\n        </div>\r\n      ) : (\r\n        <form>\r\n          <TextareaAutosize\r\n            className=\"bit-content\"\r\n            id=\"postbox-input-field\"\r\n            placeholder=\"Post a bit!\"\r\n            value={post}\r\n            onChange={handleChange}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"button-primary\"\r\n            onClick={handleSubmitClick}\r\n            disabled={!buttonStatus[0]}\r\n            style={{ opacity: buttonStatus[1] }}\r\n          >\r\n            Post\r\n          </button>\r\n          <div id=\"postbox-charcount\" style={{ color: charCounterColour }}>\r\n            Remaining characters: {remainingChars}\r\n          </div>\r\n\r\n          {/* Generic error message */}\r\n          {errorOccurred ? (\r\n            <div id=\"postbox-error\">An error occurred.</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostBoxForm;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AccountContext } from \"../Account\";\r\nimport PostBoxForm from \"./PostBoxForm\";\r\nimport \"./Postbox.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ContextProps from \"../../Types/ContextProps\";\r\n\r\nconst PostBit: React.FC<{}> = () => {\r\n  const { isLoggedIn, myHandle }: ContextProps = useContext(AccountContext);\r\n\r\n  // Profile pic src\r\n  const [src, setSrc] = useState<string>(\"\");\r\n  const onError = () => {\r\n    setSrc(\"https://bitter-imgs.s3.eu-west-2.amazonaws.com/pfpdefault\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSrc(\r\n      `https://bitter-imgs.s3.eu-west-2.amazonaws.com/pfp-${myHandle}` +\r\n        `?${Date.now().toString().slice(0, -4)}`\r\n    );\r\n  }, [myHandle]);\r\n\r\n  return (\r\n    <div className=\"postbox\">\r\n      {isLoggedIn ? (\r\n        <>\r\n          <div className=\"postbox-pfp\">\r\n            <img src={src} onError={onError} alt=\"pfp\" />\r\n          </div>\r\n          <PostBoxForm />\r\n        </>\r\n      ) : (\r\n        <div id=\"postbox-login\">\r\n          <Link to=\"/login\">Login</Link> or <Link to=\"/register\">register</Link>{\" \"}\r\n          to post bits\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostBit;\r\n","export default __webpack_public_path__ + \"static/media/reply.34834fc8.svg\";","export default __webpack_public_path__ + \"static/media/replied.f6426c61.svg\";","export default __webpack_public_path__ + \"static/media/rebit.e12d3005.svg\";","export default __webpack_public_path__ + \"static/media/rebited.756a8af7.svg\";","export default __webpack_public_path__ + \"static/media/like.231952c6.svg\";","export default __webpack_public_path__ + \"static/media/liked.bf753584.svg\";","export default __webpack_public_path__ + \"static/media/dislike.6101c61e.svg\";","export default __webpack_public_path__ + \"static/media/disliked.e954b579.svg\";","import HttpService from \"./HttpService\";\r\n\r\nexport default class InteractionsService {\r\n\r\n    httpService: HttpService;\r\n\r\n\r\n    constructor() {\r\n        this.httpService = new HttpService();\r\n    }\r\n\r\n\r\n    rebitPost = async (post_id: string) => {\r\n      let res = \"/bits/rebit\";\r\n      let body = { post_id };\r\n      let resp: any = await this.httpService.makePostRequest(res, body);\r\n\r\n      if (resp.code === \"rebitSuccess\") {\r\n        console.log(resp);\r\n      } else {\r\n        console.error(resp);\r\n      }\r\n    };\r\n\r\n\r\n    unrebitPost = async (post_id: string) => {\r\n      let res = \"/bits/rebit\";\r\n      let body = { post_id };\r\n      let resp: any = await this.httpService.makeDeleteRequest(res, body);\r\n\r\n      if (resp.code === \"unrebitSuccess\") {\r\n        console.log(resp);\r\n      } else {\r\n        console.error(resp);\r\n      }\r\n    };\r\n\r\n\r\n    likePost = async (post_id: string) => {\r\n      let res = \"/bits/like\";\r\n      let body = { post_id };\r\n      let resp: any = await this.httpService.makePostRequest(res, body);\r\n\r\n      if (resp.code === \"likeSuccess\") {\r\n        console.log(resp);\r\n      } else {\r\n        console.error(resp);\r\n      }\r\n    };\r\n\r\n\r\n    unlikePost = async (post_id: string) => {\r\n      let res = \"/bits/like\";\r\n      let body = { post_id };\r\n      let resp: any = await this.httpService.makeDeleteRequest(res, body);\r\n\r\n      if (resp.code === \"unlikeSuccess\") {\r\n        console.log(resp);\r\n      } else {\r\n        console.error(resp);\r\n      }\r\n    };\r\n\r\n\r\n    dislikePost = async (post_id: string) => {\r\n      let res = \"/bits/dislike\";\r\n      let body = { post_id };\r\n      let resp: any = await this.httpService.makePostRequest(res, body);\r\n\r\n      if (resp.code === \"dislikeSuccess\") {\r\n        console.log(resp);\r\n      } else {\r\n        console.error(resp);\r\n      }\r\n    };\r\n\r\n\r\n    undislikePost = async (post_id: string) => {\r\n      let res = \"/bits/dislike\";\r\n      let body = { post_id };\r\n      let resp: any = await this.httpService.makeDeleteRequest(res, body);\r\n\r\n      if (resp.code === \"undislikeSuccess\") {\r\n        console.log(resp);\r\n      } else {\r\n        console.error(resp);\r\n      }\r\n    };\r\n}\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport ReplyButton from \"./Icons/reply.svg\";\r\nimport ReplyingButton from \"./Icons/replied.svg\";\r\nimport RebitButton from \"./Icons/rebit.svg\";\r\nimport RebitedButton from \"./Icons/rebited.svg\";\r\nimport LikeButton from \"./Icons/like.svg\";\r\nimport LikedButton from \"./Icons/liked.svg\";\r\nimport DislikeButton from \"./Icons/dislike.svg\";\r\nimport DislikedButton from \"./Icons/disliked.svg\";\r\nimport { AccountContext } from \"../../Account\";\r\n\r\nimport BitInfo from \"../../../Types/BitInfo\";\r\nimport ContextProps from \"../../../Types/ContextProps\";\r\nimport InteractionsService from \"../../core/InteractionsService\";\r\n\r\ninterface OtherProps {\r\n  toggleReplying: () => void;\r\n  replying: boolean;\r\n}\r\n\r\ntype BitButtonBarProps = BitInfo & OtherProps;\r\n\r\nconst BitButtonBar: React.FC<BitButtonBarProps> = ({\r\n  toggleReplying,\r\n  replying,\r\n  ...props\r\n}) => {\r\n  const interactionsService = new InteractionsService();\r\n\r\n  // Affect like/dislike counter\r\n  const [rebitShift, setRebitShift] = useState<number>(0);\r\n  const [likeShift, setLikeShift] = useState<number>(0);\r\n  const [dislikeShift, setDislikeShift] = useState<number>(0);\r\n\r\n  const { isLoggedIn }: ContextProps = useContext(AccountContext);\r\n\r\n  const [isReposted, setIsReposted] = useState<boolean>(\r\n    typeof props.isReposted === \"undefined\" ? false : props.isReposted\r\n  );\r\n  const [isLiked, setIsLiked] = useState<boolean>(false);\r\n  const [isDisliked, setIsDisliked] = useState<boolean>(\r\n    typeof props.isDisliked === \"undefined\" ? false : props.isDisliked\r\n  );\r\n\r\n  useEffect(() => {\r\n    setIsReposted(\r\n      typeof props.isReposted === \"undefined\" ? false : props.isReposted\r\n    );\r\n    setIsLiked(typeof props.isLiked === \"undefined\" ? false : props.isLiked);\r\n    setIsDisliked(\r\n      typeof props.isDisliked === \"undefined\" ? false : props.isDisliked\r\n    );\r\n  }, [props.isReposted, props.isLiked, props.isDisliked]);\r\n\r\n  const rebit = async () => {\r\n    if (!isLoggedIn) return;\r\n    setIsReposted(true);\r\n    setRebitShift(rebitShift + 1);\r\n    interactionsService.rebitPost(props.post_id);\r\n  };\r\n\r\n  const unrebit = async () => {\r\n    if (!isLoggedIn) return;\r\n    setIsReposted(false);\r\n    setRebitShift(rebitShift - 1);\r\n    interactionsService.unrebitPost(props.post_id);\r\n  };\r\n\r\n  const like = async () => {\r\n    if (!isLoggedIn) return;\r\n    setIsLiked(true);\r\n    setLikeShift(likeShift + 1);\r\n    interactionsService.likePost(props.post_id);\r\n  };\r\n\r\n  const unlike = async () => {\r\n    if (!isLoggedIn) return;\r\n    setIsLiked(false);\r\n    setLikeShift(likeShift - 1);\r\n    interactionsService.unlikePost(props.post_id);\r\n  };\r\n\r\n  const dislike = async () => {\r\n    if (!isLoggedIn) return;\r\n    setIsDisliked(true);\r\n    setDislikeShift(dislikeShift + 1);\r\n    interactionsService.dislikePost(props.post_id);\r\n  };\r\n\r\n  const undislike = async () => {\r\n    if (!isLoggedIn) return;\r\n    setIsDisliked(false);\r\n    setDislikeShift(dislikeShift - 1);\r\n    interactionsService.undislikePost(props.post_id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bit-buttons\">\r\n      <div className=\"bit-stat\">\r\n        {replying ? (\r\n          <img\r\n            src={ReplyingButton}\r\n            alt=\"reply button\"\r\n            onClick={toggleReplying}\r\n          />\r\n        ) : (\r\n          <img src={ReplyButton} alt=\"reply button\" onClick={toggleReplying} />\r\n        )}\r\n        <div className=\"bit-stat-count\">{props.replies}</div>\r\n      </div>\r\n\r\n      <div className=\"bit-stat\">\r\n        {isReposted ? (\r\n          <img src={RebitedButton} alt=\"rebit button\" onClick={unrebit} />\r\n        ) : (\r\n          <img src={RebitButton} alt=\"rebit button\" onClick={rebit} />\r\n        )}\r\n        <div className=\"bit-stat-count\">{props.reposts + rebitShift}</div>\r\n      </div>\r\n\r\n      <div className=\"bit-stat\">\r\n        {isLiked ? (\r\n          <img src={LikedButton} alt=\"liked button\" onClick={unlike} />\r\n        ) : (\r\n          <img src={LikeButton} alt=\"like button\" onClick={like} />\r\n        )}\r\n        <div className=\"bit-stat-count\">{props.likes + likeShift}</div>\r\n      </div>\r\n\r\n      <div className=\"bit-stat\">\r\n        {isDisliked ? (\r\n          <img src={DislikedButton} alt=\"disliked button\" onClick={undislike} />\r\n        ) : (\r\n          <img src={DislikeButton} alt=\"dislike button\" onClick={dislike} />\r\n        )}\r\n        <div className=\"bit-stat-count\">{props.dislikes + dislikeShift}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BitButtonBar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport interface BitTagProps {\r\n  tag: string;\r\n}\r\n\r\nconst BitTag: React.FC<BitTagProps> = ({ tag }) => {\r\n  // No tag if first character isn't a letter or digit (invalid handle)\r\n  if (!/[a-zA-Z0-9]/.test(tag[0])) {\r\n    return <>@{tag}</>;\r\n  }\r\n\r\n  // Up to where are chars letters? (Tag up to that point)\r\n  let i = 1;\r\n  while (i < tag.length) {\r\n    if (!/[a-zA-Z0-9]/.test(tag[i])) {\r\n      break;\r\n    } else {\r\n      i++;\r\n    }\r\n  }\r\n\r\n  // Split into tag and not-tag\r\n  const taggedAccount = tag.slice(0, i);\r\n  const postContent = tag.slice(i);\r\n\r\n  return (\r\n    <>\r\n      <Link to={`/u/${taggedAccount}`} style={{ color: \"#3498db\" }}>\r\n        @{taggedAccount}\r\n      </Link>\r\n      {postContent}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BitTag;\r\n","import React, { useRef, useEffect } from \"react\";\r\n// Used for bit delete button\r\n\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\nfunction useOutsideAlerter(ref, isPopoverOpen, setIsPopoverOpen) {\r\n  useEffect(() => {\r\n    /**\r\n     * Alert if clicked on outside of element\r\n     */\r\n    function handleClickOutside(event) {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        setIsPopoverOpen(false);\r\n      }\r\n    }\r\n\r\n    // Bind the event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ref]);\r\n}\r\n\r\n/**\r\n * Component that alerts if you click outside of it\r\n */\r\nexport default function OutsideAlerter(props) {\r\n  const wrapperRef = useRef(null);\r\n  useOutsideAlerter(wrapperRef, props.isPopoverOpen, props.setIsPopoverOpen);\r\n\r\n  return <div ref={wrapperRef}>{props.children}</div>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport BitService from \"../../core/BitService\";\r\n\r\nexport interface BitReplyBoxProps {\r\n  post_id: string;\r\n  setReplying: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst BitReplyBox: React.FC<BitReplyBoxProps> = ({ post_id, setReplying }) => {\r\n  const bitService = new BitService();\r\n\r\n  const [post, updatePost] = useState<string>(\"\");\r\n  const [remainingChars, updateChars] = useState<number>(140);\r\n  const [charCounterColour, changeCounterColour] = useState<string>(\"black\");\r\n  const [buttonStatus, updateButton] = useState<[boolean, string]>([\r\n    false,\r\n    \"50%\",\r\n  ]);\r\n\r\n  const [errorOccurred, setErrorOccurred] = useState<boolean>(false);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const enableButton = () => updateButton([true, \"100%\"]);\r\n  const disableButton = () => updateButton([false, \"50%\"]);\r\n\r\n  const handleChange = (e: any) => {\r\n    const { value } = e.target;\r\n    updatePost(value);\r\n  };\r\n\r\n  const handleSubmitClick = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    // Check valid length\r\n    if (remainingChars < 0 || remainingChars >= 140) {\r\n      console.error(\"Invalid post length.\");\r\n      return;\r\n    }\r\n\r\n    // Set loading\r\n    setIsLoading(true);\r\n    setErrorOccurred(false);\r\n\r\n    await bitService\r\n      .postBit(post, post_id)\r\n      .then(() => {\r\n        updatePost(\"\");\r\n        setReplying(false);\r\n      })\r\n      .catch(() => setErrorOccurred(true));\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const updateCharCount = () => {\r\n    updateChars(140 - post.length);\r\n    if (post.length > 140) {\r\n      disableButton();\r\n      changeCounterColour(\"red\");\r\n    } else if (post.length > 110) {\r\n      enableButton();\r\n      changeCounterColour(\"orange\");\r\n    } else if (post.length === 0) {\r\n      disableButton();\r\n      changeCounterColour(\"black\");\r\n    } else {\r\n      enableButton();\r\n      changeCounterColour(\"black\");\r\n    }\r\n  };\r\n\r\n  // Update char count when post changes\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => updateCharCount(), [post]);\r\n\r\n  return (\r\n    <div className=\"bit-reply-box\">\r\n      {isLoading ? (\r\n        <div id=\"bit-reply-loader-wrapper\">\r\n          <div className=\"loader\" />\r\n        </div>\r\n      ) : (\r\n        <form>\r\n          <TextareaAutosize\r\n            id=\"postbox-input-field\"\r\n            placeholder=\"Post a reply!\"\r\n            value={post}\r\n            onChange={handleChange}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"button-primary\"\r\n            onClick={handleSubmitClick}\r\n            disabled={!buttonStatus[0]}\r\n            style={{ opacity: buttonStatus[1] }}\r\n          >\r\n            Post reply\r\n          </button>\r\n          <div id=\"postbox-charcount\" style={{ color: charCounterColour }}>\r\n            Remaining characters: {remainingChars}\r\n          </div>\r\n\r\n          {/* Generic error message */}\r\n          {errorOccurred ? (\r\n            <div id=\"postbox-error\">An error occurred.</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BitReplyBox;\r\n","import React from \"react\";\r\n\r\nexport interface DeletedBitProps {\r\n  classes: string;\r\n}\r\n\r\nconst DeletedBit: React.FC<DeletedBitProps> = ({ classes }) => {\r\n  return (\r\n    <div className={\"bit \" + classes}>\r\n      <div className=\"deleted-bit\">This bit has been deleted</div>\r\n      <hr className=\"bit-splitter\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeletedBit;\r\n","export default __webpack_public_path__ + \"static/media/delete.932bd998.svg\";","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AccountContext } from \"../../Account\";\r\nimport ContextProps from \"../../../Types/ContextProps\";\r\n\r\nimport BitButtonBar from \"./BitButtonBar\";\r\nimport BitInfo from \"../../../Types/BitInfo\";\r\nimport BitTag from \"./BitTag\";\r\nimport OutsideAlerter from \"./OutsideAlerter\";\r\nimport BitReplyBox from \"./BitReplyBox\";\r\nimport DeletedBit from \"./DeletedBit\";\r\n\r\nimport RepliedButton from \"./Icons/replied.svg\";\r\nimport RebitedButton from \"./Icons/rebited.svg\";\r\nimport DeleteButton from \"./Icons/delete.svg\";\r\n\r\nimport \"./Bit.css\";\r\nimport CoreService from \"../../core/CoreService\";\r\nimport BitService from \"../../core/BitService\";\r\n\r\ninterface OtherProps {\r\n  classes?: string;\r\n}\r\n\r\nconst Bit: React.FC<BitInfo & OtherProps> = ({ classes = \"\", ...bitInfo }) => {\r\n  const bitService = new BitService();\r\n  const coreService = new CoreService();\r\n\r\n  const { isAdmin, myHandle }: ContextProps = useContext(AccountContext);\r\n\r\n  // Profile pic src\r\n  const [src, setSrc] = useState<string>(\"\");\r\n\r\n  const onError = () => {\r\n    setSrc(\"https://bitter-imgs.s3.eu-west-2.amazonaws.com/pfpdefault\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSrc(\r\n      \"https://bitter-imgs.s3.eu-west-2.amazonaws.com/pfp-\" +\r\n        bitInfo.handle +\r\n        `?${Date.now().toString().slice(0, -4)}`\r\n    );\r\n  }, [bitInfo.handle]);\r\n\r\n  // Split for tags\r\n  const splitContent = bitInfo.content.split(\"@\");\r\n  const initialContent = splitContent[0];\r\n\r\n  // myHandle to show/hide delete button\r\n  const myPost = myHandle === bitInfo.handle;\r\n\r\n  // Hook to hide tweet after deleting\r\n  const [isDeleted, setIsDeleted] = useState<boolean>(false);\r\n\r\n  // Hook to toggle reply text box\r\n  const [replying, setReplying] = useState<boolean>(false);\r\n  const toggleReplying = (): void => setReplying(!replying);\r\n\r\n  if (typeof bitInfo.rebitter !== \"undefined\" || bitInfo.reply_to !== null) {\r\n    classes += \" reply-bit\";\r\n  }\r\n\r\n  // Delete button\r\n  const handleDeletePost = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    await bitService\r\n      .deleteBit(bitInfo.post_id)\r\n      .then(() => setIsDeleted(true))\r\n      .catch(() => {});\r\n  };\r\n\r\n  // Delete popover\r\n  const [isPopoverOpen, setIsPopoverOpen] = useState<boolean>(false);\r\n\r\n  // Numbers for interactions\r\n  return (\r\n    <>\r\n      {bitInfo.post_id === \"DELETED_POST\" ? (\r\n        <DeletedBit classes={classes} />\r\n      ) : (\r\n        <div\r\n          className={\"bit \" + classes.trim()}\r\n          style={{\r\n            display: isDeleted ? \"none\" : \"\",\r\n          }}\r\n        >\r\n          <div className=\"bit-message\">\r\n            {/* Show who replied to if reply */}\r\n            <div\r\n              className=\"bit-reply-author\"\r\n              style={{\r\n                display: bitInfo.reply_to === null ? \"none\" : \"\",\r\n                top: typeof bitInfo.rebitter === \"undefined\" ? \"4px\" : \"20px\",\r\n              }}\r\n            >\r\n              <img src={RepliedButton} alt=\"rebit button\" />\r\n              <Link to={`/b/${bitInfo.reply_to}`}>\r\n                <span style={{ color: \"#10b\" }}>Reply</span>\r\n              </Link>{\" \"}\r\n              to\r\n              <Link to={`/u/${bitInfo.reply_author}`}>\r\n                {\" \"}\r\n                @{bitInfo.reply_author}\r\n              </Link>\r\n              <span\r\n                style={{\r\n                  display:\r\n                    typeof bitInfo.rebitter === \"undefined\" ? \"none\" : \"\",\r\n                  color: \"black\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                ・{\" \"}\r\n              </span>\r\n            </div>\r\n\r\n            {/* Show who rebitted if rebit */}\r\n            <div\r\n              className=\"bit-rebitter\"\r\n              style={{\r\n                display: typeof bitInfo.rebitter === \"undefined\" ? \"none\" : \"\",\r\n              }}\r\n            >\r\n              <img src={RebitedButton} alt=\"rebit button\" />\r\n              <span>Rebitted by </span>\r\n              <Link to={`/u/${bitInfo.rebitter}`}>@{bitInfo.rebitter}</Link>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Poster profile picture */}\r\n          <Link to={`/u/${bitInfo.handle}`}>\r\n            <div className=\"bit-pfp\">\r\n              <img src={src} onError={onError} alt=\"profile pic\" />\r\n            </div>\r\n          </Link>\r\n\r\n          <div className=\"bit-content\">\r\n            {/* Poster info */}\r\n            <div className=\"bit-info\">\r\n              <Link to={`/u/${bitInfo.handle}`}>\r\n                <span className=\"bit-info-displayname\">\r\n                  {bitInfo.display_name}\r\n                </span>\r\n                <span className=\"bit-info-handle\">@{bitInfo.handle}</span>\r\n              </Link>\r\n              ・\r\n              <Link to={`/b/${bitInfo.post_id}`}>\r\n                <span\r\n                  className=\"bit-info-time\"\r\n                  title={coreService.formatBitDate(new Date(bitInfo.post_time))}\r\n                >\r\n                  {coreService.timestampFormat(bitInfo.post_time)}\r\n                </span>\r\n              </Link>\r\n            </div>\r\n\r\n            <input\r\n              type=\"image\"\r\n              className=\"bit-delete\"\r\n              src={DeleteButton}\r\n              alt=\"dislike button\"\r\n              onClick={() => setIsPopoverOpen(true)}\r\n              style={{ display: myPost || isAdmin ? \"block\" : \"none\" }}\r\n            />\r\n\r\n            <OutsideAlerter\r\n              isPopoverOpen={isPopoverOpen}\r\n              setIsPopoverOpen={setIsPopoverOpen}\r\n            >\r\n              <div\r\n                className=\"bit-delete-popover\"\r\n                style={{ display: isPopoverOpen ? \"block\" : \"none\" }}\r\n                // handleClickOutside={() => setIsPopoverOpen(false)}\r\n              >\r\n                <button\r\n                  className=\"button-primary delete-post\"\r\n                  onClick={handleDeletePost}\r\n                >\r\n                  Delete post\r\n                </button>\r\n                <div className=\"delete-post-arrow\" />\r\n              </div>\r\n            </OutsideAlerter>\r\n\r\n            <div className=\"bit-text\">\r\n              {initialContent}\r\n              {splitContent.slice(1).map((tag, index) => (\r\n                <BitTag tag={tag} key={index} />\r\n              ))}\r\n            </div>\r\n            <BitButtonBar\r\n              {...bitInfo}\r\n              toggleReplying={toggleReplying}\r\n              replying={replying}\r\n            />\r\n          </div>\r\n          {replying ? (\r\n            <BitReplyBox post_id={bitInfo.post_id} setReplying={setReplying} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <hr className=\"bit-splitter\" />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Bit;\r\n","import React from \"react\";\r\nimport Bit from \"../Bit/Bit\";\r\nimport \"./BitList.css\";\r\n\r\nimport BitInfo from \"../../../Types/BitInfo\";\r\n\r\ninterface Props {\r\n  bits: Array<BitInfo>;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst BitList: React.FC<Props> = ({ bits, isLoading }) => {\r\n  // retrieve bits from props\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <div className=\"bitlist-loader\">\r\n          <div className=\"loader\" />\r\n        </div>\r\n      ) : bits.length > 0 ? (\r\n        bits.map((bit, index) => (\r\n          <Bit {...bit} key={bit.post_id + bit.rebitter} index={index} />\r\n        ))\r\n      ) : (\r\n        <div className=\"no-bits\">No bits found</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BitList;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AccountContext } from \"../Account\";\r\nimport BitList from \"../Shared/BitList/BitList\";\r\nimport BitInfo from \"../../Types/BitInfo\";\r\nimport ContextProps from \"../../Types/ContextProps\";\r\nimport BitService from \"../core/BitService\";\r\n\r\nconst TimelineBitList: React.FC<{ timelineType: string }> = ({\r\n  timelineType,\r\n}) => {\r\n  const bitService = new BitService();\r\n\r\n  // fetch list of bits\r\n  const [bits, setBits] = useState<Array<BitInfo>>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [requestCounter, setRequestCounter] = useState<number>(0);\r\n\r\n  const { myHandle, refreshList }: ContextProps = useContext(AccountContext);\r\n\r\n  useEffect(() => {\r\n    fetchBits();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [myHandle, refreshList]);\r\n\r\n  const fetchBits = async () => {\r\n    setRequestCounter(requestCounter + 1);\r\n    const requestId = requestCounter;\r\n\r\n    setIsLoading(true);\r\n\r\n    console.log(\"Fetching bits...\");\r\n\r\n    await bitService\r\n      .getTimeline(timelineType, myHandle)\r\n      .then((bits) => {\r\n        if (requestId === requestCounter) setBits(bits);\r\n      })\r\n      .catch((bits) => {\r\n        if (requestId === requestCounter) setBits(bits);\r\n      })\r\n      .finally(() => {\r\n        if (requestId === requestCounter) setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  // pass into BitList\r\n  return <BitList bits={bits} isLoading={isLoading} />;\r\n};\r\n\r\nexport default TimelineBitList;\r\n","import React from \"react\";\r\nimport PostBit from \"./PostBit\";\r\nimport TimelineBitList from \"./TimelineBitList\";\r\nimport \"./Timeline.css\";\r\n\r\nconst Timeline: React.FC<{ timelineType: string }> = ({ timelineType }) => {\r\n  const pageTitle = timelineType === \"all\" ? \"All posts\" : \"Home\";\r\n  document.title = `${pageTitle} / Bitter`;\r\n\r\n  return (\r\n    <div className=\"timeline\">\r\n      <PostBit />\r\n      <TimelineBitList timelineType={timelineType} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timeline;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst UserBanner: React.FC<{ handle: string }> = ({ handle }) => {\r\n  const [src, setSrc] = useState<string>(\"\");\r\n\r\n  const onError = () => {\r\n    setSrc(`${process.env.PUBLIC_URL}/placeholderbanner.png`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSrc(\r\n      \"https://bitter-imgs.s3.eu-west-2.amazonaws.com/banner-\" +\r\n        handle +\r\n        `?${Date.now()}`\r\n    );\r\n  }, [handle]);\r\n\r\n  return (\r\n    <div className=\"user-banner\">\r\n      <img src={src} onError={onError} alt=\"profile banner\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserBanner;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst UserPhoto: React.FC<{ handle: string }> = ({ handle }) => {\r\n  const [src, setSrc] = useState<string>(\"\");\r\n\r\n  const onError = () => {\r\n    setSrc(\"https://bitter-imgs.s3.eu-west-2.amazonaws.com/pfpdefault\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSrc(\r\n      `https://bitter-imgs.s3.eu-west-2.amazonaws.com/pfp-${handle}` +\r\n        `?${Date.now().toString().slice(0, -4)}`\r\n    );\r\n  }, [handle]);\r\n\r\n  return (\r\n    <div className=\"user-photo\">\r\n      <img src={src} onError={onError} alt=\"profile pic\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPhoto;\r\n","import React, { useState } from \"react\";\r\n\r\nimport User from \"../../../Types/User\";\r\nimport CoreService from \"../../core/CoreService\";\r\n\r\ninterface Props {\r\n  updatePageState: (stateId: number) => void;\r\n  user: User;\r\n}\r\n\r\nconst UserInfo: React.FC<Props> = ({ updatePageState, user }) => {\r\n  const coreService = new CoreService();\r\n  const [listId, setListId] = useState<number>(0);\r\n  const printProps = () => console.log(user);\r\n\r\n  const changeTab = (state: number): void => {\r\n    setListId(state);\r\n    updatePageState(state);\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-info\">\r\n      <div className=\"user-displayname\" onClick={printProps}>\r\n        {user.display_name}\r\n      </div>\r\n      <div id=\"user-joindate\">\r\n        {coreService.formatJoinDate(user.created_on)}\r\n      </div>\r\n      <div className=\"user-handle\">{user.handle}</div>\r\n      <div className=\"user-bio\">{user.bio}</div>\r\n      <div className=\"user-tabs\">\r\n        <div\r\n          className={`user-tab-bits${listId === 0 ? \" user-current-tab\" : \"\"}`}\r\n          onClick={() => changeTab(0)}\r\n        >\r\n          <b>{user.bits_count}</b> Bits\r\n        </div>\r\n        <div\r\n          className={`user-tab-replies${\r\n            listId === 1 ? \" user-current-tab\" : \"\"\r\n          }`}\r\n          onClick={() => changeTab(1)}\r\n        >\r\n          <b>{user.replies}</b> Bits and replies\r\n        </div>\r\n        <div\r\n          className={`user-following${listId === 2 ? \" user-current-tab\" : \"\"}`}\r\n          onClick={() => changeTab(2)}\r\n        >\r\n          <b>{user.following_count}</b> Following\r\n        </div>\r\n        <div\r\n          className={`user-followers${listId === 3 ? \" user-current-tab\" : \"\"}`}\r\n          onClick={() => changeTab(3)}\r\n        >\r\n          <b>{user.follower_count}</b> Followers\r\n        </div>\r\n        <div\r\n          className={`user-likes${listId === 4 ? \" user-current-tab\" : \"\"}`}\r\n          onClick={() => changeTab(4)}\r\n        >\r\n          <b>{user.likes}</b> Likes\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport Popup from \"reactjs-popup\";\r\nimport Styled from \"styled-components\";\r\nimport HttpService from \"../../core/HttpService\";\r\n\r\nconst StyledPopup = Styled(Popup)`\r\n  &-content {\r\n    width: 350px;\r\n    padding: 40px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\n// EDIT PROFILE\r\n\r\nconst EditProfileButton: React.FC<{ bio?: string; display_name?: string }> = (\r\n  props\r\n) => {\r\n  const httpService = new HttpService();\r\n\r\n  // Whether modal is open or not\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const closeModal = () => {\r\n    if (changesSubmitted) history.go(0);\r\n    setOpen(false);\r\n    resetInputs();\r\n  };\r\n  const history = useHistory();\r\n\r\n  const maxDisplayNameLength = 25;\r\n  const maxBioLength = 160;\r\n\r\n  //#region states\r\n  // Input field states\r\n  const [displayName, setDisplayName] = useState<string>(\"\");\r\n  const [bio, setBio] = useState<string>(\"\");\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  // Error messages\r\n  const [textErrorOccurred, setTextErrorOccurred] = useState<boolean>(false);\r\n  const [pfpErrorOccurred, setPfpErrorOccurred] = useState<boolean>(false);\r\n  const [bannerErrorOccurred, setBannerErrorOccurred] =\r\n    useState<boolean>(false);\r\n  const [pfpTooBig, setPfpTooBig] = useState<boolean>(false);\r\n  const [bannerTooBig, setBannerTooBig] = useState<boolean>(false);\r\n\r\n  // Images\r\n  const [pfp, setPfp] = useState<any>(undefined);\r\n  const [banner, setBanner] = useState<any>(undefined);\r\n\r\n  // Record if changes made\r\n  const [textChanged, setTextChanged] = useState<boolean>(false);\r\n  const [changesSubmitted, setChangesSubmitted] = useState<boolean>(false);\r\n\r\n  const textButtonActive: boolean =\r\n    textChanged &&\r\n    displayName.trim().length > 0 &&\r\n    displayName.trim().length <= maxDisplayNameLength &&\r\n    bio.trim().length <= maxBioLength;\r\n  //#endregion\r\n\r\n  const resetInputs = () => {\r\n    if (props.display_name) {\r\n      setDisplayName(props.display_name);\r\n    }\r\n    if (props.bio) {\r\n      setBio(props.bio);\r\n    }\r\n    setTextChanged(false);\r\n    setPfp(undefined);\r\n    setBanner(undefined);\r\n    setPfpTooBig(false);\r\n    setBannerTooBig(false);\r\n  };\r\n\r\n  // Update input fields on page load\r\n  useEffect(() => {\r\n    resetInputs();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props]);\r\n\r\n  //#region text fields\r\n  // Inputting changes\r\n  const handleBioChange = (e: any) => {\r\n    const { value } = e.target;\r\n    setBio(value);\r\n    setTextChanged(true);\r\n  };\r\n  const handleDisplayNameChange = (e: any) => {\r\n    const { value } = e.target;\r\n    setDisplayName(value);\r\n    setTextChanged(true);\r\n  };\r\n\r\n  // Submit text field changes\r\n  const onSubmitText = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    // Remove whitespace from start and end\r\n    setBio(bio.trim());\r\n    setDisplayName(displayName.trim());\r\n\r\n    // Make patch request\r\n    setIsLoading(true);\r\n    let res = \"/users\";\r\n    let body = { display_name: displayName, bio: bio };\r\n    let resp: any = await httpService.makePatchRequest(res, body);\r\n\r\n    if (resp.code === \"updateSuccess\") {\r\n      // Refresh page\r\n      setChangesSubmitted(true);\r\n    } else {\r\n      // Error message\r\n      setTextErrorOccurred(true);\r\n      console.error(resp);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n  //#endregion\r\n\r\n  //#region pfp\r\n  const handlePfpChange = async (e: any) => {\r\n    const file: any = e.target.files[0];\r\n    setPfp(file);\r\n    setPfpTooBig(file.size > 20971520);\r\n  };\r\n\r\n  const onSubmitPfp = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    setIsLoading(true);\r\n    let res = \"/users\";\r\n    let resp: any = await httpService.uploadImage(res, pfp, \"pfp\");\r\n\r\n    if (resp.code === \"uploadSuccess\") {\r\n      // Refresh page\r\n      setChangesSubmitted(true);\r\n      setPfp(undefined);\r\n    } else {\r\n      // Error message\r\n      setPfpErrorOccurred(true);\r\n      console.error(resp);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n  //#endregion\r\n\r\n  //#region banner\r\n  const handleBannerChange = async (e: any) => {\r\n    const file: any = e.target.files[0];\r\n    setBanner(file);\r\n    setBannerTooBig(file.size > 20971520);\r\n  };\r\n\r\n  const onSubmitBanner = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    setIsLoading(true);\r\n    let res = \"/users\";\r\n    let resp: any = await httpService.uploadImage(res, banner, \"banner\");\r\n\r\n    if (resp.code === \"uploadSuccess\") {\r\n      // Refresh page\r\n      setChangesSubmitted(true);\r\n      setBanner(undefined);\r\n    } else {\r\n      // Error message\r\n      setBannerErrorOccurred(true);\r\n      console.error(resp);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n  //#endregion\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"button\"\r\n        onClick={() => setOpen(true)}\r\n        style={{ width: \"140px\" }}\r\n      >\r\n        Edit Profile\r\n      </button>\r\n\r\n      <StyledPopup open={open} modal onClose={closeModal}>\r\n        {isLoading ? (\r\n          <div className=\"loader\"></div>\r\n        ) : (\r\n          <>\r\n            <div className=\"edit-profile-title\">Edit Profile</div>\r\n            <form onSubmit={onSubmitText}>\r\n              <div className=\"edit-profile-label\">Change display name</div>\r\n              <TextareaAutosize\r\n                className=\"edit-profile-input\"\r\n                placeholder=\"Display name\"\r\n                value={displayName}\r\n                onChange={handleDisplayNameChange}\r\n              />\r\n              {/* Display name empty */}\r\n              {displayName.trim().length === 0 ? (\r\n                <div className=\"form-error-message\">\r\n                  Display name cannot be empty\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {/* Display name too long */}\r\n              {displayName.trim().length > maxDisplayNameLength ? (\r\n                <div className=\"form-error-message\">\r\n                  Display name is too long\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <div className=\"edit-profile-label\">Change bio</div>\r\n              <TextareaAutosize\r\n                className=\"edit-profile-input\"\r\n                placeholder=\"Bio\"\r\n                value={bio}\r\n                onChange={handleBioChange}\r\n              />\r\n              {/* Bio too long */}\r\n              {bio.trim().length > maxBioLength ? (\r\n                <div className=\"form-error-message\">Bio too long</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {/* Post error occurred */}\r\n              {textErrorOccurred ? (\r\n                <div className=\"form-error-message\">An error occurred</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <button\r\n                type=\"submit\"\r\n                className=\"button-primary edit-profile-button\"\r\n                style={{\r\n                  opacity: textButtonActive ? 1 : 0.5,\r\n                  cursor: !textButtonActive ? \"initial\" : \"pointer\",\r\n                }}\r\n                disabled={!textButtonActive}\r\n              >\r\n                Submit changes\r\n              </button>\r\n            </form>\r\n\r\n            <hr className=\"edit-profile-hr\" />\r\n\r\n            <div className=\"edit-profile-label\">Change profile picture</div>\r\n            <input\r\n              type=\"file\"\r\n              name=\"upload-pfp\"\r\n              accept=\".jpeg, .png, .jpg\"\r\n              id=\"upload-pfp\"\r\n              onChange={handlePfpChange}\r\n            />\r\n            <div className=\"image-rec-size\">(Recommended size: 140x140)</div>\r\n            <button\r\n              className=\"button-primary edit-profile-button\"\r\n              style={{\r\n                opacity: pfp === undefined || pfpTooBig ? 0.5 : 1,\r\n                cursor:\r\n                  pfp === undefined || bannerTooBig ? \"initial\" : \"pointer\",\r\n              }}\r\n              disabled={pfp === undefined || pfpTooBig}\r\n              onClick={onSubmitPfp}\r\n            >\r\n              Upload new profile pic\r\n            </button>\r\n            {/* File too big */}\r\n            {pfpTooBig ? (\r\n              <div className=\"form-error-message\">File too big (max 20MB)</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {/* Post error occurred */}\r\n            {pfpErrorOccurred ? (\r\n              <div className=\"form-error-message\">An error occurred</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <hr className=\"edit-profile-hr\" />\r\n\r\n            <div className=\"edit-profile-label\">Change banner</div>\r\n            <input\r\n              type=\"file\"\r\n              name=\"upload-banner\"\r\n              accept=\".jpeg, .png, .jpg\"\r\n              id=\"upload-banner\"\r\n              onChange={handleBannerChange}\r\n            />\r\n            <div className=\"image-rec-size\">(Recommended size: 600x150)</div>\r\n            <button\r\n              className=\"button-primary edit-profile-button\"\r\n              style={{\r\n                opacity: banner === undefined || bannerTooBig ? 0.5 : 1,\r\n                cursor:\r\n                  banner === undefined || bannerTooBig ? \"initial\" : \"pointer\",\r\n              }}\r\n              disabled={banner === undefined || bannerTooBig}\r\n              onClick={onSubmitBanner}\r\n            >\r\n              Upload new banner\r\n            </button>\r\n            {/* File too big */}\r\n            {bannerTooBig ? (\r\n              <div className=\"form-error-message\">File too big (max 20MB)</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {/* Post error occurred */}\r\n            {bannerErrorOccurred ? (\r\n              <div className=\"form-error-message\">An error occurred</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <hr className=\"edit-profile-hr\" />\r\n\r\n            <button onClick={closeModal} style={{ marginTop: \"20px\" }}>\r\n              Close window\r\n            </button>\r\n          </>\r\n        )}\r\n      </StyledPopup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfileButton;\r\n","import HttpService from \"./HttpService\";\r\nimport User from \"../../Types/User\";\r\n\r\nexport default class ValidationService {\r\n\r\n    httpService: HttpService;\r\n\r\n\r\n    constructor() {\r\n        this.httpService = new HttpService();\r\n    }\r\n\r\n\r\n    isPasswordValid = (s: string) => {\r\n        if (s.length < 8) return false;\r\n        return (\r\n          /[a-z]/.test(s) &&\r\n          /[A-Z]/.test(s) &&\r\n          /[0-9]/.test(s) &&\r\n          /[-=+^$*.[\\]{}()?\"!@#%&/\\\\,><':;|_~`]/.test(s)\r\n        );\r\n      };\r\n\r\n\r\n    isEmailUsed = async (email: string): Promise<boolean> => {\r\n        let res = \"/users/exists\";\r\n        let queryParams = { email };\r\n        let resp: any = await this.httpService.makeGetRequest(res, queryParams);\r\n\r\n        console.log(resp);\r\n        return resp;\r\n      };\r\n\r\n\r\n      isHater = (user: User): boolean => {\r\n        return (\r\n          typeof user.dislikes !== \"undefined\" &&\r\n          typeof user.likes !== \"undefined\" &&\r\n          user.dislikes > user.likes\r\n        )\r\n      };\r\n}\r\n","import React, { useContext } from \"react\";\r\n\r\nimport UserBanner from \"./UserBanner\";\r\nimport UserPhoto from \"./UserPhoto\";\r\nimport UserInfo from \"./UserInfo\";\r\nimport EditProfileButton from \"./EditProfileButton\";\r\nimport UnfollowButton from \"../../Shared/FollowButtons/UnfollowButton\";\r\nimport FollowButton from \"../../Shared/FollowButtons/FollowButton\";\r\n\r\nimport User from \"../../../Types/User\";\r\nimport ContextProps from \"../../../Types/ContextProps\";\r\nimport ValidationService from \"../../core/ValidationService\";\r\nimport { AccountContext } from \"../../Account\";\r\n\r\ninterface Props {\r\n  updatePageState: (stateId: number) => void;\r\n  user: User;\r\n}\r\n\r\nconst UserHeader: React.FC<Props> = ({ updatePageState, user }) => {\r\n  const validationService = new ValidationService();\r\n  const { setIsFollowing, isFollowing, myHandle }: ContextProps =\r\n    useContext(AccountContext);\r\n\r\n  return (\r\n    <div className=\"user-header\">\r\n      <UserBanner handle={user.handle} />\r\n      <div className=\"user-pfp-follow\">\r\n        <UserPhoto handle={user.handle} />\r\n        <div className=\"user-branding\">\r\n          {validationService.isHater(user) ? (\r\n            <span\r\n              className=\"user-branding-hater\"\r\n              title=\"This user has more dislikes than likes\"\r\n            >\r\n              HATER\r\n            </span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <div className=\"user-follow-button\">\r\n          {myHandle === user.handle ? (\r\n            <EditProfileButton\r\n              bio={user.bio}\r\n              display_name={user.display_name}\r\n            />\r\n          ) : isFollowing ? (\r\n            <UnfollowButton\r\n              handle={user.handle}\r\n              setFollowing={setIsFollowing}\r\n            />\r\n          ) : (\r\n            <FollowButton handle={user.handle} setFollowing={setIsFollowing} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <UserInfo updatePageState={updatePageState} user={user} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserHeader;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AccountContext } from \"../Account\";\r\nimport BitList from \"../Shared/BitList/BitList\";\r\n\r\nimport BitInfo from \"../../Types/BitInfo\";\r\nimport ContextProps from \"../../Types/ContextProps\";\r\nimport BitService from \"../core/BitService\";\r\n\r\ninterface Props {\r\n  showReplies: boolean;\r\n}\r\n\r\nconst UserBitList: React.FC<Props> = ({ showReplies }) => {\r\n  const bitService = new BitService();\r\n\r\n  // fetch list of bits\r\n  const [bits, setBits] = useState<Array<BitInfo>>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const { currHandle, myHandle }: ContextProps = useContext(AccountContext);\r\n\r\n  // Fetch posts every time the user changes\r\n  useEffect(() => {\r\n    fetchBits();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currHandle]);\r\n\r\n  const fetchBits = async () => {\r\n    setIsLoading(true);\r\n\r\n    await bitService\r\n      .getUserBits(currHandle, myHandle)\r\n      .then((bits) => setBits(bits))\r\n      .catch((bits) => setBits(bits));\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  // pass into BitList\r\n  return (\r\n    <BitList\r\n      bits={showReplies ? bits : bits.filter((post) => !post.reply_to)}\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UserBitList;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport User from \"../../../Types/User\";\r\nimport ContextProps from \"../../../Types/ContextProps\";\r\nimport { AccountContext } from \"../../Account\";\r\nimport SuggestedUserFollowButton from \"../../Shared/FollowButtons/SecondaryFollowButton\";\r\n\r\nconst UserCard: React.FC<{ user: User }> = ({ user }) => {\r\n  // myHandle to show/hide follow button\r\n  const { myHandle }: ContextProps = useContext(AccountContext);\r\n\r\n  // Numbers for interactions\r\n  return (\r\n    <div className=\"user-card\">\r\n      {/* Poster profile picture */}\r\n      <Link to={`/u/${user.handle}`}>\r\n        <div className=\"bit-pfp\">\r\n          <img\r\n            src={`${process.env.PUBLIC_URL}/placeholder48.png`}\r\n            alt=\"profile pic\"\r\n          />\r\n        </div>\r\n      </Link>\r\n\r\n      <div className=\"user-card-content\">\r\n        {/* User info */}\r\n        <Link to={`/u/${user.handle}`}>\r\n          <div className=\"user-card-info\">\r\n            <span className=\"bit-info-displayname\">{user.display_name}</span>\r\n            <span className=\"bit-info-handle\">@{user.handle}</span>\r\n          </div>\r\n        </Link>\r\n\r\n        {/* Follow button */}\r\n        <div\r\n          className=\"user-card-follow\"\r\n          style={{ display: myHandle === user.handle ? \"none\" : \"\" }}\r\n        >\r\n          <SuggestedUserFollowButton\r\n            className=\"user-card-follow-button\"\r\n            handle={user.handle}\r\n            isFollowing={user.isFollowing}\r\n          />\r\n        </div>\r\n\r\n        <Link to={`/u/${user.handle}`}>\r\n          <div className=\"user-card-bio\">{user.bio}</div>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React from \"react\";\r\n\r\nimport User from \"../../Types/User\";\r\nimport UserCard from \"./UserFollowList/UserCard\";\r\n\r\nexport interface UserFollowListProps {\r\n  users: Array<User>;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst UserFollowList: React.FC<UserFollowListProps> = ({\r\n  users,\r\n  isLoading,\r\n}) => {\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <div className=\"userlist-loader\">\r\n          <div className=\"loader\" />\r\n        </div>\r\n      ) : users.length > 0 ? (\r\n        users.map((user) => <UserCard user={user} key={user.handle} />)\r\n      ) : (\r\n        <div className=\"no-users\">No users found</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserFollowList;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AccountContext } from \"../../Account\";\r\nimport User from \"../../../Types/User\";\r\nimport UserFollowList from \"../UserFollowList\";\r\nimport ContextProps from \"../../../Types/ContextProps\";\r\nimport UserService from \"../../core/UserService\";\r\n\r\nexport interface UserFollowingProps {}\r\n\r\nconst UserFollowing: React.FC<UserFollowingProps> = () => {\r\n  const userService = new UserService();\r\n\r\n  // fetch list of bits\r\n  const [users, setUsers] = useState<Array<User>>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const { currHandle, myHandle }: ContextProps = useContext(AccountContext);\r\n\r\n  // Fetch posts every time the user changes\r\n  useEffect(() => {\r\n    fetchUsers();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currHandle]);\r\n\r\n  const fetchUsers = async () => {\r\n    setIsLoading(true);\r\n\r\n    await userService\r\n      .getFollowing(currHandle, myHandle)\r\n      .then((users) => setUsers(users))\r\n      .catch((users) => setUsers(users));\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return <UserFollowList users={users} isLoading={isLoading} />;\r\n};\r\n\r\nexport default UserFollowing;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AccountContext } from \"../../Account\";\r\nimport UserFollowList from \"../UserFollowList\";\r\nimport User from \"../../../Types/User\";\r\nimport ContextProps from \"../../../Types/ContextProps\";\r\nimport UserService from \"../../core/UserService\";\r\n\r\nexport interface UserFollowingProps {}\r\n\r\nconst UserFollowers: React.FC<UserFollowingProps> = () => {\r\n  const userService = new UserService();\r\n\r\n  // fetch list of bits\r\n  const [users, setUsers] = useState<Array<User>>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const { currHandle, myHandle }: ContextProps = useContext(AccountContext);\r\n\r\n  // Fetch posts every time the user changes\r\n  useEffect(() => {\r\n    fetchUsers();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currHandle]);\r\n\r\n  const fetchUsers = async () => {\r\n    setIsLoading(true);\r\n\r\n    await userService\r\n      .getFollowers(currHandle, myHandle)\r\n      .then((users) => setUsers(users))\r\n      .catch((users) => setUsers(users));\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return <UserFollowList users={users} isLoading={isLoading} />;\r\n};\r\n\r\nexport default UserFollowers;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AccountContext } from \"../Account\";\r\nimport BitList from \"../Shared/BitList/BitList\";\r\n\r\nimport BitInfo from \"../../Types/BitInfo\";\r\nimport ContextProps from \"../../Types/ContextProps\";\r\nimport BitService from \"../core/BitService\";\r\n\r\ninterface Props {}\r\n\r\nconst UserBitList: React.FC<Props> = () => {\r\n  const bitService = new BitService();\r\n\r\n  // fetch list of bits\r\n  const [likes, setLikes] = useState<Array<BitInfo>>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const { currHandle, myHandle }: ContextProps = useContext(AccountContext);\r\n\r\n  // Fetch posts every time the user changes\r\n  useEffect(() => {\r\n    fetchBits();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currHandle]);\r\n\r\n  const fetchBits = async () => {\r\n    setIsLoading(true);\r\n\r\n    await bitService\r\n      .getUserBits(currHandle, myHandle)\r\n      .then((bits) => setLikes(bits))\r\n      .catch((bits) => setLikes(bits));\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  // pass into BitList\r\n  return <BitList bits={likes} isLoading={isLoading} />;\r\n};\r\n\r\nexport default UserBitList;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { AccountContext } from \"../Account\";\r\nimport \"./UserPage.css\";\r\n\r\nimport UserHeader from \"./UserHeader/UserHeader\";\r\nimport UserBitList from \"./UserBitList\";\r\nimport UserFollowing from \"./UserFollowList/UserFollowing\";\r\nimport UserFollowers from \"./UserFollowList/UserFollowers\";\r\nimport UserLikeList from \"./UserLikeList\";\r\n\r\nimport User from \"../../Types/User\";\r\nimport ContextProps from \"../../Types/ContextProps\";\r\nimport UserService from \"../core/UserService\";\r\n\r\nconst UserPage: React.FC<{}> = () => {\r\n  const userService = new UserService();\r\n  const [user, setUser] = useState<User>({ handle: \"\" });\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [listState, setListState] = useState<any>(\r\n    <UserBitList showReplies={false} />\r\n  );\r\n\r\n  document.title = (user.handle ? \"@\" + user.handle : \"user\") + \" / Bitter\";\r\n\r\n  const { currHandle, setCurrHandle, myHandle, setIsFollowing }: ContextProps =\r\n    useContext(AccountContext);\r\n\r\n  const handle: string = useLocation().pathname.slice(3);\r\n  useEffect(() => {\r\n    fetchUser(handle);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [myHandle]);\r\n\r\n  const updateUser = (user: User) => {\r\n    setUser(user);\r\n    setCurrHandle(user.handle);\r\n    if (typeof user.isFollowing !== \"undefined\")\r\n      setIsFollowing(user.isFollowing);\r\n  };\r\n\r\n  const fetchUser = async (handle: string) => {\r\n    setIsLoading(true);\r\n    updatePageState(0);\r\n\r\n    await userService\r\n      .fetchUser(handle, myHandle)\r\n      .then((user) => updateUser(user))\r\n      .catch(() => updateUser({ handle: \"\" }));\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  // Update when moving between user pages\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    return history.listen((location) => {\r\n      fetchUser(location.pathname.slice(3));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  function updatePageState(stateId: number): void {\r\n    switch (stateId) {\r\n      case 0:\r\n        setListState(<UserBitList showReplies={false} />);\r\n        break;\r\n      case 1:\r\n        setListState(<UserBitList showReplies={true} />);\r\n        break;\r\n      case 2:\r\n        setListState(<UserFollowing />);\r\n        break;\r\n      case 3:\r\n        setListState(<UserFollowers />);\r\n        break;\r\n      case 4:\r\n        setListState(<UserLikeList />);\r\n        break;\r\n      default:\r\n        setListState(<UserBitList showReplies={false} />);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <div className=\"user-loader\">\r\n          <div className=\"loader\" />\r\n        </div>\r\n      ) : (\r\n        <div className=\"user-page\">\r\n          {currHandle !== \"\" ? (\r\n            <>\r\n              <UserHeader updatePageState={updatePageState} user={user} />\r\n              {listState}\r\n            </>\r\n          ) : (\r\n            <div className=\"user-not-found\">\r\n              User <span className=\"user-not-found-handle\">@{handle}</span>{\" \"}\r\n              could not be found.\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React from \"react\";\r\nimport BitInfo from \"../../Types/BitInfo\";\r\nimport Bit from \"../Shared/Bit/Bit\";\r\n\r\nexport interface PreThreadProps {\r\n  bit: BitInfo;\r\n}\r\n\r\nconst PreThread: React.FC<PreThreadProps> = ({ bit }) => {\r\n  if (typeof bit.pre_thread === \"undefined\") {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"prethread\">\r\n      {bit.pre_thread.map((prebit) => (\r\n        <Bit {...prebit} classes=\"prethread-bit\" key={prebit.post_id} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreThread;\r\n","import React from \"react\";\r\nimport BitInfo from \"../../Types/BitInfo\";\r\nimport Bit from \"../Shared/Bit/Bit\";\r\n\r\nconst ReplyThread: React.FC<{ thread: Array<BitInfo> }> = ({ thread }) => {\r\n  return (\r\n    <div className=\"reply-thread\">\r\n      {thread.map((reply) => (\r\n        <Bit {...reply} classes=\"reply-thread-bit\" key={reply.post_id} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReplyThread;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport BitPreThread from \"./PreThreadList\";\r\nimport \"./BitPage.css\";\r\nimport { AccountContext } from \"../Account\";\r\nimport Bit from \"../Shared/Bit/Bit\";\r\n\r\nimport BitInfo, { emptyPost } from \"../../Types/BitInfo\";\r\nimport ContextProps from \"../../Types/ContextProps\";\r\nimport ReplyThread from \"./ReplyThread\";\r\nimport BitService from \"../core/BitService\";\r\n\r\nconst BitPage: React.FC<{}> = () => {\r\n  const bitService = new BitService();\r\n  const [post, setPost] = useState<BitInfo>(emptyPost);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [post_id, setPostId] = useState<string>(\r\n    useLocation().pathname.slice(3)\r\n  );\r\n\r\n  document.title = (post.handle ? \"@\" + post.handle : \"post\") + \" / Bitter\";\r\n\r\n  const { myHandle }: ContextProps = useContext(AccountContext);\r\n\r\n  // Database call for post by post_id\r\n  const fetchPost = async (post_id: string) => {\r\n    setIsLoading(true);\r\n\r\n    await bitService\r\n      .getBitPage(myHandle, post_id)\r\n      .then((respPost) => setPost(respPost))\r\n      .catch((respPost) => setPost(respPost));\r\n\r\n    setIsLoading(false);\r\n\r\n    let elmnt = document.getElementsByClassName(\"thread-main-bit\")[0];\r\n    if (elmnt) elmnt.scrollIntoView();\r\n  };\r\n\r\n  // Load post on mount\r\n  useEffect(() => {\r\n    fetchPost(post_id);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [post_id, myHandle]);\r\n\r\n  // Update when moving between post pages\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    return history.listen((location) => {\r\n      setPostId(location.pathname.slice(3));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <div className=\"user-loader\">\r\n          <div className=\"loader\" />\r\n        </div>\r\n      ) : (\r\n        <div className=\"bit-page\">\r\n          {post.post_id !== \"\" ? (\r\n            <>\r\n              <BitPreThread bit={post} />\r\n              <Bit {...post} classes=\"thread-main-bit\" />\r\n              {typeof post.reply_threads === \"undefined\" ? (\r\n                <></>\r\n              ) : (\r\n                post.reply_threads.map((thread) => {\r\n                  return (\r\n                    <ReplyThread thread={thread} key={thread[0].post_id} />\r\n                  );\r\n                })\r\n              )}\r\n            </>\r\n          ) : (\r\n            <div className=\"user-not-found\">Post could not be found.</div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BitPage;\r\n","import React, { useState } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport Styled from \"styled-components\";\r\n\r\nexport interface ChangeEmailConfirmationProps {\r\n  onSubmit: (e: any) => Promise<void>;\r\n  newEmail: string;\r\n}\r\n\r\nconst StyledPopup = Styled(Popup)`\r\n  &-content {\r\n    width: 300px;\r\n    padding: 40px;\r\n    text-align: center;\r\n    transform: translateY(-160px)\r\n  }\r\n`;\r\n\r\nconst ChangeEmailConfirmation: React.FC<ChangeEmailConfirmationProps> = ({\r\n  onSubmit,\r\n  newEmail,\r\n}) => {\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const closeModal = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => {\r\n          if (newEmail.length > 0) {\r\n            setOpen(true);\r\n          }\r\n        }}\r\n        type=\"button\"\r\n      >\r\n        Submit\r\n      </button>\r\n\r\n      <StyledPopup open={open} modal onClose={closeModal}>\r\n        <div style={{ marginBottom: \"30px\" }}>\r\n          Are you sure you want to change your email to <b>{newEmail}</b>?\r\n        </div>\r\n        <button\r\n          onClick={async (e) => {\r\n            await onSubmit(e);\r\n            closeModal();\r\n          }}\r\n          type=\"submit\"\r\n          className=\"button-primary\"\r\n        >\r\n          Change email\r\n        </button>\r\n        <br />\r\n        <button onClick={closeModal} style={{ marginTop: \"10px\" }}>\r\n          Cancel\r\n        </button>\r\n      </StyledPopup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangeEmailConfirmation;\r\n","import { CognitoUserAttribute } from \"amazon-cognito-identity-js\";\r\nimport React, { useState } from \"react\";\r\nimport CoreService from \"../core/CoreService\";\r\nimport ValidationService from \"../core/ValidationService\";\r\nimport ChangeEmailConfirmation from \"./ChangeEmailConfirmation\";\r\n\r\nexport interface ChangeEmailProps {}\r\n\r\nconst ChangeEmail: React.FC<ChangeEmailProps> = () => {\r\n  const validationService = new ValidationService();\r\n  const coreService = new CoreService();\r\n\r\n  const [newEmail, setNewEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  const [emailExists, setEmailExists] = useState<boolean>(false);\r\n  const [isPasswordCorrect, setIsPasswordCorrect] = useState<boolean>(true);\r\n  const [hasSucceeded, setHasSucceeded] = useState<boolean>(false);\r\n\r\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    // Check if email is already used\r\n    if (await validationService.isEmailUsed(newEmail)) {\r\n      setEmailExists(true);\r\n      return;\r\n    }\r\n\r\n    let attributes = [\r\n      new CognitoUserAttribute({ Name: \"email\", Value: newEmail }),\r\n    ];\r\n\r\n    let callback = (err: string, results: string) => {\r\n      if (err) {\r\n        console.error(err);\r\n      } else {\r\n        setHasSucceeded(true);\r\n      }\r\n      console.log(results);\r\n    };\r\n\r\n    let catchError = (err: any): void => {\r\n      if (err.code === \"NotAuthorizedException\") setIsPasswordCorrect(false);\r\n      console.error(err);\r\n    };\r\n\r\n    coreService\r\n      .authenticate(password)\r\n      .then((user: any) => user.updateAttributes(attributes, callback))\r\n      .catch(catchError);\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-field\">\r\n      <div className=\"settings-header\">Change email</div>\r\n      <form onSubmit={(e) => e.preventDefault()}>\r\n        <div className=\"settings-input-field\">\r\n          <div className=\"settings-input-label\">New email:</div>\r\n          <div className=\"settings-input-wrapper\">\r\n            <input\r\n              value={newEmail}\r\n              onChange={(event) => {\r\n                setEmailExists(false);\r\n                setNewEmail(event.target.value);\r\n              }}\r\n              type=\"email\"\r\n              className={emailExists ? \"invalid\" : \"\"}\r\n            />\r\n\r\n            {/* Email already exists */}\r\n            {emailExists ? (\r\n              <div className=\"form-error-message\">\r\n                An account with this email already exists\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"settings-input-field\">\r\n          <div className=\"settings-input-label\">Password:</div>\r\n          <div className=\"settings-input-wrapper\">\r\n            <input\r\n              value={password}\r\n              onChange={(event) => {\r\n                setIsPasswordCorrect(true);\r\n                setPassword(event.target.value);\r\n              }}\r\n              type=\"password\"\r\n              className={isPasswordCorrect ? \"\" : \"invalid\"}\r\n            />\r\n\r\n            {/* Incorrect password */}\r\n            {isPasswordCorrect ? (\r\n              \"\"\r\n            ) : (\r\n              <div className=\"form-error-message\">Incorrect password</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <ChangeEmailConfirmation onSubmit={onSubmit} newEmail={newEmail} />\r\n      </form>\r\n\r\n      {/* Success message */}\r\n      {hasSucceeded ? (\r\n        <div className=\"form-success-message\">\r\n          Success! Please check your email to see a meaningless verification\r\n          code\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeEmail;\r\n","import React, { useState } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport Styled from \"styled-components\";\r\n\r\nexport interface ChangeEmailConfirmationProps {\r\n  onSubmit: (e: any) => Promise<void>;\r\n}\r\n\r\nconst StyledPopup = Styled(Popup)`\r\n  &-content {\r\n    width: 300px;\r\n    padding: 40px;\r\n    text-align: center;\r\n    font-size: 20px;\r\n    transform: translateY(-160px)\r\n  }\r\n  &-content button {\r\n    font-size: 12px;\r\n    line-height: 28px;\r\n    height: 28px;\r\n  }\r\n`;\r\n\r\nconst ChangePasswordConfirmation: React.FC<ChangeEmailConfirmationProps> = ({\r\n  onSubmit,\r\n}) => {\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const closeModal = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <button onClick={() => setOpen(true)} type=\"button\">\r\n        Submit\r\n      </button>\r\n\r\n      <StyledPopup open={open} modal onClose={closeModal}>\r\n        <div style={{ marginBottom: \"30px\" }}>\r\n          Are you sure you want to change your password?\r\n        </div>\r\n        <button\r\n          onClick={async (e) => {\r\n            await onSubmit(e);\r\n            closeModal();\r\n          }}\r\n          type=\"submit\"\r\n          className=\"button-primary\"\r\n        >\r\n          Change password\r\n        </button>\r\n        <br />\r\n        <button onClick={closeModal} style={{ marginTop: \"10px\" }}>\r\n          Cancel\r\n        </button>\r\n      </StyledPopup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordConfirmation;\r\n","import React, { useState } from \"react\";\r\nimport CoreService from \"../core/CoreService\";\r\nimport ValidationService from \"../core/ValidationService\";\r\nimport ChangePasswordConfirmation from \"./ChangePasswordConfirmation\";\r\n\r\nexport interface ChangePasswordProps {}\r\n\r\nconst ChangePassword: React.FC<ChangePasswordProps> = () => {\r\n  const validationService = new ValidationService();\r\n  const coreService = new CoreService();\r\n\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [newPassword, setNewPassword] = useState<string>(\"\");\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState<string>(\"\");\r\n\r\n  const [isNewPasswordValid, setIsNewPasswordValid] = useState<boolean>(true);\r\n  const [passwordsMismatch, setPasswordsMismatch] = useState<boolean>(false);\r\n  const [correctOldPassword, setCorrectOldPassword] = useState<boolean>(true);\r\n\r\n  const [hasSucceeded, setHasSucceeded] = useState<boolean>(false);\r\n\r\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    // Check new password is valid\r\n    if (!validationService.isPasswordValid(newPassword)) {\r\n      console.log(\"invalid password\");\r\n      setIsNewPasswordValid(false);\r\n      setHasSucceeded(false);\r\n      return;\r\n    }\r\n\r\n    // Check password match\r\n    if (newPassword !== confirmNewPassword) {\r\n      setPasswordsMismatch(true);\r\n      setHasSucceeded(false);\r\n      return;\r\n    }\r\n\r\n    let callback = (err: any, result: any): void => {\r\n      if (err) console.error(err);\r\n      if (result === \"SUCCESS\") {\r\n        setHasSucceeded(true);\r\n      }\r\n    };\r\n\r\n    let catchError = (err: any): void => {\r\n      const code = err.code;\r\n      switch (code) {\r\n        case \"NotAuthorizedException\":\r\n          setCorrectOldPassword(false);\r\n          break;\r\n        default:\r\n          console.error(err);\r\n      }\r\n      setHasSucceeded(false);\r\n    };\r\n\r\n    coreService\r\n      .authenticate(password)\r\n      .then((user: any) => user.changePassword(password, newPassword, callback))\r\n      .catch(catchError);\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-field\">\r\n      <div className=\"settings-header\">Current password:</div>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"settings-input-field\">\r\n          <div className=\"settings-input-label\">Password:</div>\r\n          <div className=\"settings-input-wrapper\">\r\n            <input\r\n              value={password}\r\n              onChange={(event) => {\r\n                setPassword(event.target.value);\r\n                setCorrectOldPassword(true);\r\n              }}\r\n              type=\"password\"\r\n              className={!correctOldPassword ? \"invalid\" : \"\"}\r\n            />\r\n\r\n            {/* Incorrect (old) password */}\r\n            {!correctOldPassword ? (\r\n              <div className=\"form-error-message\">Incorrect password</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"settings-input-field\">\r\n          <div className=\"settings-input-label\">New password:</div>\r\n          <div className=\"settings-input-wrapper\">\r\n            <input\r\n              value={newPassword}\r\n              onChange={(event) => {\r\n                setNewPassword(event.target.value);\r\n                setPasswordsMismatch(false);\r\n                setIsNewPasswordValid(true);\r\n              }}\r\n              type=\"password\"\r\n              className={\r\n                !isNewPasswordValid || passwordsMismatch ? \"invalid\" : \"\"\r\n              }\r\n            />\r\n\r\n            {/* Invalid password */}\r\n            {!isNewPasswordValid ? (\r\n              <div className=\"form-error-message\">Invalid password</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"settings-input-field\">\r\n          <div className=\"settings-input-label\">Confirm password:</div>\r\n          <div className=\"settings-input-wrapper\">\r\n            <input\r\n              value={confirmNewPassword}\r\n              onChange={(event) => {\r\n                setConfirmNewPassword(event.target.value);\r\n                setPasswordsMismatch(false);\r\n              }}\r\n              type=\"password\"\r\n              className={passwordsMismatch ? \"invalid\" : \"\"}\r\n            />\r\n\r\n            {/* Passwords don't match */}\r\n            {passwordsMismatch ? (\r\n              <div className=\"form-error-message\">\r\n                ! Passwords do not match !\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <ChangePasswordConfirmation onSubmit={onSubmit} />\r\n\r\n        {/* Success message */}\r\n        <div\r\n          style={{\r\n            fontSize: \"16px\",\r\n            display: hasSucceeded ? \"\" : \"none\",\r\n          }}\r\n          className=\"form-success-message\"\r\n        >\r\n          Password has been successfully changed\r\n        </div>\r\n      </form>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { useState } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport Styled from \"styled-components\";\r\n\r\nexport interface DeleteAccountConfirmationProps {\r\n  onSubmit: (e: any) => Promise<void>;\r\n  active: boolean;\r\n}\r\n\r\nconst StyledPopup = Styled(Popup)`\r\n  &-content {\r\n    width: 300px;\r\n    padding: 40px;\r\n    text-align: center;\r\n    transform: translateY(-160px);\r\n    font-size: 20px;\r\n  }\r\n  &-content button {\r\n    font-size: 12px;\r\n    line-height: 28px;\r\n    height: 28px;\r\n  }\r\n`;\r\n\r\nconst DeleteAccountConfirmation: React.FC<DeleteAccountConfirmationProps> = ({\r\n  onSubmit,\r\n  active,\r\n}) => {\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const closeModal = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => {\r\n          if (active) {\r\n            setOpen(true);\r\n          }\r\n        }}\r\n        className=\"button-primary\"\r\n        style={{\r\n          backgroundColor: \"#d3455b\",\r\n          borderColor: \"#d3455b\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n      >\r\n        Delete account\r\n      </button>\r\n\r\n      <StyledPopup open={open} modal onClose={closeModal}>\r\n        <div style={{ marginBottom: \"30px\" }}>\r\n          Are you sure you want to delete your account?\r\n        </div>\r\n        <button\r\n          onClick={async (e) => {\r\n            await onSubmit(e);\r\n            closeModal();\r\n          }}\r\n          type=\"submit\"\r\n          className=\"button-primary\"\r\n          style={{\r\n            backgroundColor: \"#d3455b\",\r\n            borderColor: \"#d3455b\",\r\n          }}\r\n        >\r\n          Delete account\r\n        </button>\r\n        <br />\r\n        <button\r\n          className=\"button-primary\"\r\n          onClick={closeModal}\r\n          style={{ marginTop: \"10px\" }}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </StyledPopup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteAccountConfirmation;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport ContextProps from \"../../Types/ContextProps\";\r\nimport { AccountContext } from \"../Account\";\r\nimport CoreService from \"../core/CoreService\";\r\nimport UserService from \"../core/UserService\";\r\nimport DeleteAccountConfirmation from \"./DeleteAccountConfirmation\";\r\n\r\nexport interface ChangeEmailProps {}\r\n\r\nconst ChangeEmail: React.FC<ChangeEmailProps> = () => {\r\n  const coreService = new CoreService();\r\n  const userService = new UserService();\r\n\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [deleteConfirmation, setDeleteConfirmation] = useState<string>(\"\");\r\n\r\n  const [isPasswordCorrect, setIsPasswordCorrect] = useState<boolean>(true);\r\n  const [isConfirmationCorrect, setIsConfirmationCorrect] =\r\n    useState<boolean>(true);\r\n\r\n  const [errorOccurred, setErrorOccurred] = useState<boolean>(false);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const { logout, myHandle }: ContextProps = useContext(AccountContext);\r\n\r\n  const history = useHistory();\r\n  const onSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    // Check deleteConfirmation is correct\r\n    if (deleteConfirmation !== `delete-me-${myHandle}`) {\r\n      setIsConfirmationCorrect(false);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    const catchError = (err: any) => {\r\n      if (err.code === \"NotAuthorizedException\") setIsPasswordCorrect(false);\r\n      console.error(err);\r\n    };\r\n\r\n    // Check password\r\n    await coreService\r\n      .authenticate(password)\r\n      .then(async () => {\r\n        userService\r\n          .deleteAccount()\r\n          .then(() => {\r\n            logout();\r\n            history.push(\"/home\");\r\n          })\r\n          .catch(() => setErrorOccurred(true));\r\n      })\r\n      .catch(catchError)\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-field\">\r\n      {isLoading ? (\r\n        <div className=\"loader\" />\r\n      ) : (\r\n        <>\r\n          <div className=\"settings-header\">Delete account</div>\r\n          <form onSubmit={(e) => e.preventDefault()}>\r\n            <div className=\"settings-input-field\">\r\n              <div className=\"settings-input-label\">Password:</div>\r\n              <div className=\"settings-input-wrapper\">\r\n                <input\r\n                  value={password}\r\n                  onChange={(event) => {\r\n                    setIsPasswordCorrect(true);\r\n                    setPassword(event.target.value);\r\n                    setErrorOccurred(false);\r\n                  }}\r\n                  type=\"password\"\r\n                  className={!isPasswordCorrect ? \"invalid\" : \"\"}\r\n                />\r\n\r\n                {/* Incorrect password */}\r\n                {!isPasswordCorrect ? (\r\n                  <div className=\"form-error-message\">Incorrect password</div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"delete-account-label\">\r\n              Type <code>delete-me-{myHandle}</code> below to confirm your\r\n              decision\r\n            </div>\r\n\r\n            <div className=\"settings-input-field\">\r\n              <div className=\"settings-input-label\">Confirmation:</div>\r\n              <div className=\"settings-input-wrapper\">\r\n                <input\r\n                  value={deleteConfirmation}\r\n                  onChange={(event) => {\r\n                    setIsConfirmationCorrect(true);\r\n                    setDeleteConfirmation(event.target.value);\r\n                    setErrorOccurred(false);\r\n                  }}\r\n                  type=\"text\"\r\n                  className={!isConfirmationCorrect ? \"invalid\" : \"\"}\r\n                />\r\n\r\n                {/* Incorrect confirmation text */}\r\n                {!isConfirmationCorrect ? (\r\n                  <div className=\"form-error-message\">\r\n                    Incorrect confirmation message\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <DeleteAccountConfirmation\r\n              onSubmit={onSubmit}\r\n              active={password.length > 0}\r\n            />\r\n\r\n            {/* Error message */}\r\n            {errorOccurred ? (\r\n              <div className=\"form-error-message\">An error occurred.</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </form>\r\n        </>\r\n      )}\r\n\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeEmail;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Popup from \"reactjs-popup\";\r\nimport Styled from \"styled-components\";\r\nimport ContextProps from \"../../Types/ContextProps\";\r\nimport { AccountContext } from \"../Account\";\r\n\r\nexport interface LogoutButtonProps {}\r\n\r\nconst StyledPopup = Styled(Popup)`\r\n&-content {\r\n  width: 250px;\r\n  padding: 40px;\r\n  text-align: center;\r\n  font-size: 18px;\r\n  transform: translateY(-160px)\r\n}\r\n&-content button {\r\n  font-size: 12px;\r\n  line-height: 28px;\r\n  height: 28px;\r\n}\r\n`;\r\n\r\nconst LogoutButton: React.FC<LogoutButtonProps> = () => {\r\n  // Confirmation popup\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const closeModal = () => setOpen(false);\r\n\r\n  const { logout }: ContextProps = useContext(AccountContext);\r\n  const history = useHistory();\r\n  const onClick = (e: any) => {\r\n    e.preventDefault();\r\n\r\n    // Log out\r\n    logout();\r\n\r\n    // Redirect to home page\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"logout-button\">\r\n      <button className=\"button-primary\" onClick={() => setOpen(true)}>\r\n        Logout\r\n      </button>\r\n\r\n      {/* Confirmation popup */}\r\n      <StyledPopup open={open} modal onClose={closeModal}>\r\n        <div style={{ marginBottom: \"30px\" }}>\r\n          Are you sure you want to logout?\r\n        </div>\r\n        <button onClick={onClick} type=\"submit\" className=\"button-primary\">\r\n          Logout\r\n        </button>\r\n        <br />\r\n        <button onClick={closeModal} style={{ marginTop: \"10px\" }}>\r\n          Cancel\r\n        </button>\r\n      </StyledPopup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;\r\n","import React from \"react\";\r\nimport \"./Settings.css\";\r\nimport ChangeEmail from \"./ChangeEmail\";\r\nimport ChangePassword from \"./ChangePassword\";\r\nimport DeleteAccount from \"./DeleteAccount\";\r\nimport LogoutButton from \"./LogoutButton\";\r\n\r\n// Confirmation popup styles\r\nimport \"reactjs-popup/dist/index.css\";\r\n\r\nconst Settings: React.FC<{}> = () => {\r\n  document.title = \"Settings / Bitter\";\r\n\r\n  return (\r\n    <div className=\"settings\">\r\n      <div className=\"settings-title\">Settings</div>\r\n      <ChangeEmail />\r\n      <ChangePassword />\r\n      <DeleteAccount />\r\n      <LogoutButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AccountContext } from \"../Account\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport { CognitoUserSession } from \"amazon-cognito-identity-js\";\r\nimport ContextProps from \"../../Types/ContextProps\";\r\nimport CoreService from \"../core/CoreService\";\r\n\r\ninterface LoginProps {\r\n  setMyHandle: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst Login: React.FC<LoginProps> = ({ setMyHandle }) => {\r\n  const coreService = new CoreService();\r\n  document.title = \"Login / Bitter\";\r\n\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  const [emailNotVerified, setEmailNotVerified] = useState<boolean>(false);\r\n  const [invalidLoginDetails, setInvalidLoginDetails] =\r\n    useState<boolean>(false);\r\n\r\n  const [errorOccurred, setErrorOccurred] = useState<boolean>(false);\r\n\r\n  const { setIsLoggedIn, setIsAdmin }: ContextProps =\r\n    useContext(AccountContext);\r\n\r\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    coreService\r\n      .login(username, password)\r\n      .then((data: CognitoUserSession) => {\r\n        console.log(\"Logged in!\");\r\n        setMyHandle(data.getIdToken().payload[\"cognito:username\"]);\r\n        if (data.getIdToken().payload[\"custom:role\"] === \"admin\")\r\n          setIsAdmin(true);\r\n        setIsLoggedIn(true);\r\n      })\r\n      .catch((err: any) => {\r\n        const code: string = err.code;\r\n        switch (code) {\r\n          case \"UserNotConfirmedException\":\r\n            console.error(\"Email not verified\");\r\n            setEmailNotVerified(true);\r\n            break;\r\n          case \"NotAuthorizedException\":\r\n            console.error(\"Incorrect username or password\");\r\n            setInvalidLoginDetails(true);\r\n            break;\r\n          default:\r\n            console.error(\"Failed to login!\", err);\r\n            setErrorOccurred(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login-title\">Login</div>\r\n\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"login-input-field\">\r\n          <div className=\"login-input-label\">Email / Handle:</div>\r\n          <input\r\n            value={username}\r\n            onChange={(event) => {\r\n              setEmailNotVerified(false);\r\n              setInvalidLoginDetails(false);\r\n              setUsername(event.target.value);\r\n              setErrorOccurred(false);\r\n            }}\r\n            type=\"text\"\r\n            className={emailNotVerified || invalidLoginDetails ? \"invalid\" : \"\"}\r\n          />\r\n\r\n          {/* Account not verified */}\r\n          {emailNotVerified ? (\r\n            <div className=\"form-error-message\">\r\n              You need to verify your email before logging in\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"login-input-field\">\r\n          <div className=\"login-input-label\">Password:</div>\r\n          <input\r\n            value={password}\r\n            onChange={(event) => {\r\n              setInvalidLoginDetails(false);\r\n              setPassword(event.target.value);\r\n              setErrorOccurred(false);\r\n            }}\r\n            type=\"password\"\r\n            className={invalidLoginDetails ? \"invalid\" : \"\"}\r\n          />\r\n\r\n          {/* Invalid login details */}\r\n          {invalidLoginDetails ? (\r\n            <div className=\"form-error-message\">\r\n              Incorrect username or password\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <button type=\"submit\">Submit</button>\r\n        <div id=\"login-register-link\">\r\n          <Link to=\"/register\">Create an account</Link>\r\n        </div>\r\n\r\n        {/* Error message */}\r\n        {errorOccurred ? (\r\n          <div className=\"form-error-message\">An error occurred.</div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { CognitoUserAttribute } from \"amazon-cognito-identity-js\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ValidationService from \"../core/ValidationService\";\r\nimport UserPool from \"../../UserPool\";\r\nimport \"./Register.css\";\r\n\r\nconst Register: React.FC<{}> = () => {\r\n  const validationService = new ValidationService();\r\n  document.title = \"Register / Bitter\";\r\n\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState<string>(\"\");\r\n\r\n  const [isUsernameEmpty, setIsUsernameEmpty] = useState<boolean>(false);\r\n  const [isUsernameTooLong, setIsUsernameTooLong] = useState<boolean>(false);\r\n  const [isEmailEmpty, setIsEmailEmpty] = useState<boolean>(false);\r\n\r\n  const [usernameExists, setUsernameExists] = useState<boolean>(false);\r\n  const [emailExists, setEmailExists] = useState<boolean>(false);\r\n  const [passwordsMismatch, setPasswordsMismatch] = useState<boolean>(false);\r\n\r\n  const [isUsernameValid, setIsUsernameValid] = useState<boolean>(true);\r\n  const [isEmailValid, setIsEmailValid] = useState<boolean>(true);\r\n  const [isPasswordValid, setIsPasswordValid] = useState<boolean>(true);\r\n\r\n  const [hasSucceeded, setHasSucceeded] = useState<boolean>(false);\r\n  const [errorOccurred, setErrorOccurred] = useState<boolean>(false);\r\n\r\n  const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    // Check fields not empty and passwords match\r\n    if (areFieldsValid()) {\r\n      console.log(\"Empty fields!\");\r\n      return;\r\n    }\r\n\r\n    // Check if email exists\r\n    if (await validationService.isEmailUsed(email)) {\r\n      setEmailExists(true);\r\n      return;\r\n    }\r\n\r\n    // Register\r\n    UserPool.signUp(\r\n      username,\r\n      password,\r\n      [new CognitoUserAttribute({ Name: \"email\", Value: email })],\r\n      [],\r\n      (err: any, data) => {\r\n        if (err) {\r\n          const code = err.code;\r\n          console.log(err);\r\n\r\n          switch (code) {\r\n            case \"UsernameExistsException\":\r\n              setUsernameExists(true);\r\n              break;\r\n            case \"InvalidPasswordException\":\r\n              setIsPasswordValid(false);\r\n              break;\r\n            default:\r\n              // MAKE GENERAL ERROR MESSAGE FOR IF THIS OCCURS !!!!!\r\n              console.log(\"an error occured\");\r\n              setErrorOccurred(true);\r\n          }\r\n        }\r\n        if (data) {\r\n          setHasSucceeded(true);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const areFieldsValid = () => {\r\n    let result: boolean = false;\r\n\r\n    if (username.length < 1) {\r\n      console.log(\"no handle!\");\r\n      setIsUsernameEmpty(true);\r\n      result = true;\r\n    } else if (username.length > 25) {\r\n      console.log(\"handle too long!\");\r\n      setIsUsernameTooLong(true);\r\n      result = true;\r\n    } else if (!checkIsHandleValid(username)) {\r\n      console.log(\"invalid handle\");\r\n      setIsUsernameValid(false);\r\n      result = true;\r\n    }\r\n\r\n    if (email.length < 1) {\r\n      console.log(\"no email!\");\r\n      setIsEmailEmpty(true);\r\n      result = true;\r\n    }\r\n\r\n    if (!validationService.isPasswordValid(password)) {\r\n      console.log(\"invalid password\");\r\n      setIsPasswordValid(false);\r\n      result = true;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setPasswordsMismatch(true);\r\n      result = true;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const checkIsHandleValid = (s: string) => {\r\n    if (s.length < 1) return false;\r\n    return !/[^a-zA-Z0-9]/.test(s);\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"register-title\">Register</div>\r\n\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"register-input-field\">\r\n          <div className=\"register-input-label \">Handle:</div>\r\n          <input\r\n            value={username}\r\n            onChange={(event) => {\r\n              setIsUsernameEmpty(false);\r\n              setIsUsernameTooLong(false);\r\n              setIsUsernameValid(true);\r\n              setUsernameExists(false);\r\n              setUsername(event.target.value);\r\n              setErrorOccurred(false);\r\n            }}\r\n            type=\"text\"\r\n            className={\r\n              isUsernameEmpty ||\r\n              !isUsernameValid ||\r\n              usernameExists ||\r\n              isUsernameTooLong\r\n                ? \"invalid\"\r\n                : \"\"\r\n            }\r\n          />\r\n\r\n          {/* Username field empty */}\r\n          {isUsernameEmpty ? (\r\n            <div className=\"form-error-message\">Handle field is empty</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {/* Username too long */}\r\n          {isUsernameTooLong ? (\r\n            <div className=\"form-error-message\">Handle is too long</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {/* Invalid username */}\r\n          {!isUsernameValid ? (\r\n            <div className=\"form-error-message\">\r\n              Invalid handle (no special characters allowed)\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {/* Username already exists */}\r\n          {usernameExists ? (\r\n            <div className=\"form-error-message\">\r\n              An account with this handle already exists\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"register-input-field\">\r\n          <div className=\"register-input-label\">Email:</div>\r\n          <input\r\n            value={email}\r\n            onChange={(event) => {\r\n              setIsEmailEmpty(false);\r\n              setEmailExists(false);\r\n              setIsEmailValid(true);\r\n              setEmail(event.target.value);\r\n              setErrorOccurred(false);\r\n            }}\r\n            type=\"email\"\r\n            className={isEmailEmpty || emailExists ? \"invalid\" : \"\"}\r\n          />\r\n\r\n          {/* Email field empty */}\r\n          {isEmailEmpty ? (\r\n            <div className=\"form-error-message\">Email field is empty</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {/* Email already exists */}\r\n          {emailExists ? (\r\n            <div className=\"form-error-message\">\r\n              An account with this email already exists\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {/* Invalid email */}\r\n          {!isEmailValid ? (\r\n            <div className=\"form-error-message\">Invalid email</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"register-input-field\">\r\n          <div className=\"register-input-label\">Password:</div>\r\n          <input\r\n            value={password}\r\n            onChange={(event) => {\r\n              setPasswordsMismatch(false);\r\n              setIsPasswordValid(true);\r\n              setPassword(event.target.value);\r\n              setErrorOccurred(false);\r\n            }}\r\n            type=\"password\"\r\n            className={!isPasswordValid || passwordsMismatch ? \"invalid\" : \"\"}\r\n          />\r\n\r\n          {/* Invalid password */}\r\n          {!isPasswordValid ? (\r\n            <div className=\"form-error-message\">\r\n              Password must be at least 8 characters long, and contain at least\r\n              one uppercase, lowercase, number and special character.\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <div className=\"register-input-field\">\r\n            <div className=\"register-input-label\">Confirm Password:</div>\r\n            <input\r\n              value={confirmPassword}\r\n              onChange={(event) => {\r\n                setPasswordsMismatch(false);\r\n                setConfirmPassword(event.target.value);\r\n                setErrorOccurred(false);\r\n              }}\r\n              type=\"password\"\r\n              className={!isPasswordValid || passwordsMismatch ? \"invalid\" : \"\"}\r\n            />\r\n          </div>\r\n\r\n          {/* Passwords don't match */}\r\n          {passwordsMismatch && isPasswordValid ? (\r\n            <div className=\"form-error-message\">! Passwords do not match !</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <button type=\"submit\">Submit</button>\r\n\r\n        {/* Success message */}\r\n        {hasSucceeded ? (\r\n          <div\r\n            style={{\r\n              fontSize: \"16px\",\r\n            }}\r\n            className=\"form-success-message\"\r\n          >\r\n            Success! Please verify your email before{\" \"}\r\n            <Link\r\n              style={{\r\n                color: \"#33c3f0\",\r\n              }}\r\n              to=\"/login\"\r\n            >\r\n              logging in\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {/* Error message */}\r\n        {errorOccurred ? (\r\n          <div className=\"form-error-message\">An error occurred.</div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <div id=\"register-login-link\">\r\n          Already have an account? <Link to=\"/login\">Login here</Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useContext } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { AccountContext } from \"./components/Account\";\r\nimport ContextProps from \"./Types/ContextProps\";\r\n\r\ninterface Props {\r\n  Component: any;\r\n  path: string;\r\n}\r\n\r\nconst PrivateRoute: React.FC<Props> = ({ Component, path }) => {\r\n  // isLoggedIn in props please!\r\n  const { isLoggedIn }: ContextProps = useContext(AccountContext);\r\n\r\n  return (\r\n    <Route\r\n      render={() =>\r\n        isLoggedIn === true ? (\r\n          <Component />\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/login\" }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useState } from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Admin from \"./components/Admin/Admin\";\nimport { Account } from \"./components/Account\";\nimport \"./App.css\";\n\n// Persistent\nimport LeftColumn from \"./components/SidebarLeft/LeftColumn\";\nimport RightColumn from \"./components/SidebarRight/RightColumn\";\n\n// Pages\nimport PageNotFound from \"./components/Shared/PageNotFound\";\nimport Timeline from \"./components/Timeline/Timeline\";\nimport UserPage from \"./components/UserPage/UserPage\";\nimport BitPage from \"./components/BitPage/BitPage\";\nimport Settings from \"./components/Settings/Settings\";\nimport Login from \"./components/Login/Login\";\nimport Register from \"./components/Register/Register\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst App: React.FC<{}> = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\n  const [myHandle, setMyHandle] = useState<string>(\"\");\n\n  return (\n    <Account\n      isLoggedIn={isLoggedIn}\n      setIsLoggedIn={setIsLoggedIn}\n      myHandle={myHandle}\n      setMyHandle={setMyHandle}\n    >\n      <Router basename=\"/\">\n        <div className=\"App\">\n          <LeftColumn />\n\n          <div id=\"mid-col\" className=\"main-col\">\n            <Switch>\n              {/* Login page (redirect if logged in) */}\n              <Route\n                path=\"/login\"\n                render={() =>\n                  isLoggedIn === true ? (\n                    <Redirect to={{ pathname: \"/home\" }} />\n                  ) : (\n                    <Login setMyHandle={setMyHandle} />\n                  )\n                }\n              />\n\n              {/* Registration page (redirect if logged in) */}\n              <Route\n                path=\"/register\"\n                render={() =>\n                  isLoggedIn === true ? (\n                    <Redirect to={{ pathname: \"/home\" }} />\n                  ) : (\n                    <Register />\n                  )\n                }\n              />\n\n              {/* Home page and redirects */}\n              <Route\n                path=\"/home\"\n                exact\n                render={() => (\n                  <Timeline timelineType=\"timeline\" key=\"timeline\" />\n                )}\n              />\n              <Route\n                path=\"/\"\n                exact\n                render={() => <Redirect to={{ pathname: \"/home\" }} />}\n              />\n\n              {/* All posts (redirect if not logged in)*/}\n              <Route\n                path=\"/all\"\n                exact\n                render={() =>\n                  isLoggedIn === true ? (\n                    <Timeline timelineType=\"all\" key=\"all\" />\n                  ) : (\n                    <Redirect to={{ pathname: \"/home\" }} />\n                  )\n                }\n              />\n\n              {/* Admin page */}\n              <PrivateRoute path=\"/admin\" Component={Admin} />\n\n              {/* Settings page */}\n              <PrivateRoute path=\"/settings\" Component={Settings} />\n\n              {/* Current user page */}\n              <Route\n                path=\"/me\"\n                render={() =>\n                  isLoggedIn === true ? (\n                    <Redirect to={{ pathname: `/u/${myHandle}` }} />\n                  ) : (\n                    <Redirect to={{ pathname: \"/login\" }} />\n                  )\n                }\n              />\n\n              {/* General user page */}\n              <Route path=\"/u/:handle\" render={() => <UserPage />} />\n\n              {/* General bit page */}\n              <Route path=\"/b/:post_id\" render={() => <BitPage />} />\n\n              {/* 404 page */}\n              <Route component={PageNotFound} />\n            </Switch>\n          </div>\n\n          <RightColumn />\n        </div>\n      </Router>\n    </Account>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}